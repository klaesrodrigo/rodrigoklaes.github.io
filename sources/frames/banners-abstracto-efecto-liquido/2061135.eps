%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Abstract liquid banners 2 up-01.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ayib
%%CreationDate: 2/6/19
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Abstract liquid banners 2 up-01</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-02-06T15:20:47+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-02-06T15:20:47+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-02-06T15:20:46+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBKwErAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABK/++AAEA&#xA;AQEr/74AAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;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&#xA;irsVdirsVdirsVdirsVf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:8b8aecfc-d5b1-41ef-91e4-3f34d6d635ea</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:8b8aecfc-d5b1-41ef-91e4-3f34d6d635ea</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fde78012-423e-124a-aada-07c2fefe3660</stRef:instanceID>
            <stRef:documentID>xmp.did:90930353-1a86-472b-ad5a-283d6e0904b1</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8b8aecfc-d5b1-41ef-91e4-3f34d6d635ea</stEvt:instanceID>
                  <stEvt:when>2019-02-06T15:20:47+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>499.999987</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BPreplay-Bold</stFnt:fontName>
                  <stFnt:fontFamily>BPreplay</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BPreplayBold.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>FiraSans-Light</stFnt:fontName>
                  <stFnt:fontFamily>Fira Sans</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 4.203;PS 004.203;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>FiraSans-Light.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 8</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=254 G=202 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>254</xmpG:red>
                           <xmpG:green>202</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=125 B=108</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>125</xmpG:green>
                           <xmpG:blue>108</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=22 G=216 B=216</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>22</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>216</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=126 B=178</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>126</xmpG:green>
                           <xmpG:blue>178</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=76 B=136</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>136</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=71 B=116 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>116</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=24 G=87 B=189 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>189</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=101 B=100 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>101</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 6</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=70 B=139</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>70</xmpG:green>
                           <xmpG:blue>139</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 4</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=71 B=116</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>116</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Freepik logo</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=183 B=198</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>183</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
438.257 118.472 mo
433.019 118.472 li
432.754 118.139 432.483 117.803 432.214 117.472 cv
438.257 117.472 li
438.257 118.472 li
.0402228 .022919 .0259098 0 cmyk
f
438.257 110.082 mo
425.78 110.082 li
425.472 109.749 425.158 109.413 424.846 109.081 cv
438.257 109.081 li
438.257 110.082 li
f
438.257 101.692 mo
418.396 101.692 li
418.293 101.359 418.186 101.024 418.078 100.692 cv
438.257 100.692 li
438.257 101.692 li
f
438.257 93.3018 mo
415.18 93.3018 li
415.022 92.9663 414.862 92.6337 414.698 92.3018 cv
438.257 92.3018 li
438.257 93.3018 li
f
438.257 84.9115 mo
410.203 84.9115 li
409.951 84.5749 409.694 84.2407 409.432 83.9116 cv
438.257 83.9116 li
438.257 84.9115 li
f
438.257 76.5215 mo
401.64 76.5215 li
401.151 76.1779 400.651 75.8446 400.139 75.5216 cv
438.257 75.5216 li
438.257 76.5215 li
f
438.257 68.1313 mo
373.206 68.1313 li
372.637 67.7902 372.077 67.4571 371.522 67.1313 cv
438.257 67.1313 li
438.257 68.1313 li
313.716 68.1313 mo
312.403 68.1313 li
312.403 67.1313 li
314.632 67.1313 li
314.32 67.4593 314.016 67.7907 313.716 68.1313 cv
f
292.183 193.682 mo
285.792 186.272 282.852 175.605 285.972 160.343 cv
286.617 157.187 289.458 151.03 293.933 143.346 cv
294.184 150.45 294.688 156.532 294.952 160.628 cv
295.796 173.704 291.796 183.653 292.183 193.682 cv
418.766 102.925 mo
404.838 89.4401 388.637 77.6283 375.484 69.5179 cv
376.522 69.4243 377.553 69.3769 378.583 69.3769 cv
379.654 69.3769 380.714 69.4283 381.774 69.5339 cv
389.165 70.2708 395.202 72.4079 400.139 75.5216 cv
400.651 75.8446 401.151 76.1779 401.64 76.5215 cv
404.653 78.6401 407.226 81.1384 409.432 83.9116 cv
409.694 84.2407 409.951 84.5749 410.203 84.9115 cv
411.929 87.2223 413.416 89.7065 414.698 92.3018 cv
414.862 92.6337 415.022 92.9663 415.18 93.3018 cv
416.302 95.6932 417.259 98.1712 418.078 100.692 cv
418.186 101.024 418.293 101.359 418.396 101.692 cv
418.523 102.102 418.646 102.513 418.766 102.925 cv
level3{
gsave
clp
[113.75 -113.75 113.75 113.75 311.425 213.042 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~PQ3cFPQ3cFPQ3cFPQ3cFPQ3cFPQ3cFPQ<iGPQ<fFPQ<fFPQElGPQEiFPQNoGPQNoGPls&HPls&HPls&H
Pm')HPm')HQ3K8JQ3T;JQ3]>JQ3];IQ3f>IQO5MKQO>PKQOGPJQOPSJQjtbLQk(eLQk:nMQkCqMQkLtM
QkV"MQkh.OR27:PR2@=PRMmLQRN!OQS/ijTS0'!VSKT0WSK]3WSL#BYSL,BXSL>KYSgbWZSgt]ZT.Ci[
T.Uo[TJ.)\TJ@/\TJR8]Tf*J_Tf<P_TfNV_U-&e`U-/h`U-K"bU-]+cUI5:dUIGCeUdtRfUe1UeV+^jh
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[113.75 -113.75 113.75 113.75 311.425 213.042 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~PEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPE_;rPa%DsPa%DsPa%Ds
Pa%DsPa%GuQ'IW"Q'IW"Q'IW"Q'IW"Q'IZ$QBmi&QBmi&QBmi&QBml(Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*
Q^=&*Q^=&+R$a8.R$a8/R@0J2R@0J3R[]e9S"#n;S=H+>S=H+>S=H+>S=H+>S=H+?SXl=BSXl=CSt;OF
St;OFT:_aJT:_aJT:_aJTV.sNTV.sNTV.sNTqS0RTqS0RTqS0RTqS0RU8"BVU8"BVUSFTZUSFTZUnjf^
~>
<~zzzzzzzz!!**$!<E3%!<N<(!WiE)!WrN,!s8W-!s8W-!sA`0"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#R
C_C#mgqG$47.K$O[@O$k*RS%1NdW%Ls![&.fEc&J5Wg&eYik',)#n'GV>u()@Z%(Ddl)(`=20)B'M5)]
Th<*?H7D+!;[L+X&!Q,9nH[,paia-7:/h-n$Jm.4Qet.k<,$/1`A)/hSe10JG491,:XA1c.'I2E!KQ3&
ioY3]]>a4?P_g4[)%o5X7V$6:+%,6psI47Rfm<84Z<D8kM`L~>
<~3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]T2\3B9)[3B9)[3B/uX3&ilW3&ilW3&`cT2`EZS2`EZS
2`EWQ2E!HO2E!HO2E!EM2)R3I1c.!E1G^dA1,:U?1,:R=0JG.50/"q1/hSb//hS_-/M/M)/1`;%.k<)!
.Olns.4H\p.4H\o-n$Jk-RL/d,pai_,U=W[,9nEX,9e<T+X&!O+<VdK+!)ID*??.?*#oq;)]BV4)&X;/
(`4&*()@W"'GM2o&eYfi&J5Te&.f?_%LrpW$k*LO$47+I#mgnE#RC\A#6tG;"U,&5"9\f/!WiB&!!!!!
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
442.561 181.647 mo
443.172 179.252 443.623 176.691 443.895 173.961 cv
444.877 164.108 441.488 153.787 435.432 143.642 cv
438.257 143.642 li
438.257 142.642 li
434.826 142.642 li
433.303 140.163 431.623 137.697 429.813 135.252 cv
438.257 135.252 li
438.257 134.252 li
429.064 134.252 li
427.18 131.763 425.159 129.293 423.036 126.862 cv
438.257 126.862 li
438.257 125.862 li
422.748 125.862 li
422.532 123.499 422.268 121.018 421.929 118.472 cv
433.019 118.472 li
444.041 132.291 451.188 146.958 449.817 160.711 cv
448.963 169.276 446.354 176.136 442.561 181.647 cv
432.214 117.472 mo
421.792 117.472 li
421.451 115.049 421.038 112.571 420.527 110.082 cv
425.78 110.082 li
428.03 112.509 430.183 114.975 432.214 117.472 cv
424.846 109.081 mo
420.317 109.081 li
419.874 107.026 419.362 104.966 418.766 102.925 cv
420.852 104.944 422.88 106.994 424.846 109.081 cv
.0402228 .022919 .0259098 0 cmyk
f
438.257 143.642 mo
435.432 143.642 li
435.234 143.31 435.03 142.973 434.826 142.642 cv
438.257 142.642 li
438.257 143.642 li
.093019 .0573739 .0683299 0 cmyk
f
438.257 135.252 mo
429.813 135.252 li
429.564 134.917 429.317 134.587 429.064 134.252 cv
438.257 134.252 li
438.257 135.252 li
f
438.257 126.862 mo
423.036 126.862 li
422.963 126.778 422.889 126.694 422.816 126.61 cv
422.794 126.362 422.771 126.112 422.748 125.862 cv
438.257 125.862 li
438.257 126.862 li
f
433.019 118.472 mo
421.929 118.472 li
421.884 118.139 421.839 117.806 421.792 117.472 cv
432.214 117.472 li
432.483 117.803 432.754 118.139 433.019 118.472 cv
f
425.78 110.082 mo
420.527 110.082 li
420.459 109.747 420.389 109.416 420.317 109.081 cv
424.846 109.081 li
425.158 109.413 425.472 109.749 425.78 110.082 cv
f
304.13 86.2954 mo
306.257 79.3991 309.332 73.1091 313.716 68.1313 cv
373.206 68.1313 li
373.953 68.5803 374.714 69.0432 375.484 69.5179 cv
369.346 70.0717 363.072 72.2222 356.845 75.5216 cv
356.75 75.5216 li
352.378 73.3165 348.908 71.9158 346.749 71.4744 cv
342.283 70.5615 338.186 70.1337 334.426 70.1337 cv
326.328 70.1337 319.797 72.1212 314.546 75.5216 cv
312.403 75.5216 li
312.403 76.5215 li
313.094 76.5215 li
309.499 79.1495 306.547 82.4775 304.13 86.2954 cv
371.522 67.1313 mo
314.632 67.1313 li
320.627 60.834 328.926 56.8831 340.348 56.8831 cv
344.108 56.8831 348.205 57.3109 352.671 58.2238 cv
356.139 58.9327 362.989 62.117 371.522 67.1313 cv
.0402228 .022919 .0259098 0 cmyk
f
313.094 76.5215 mo
312.403 76.5215 li
312.403 75.5216 li
314.546 75.5216 li
314.05 75.8431 313.568 76.1751 313.094 76.5215 cv
356.798 75.5461 mo
356.783 75.5382 356.766 75.5294 356.75 75.5216 cv
356.845 75.5216 li
356.829 75.5299 356.814 75.5377 356.798 75.5461 cv
.093019 .0573739 .0683299 0 cmyk
f
373.206 68.1313 mo
313.716 68.1313 li
314.016 67.7907 314.32 67.4593 314.632 67.1313 cv
371.522 67.1313 li
372.077 67.4571 372.637 67.7902 373.206 68.1313 cv
f
422.816 126.61 mo
402.755 103.738 373.35 83.9039 356.798 75.5461 cv
356.814 75.5377 356.829 75.5299 356.845 75.5216 cv
363.072 72.2222 369.346 70.0717 375.484 69.5179 cv
388.637 77.6283 404.838 89.4401 418.766 102.925 cv
419.362 104.966 419.874 107.026 420.317 109.081 cv
420.389 109.416 420.459 109.747 420.527 110.082 cv
421.038 112.571 421.451 115.049 421.792 117.472 cv
421.839 117.806 421.884 118.139 421.929 118.472 cv
422.268 121.018 422.532 123.499 422.748 125.862 cv
422.771 126.112 422.794 126.362 422.816 126.61 cv
level3{
gsave
clp
[113.75 -113.75 113.75 113.75 311.425 213.042 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~S-hU`S-hU`S-hU`S-hU`S-hU`S-hU`SI@gbSI@gbSI@gbSI@gbSIRsdSIRsdSIRsdSI\!dSI[pbSI[pb
Se4-dSe4-dSeF6eSeF6eSeX?fSeX?fT,9ZjT,9ZjTGfllTH#umTH#okTcH&lTcZ/mTcZ/mTcZ/mTcl8n
Tcl8nU*;DoU*MJoUF%YpUF7bqUF@eqUF@eqUFRnrUb++tUb=4uV(aA!V(sJ"VDK\$VDT\#V`,k$V`5k#
V`Gt$W&u1&W'2:'W'D@'WB_C&WC%O'W^Ra)W^[d)W^mm*X%F!)XA'6+XA09+XABB,X\oQ-X]5Z-X]Gc.
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[113.75 -113.75 113.75 113.75 311.425 213.042 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~S"#n:S"#n:S"#n:S"#n:S"#n:S"-"=S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=H+>S=Q4A
SXl=BSXl=BSXl=BSXl=BSXl=BSXl@DSt;OFSt;RHT:_aJT:_aJT:_dLTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sOTqS0RTqS0SU8"BVU8"BVU8"BVU8"BVU8"BWUSFTZUSFT[Unjf^Unjf_V5:#bV5:#cVP^5fVP^5f
VP^5fVl-GjVl-GjVl-GjW2QYnW2QYnWMukrWMukrWMukrWiE)!X/i;%X/i;%X/i;%XK8M)XK8M)XK8M)
~>
<~#mgnE#mgnE#mgnE#mgnE#mgnE#mq"I$O[=M$O[=M$O[=M$OdFQ%1NaU%1NaU%1WjX%LrsY%LrsY%M'']
&.fBa&.fEc&eYfi&eYik'GM5q'GM8t()Ic'(Ddo*)&X>2)]K_8)]Kb:*#ot>*Zc@D*Zc@D*ZcCF+<VdL
+<VdM+X&!Q+sS<X,UF``-7:/h-n$Jl-n$Jm.4Qet.kE5'/M8Y/0/"t40JP:;1,C^C1c.$H2)[?O2`EZT
3&ioY3]]>a4?Pbi5!D1q5<h@s5X@\&6UO7077BX67Rfm<84Z<D8kVfN9he>V:/4S\:f("d;GpFm<E3(#
~>
<~6:+"*6:+"*6:+"*6:+"*6:+"*6:+"*6:!n'5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5sR\"5<_7p5!D.o
5!D+m4Ztqk4Ztni4?P_g4?P\e4$,Mc4$,Mc4$,Mc4$,Ja3]]8]3&iiU2`EWQ2E!EM2)R6K2)R6K2)R3I
1c.$G1c.$F1GU^?0eb:70/"t2/hSb./M/P+/M/P*/1`>&.k<,".Olns.4H\o-n$Jk-RL/d,pX`\,9e<T
+X&!P+<VdL+!2RH*Zc=B*#on:)B'J2(`4),(Ddl(()@Z$'bh;o&J5Qc%hB0]%LrsY%1N^S$O[:J#RC\A
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
327.9 225.871 mo
318.491 225.871 309.488 223.403 302.219 215.549 cv
294.791 207.524 292.448 200.584 292.183 193.682 cv
297.036 199.309 303.88 203.059 311.57 205.517 cv
318.156 210.846 325.842 212.62 333.822 212.62 cv
340.964 212.62 348.339 211.197 355.361 209.627 cv
361.053 209.376 365.912 208.981 369.31 208.762 cv
370.482 208.686 371.626 208.652 372.746 208.652 cv
377.76 208.652 382.29 209.333 386.571 210.014 cv
390.852 210.695 394.884 211.375 398.905 211.375 cv
405.79 211.375 412.643 209.379 420.649 201.969 cv
422.746 200.028 424.432 197.955 425.771 195.778 cv
432.344 192.48 438.227 187.944 442.561 181.647 cv
433.222 218.301 386.457 217.099 368.603 219.028 cv
357.17 220.264 342.077 225.871 327.9 225.871 cv
293.933 143.346 mo
293.311 125.774 294.233 101.931 304.13 86.2954 cv
299.395 101.649 299.352 120.01 299.999 133.566 cv
297.744 137.005 295.709 140.297 293.933 143.346 cv
.0402228 .022919 .0259098 0 cmyk
f
398.905 211.375 mo
394.884 211.375 390.852 210.695 386.571 210.014 cv
382.29 209.333 377.76 208.652 372.746 208.652 cv
371.626 208.652 370.482 208.686 369.31 208.762 cv
365.912 208.981 361.053 209.376 355.361 209.627 cv
362.275 208.08 368.852 206.391 374.524 205.778 cv
385.702 204.57 408.208 204.589 425.771 195.778 cv
424.432 197.955 422.746 200.028 420.649 201.969 cv
412.643 209.379 405.79 211.375 398.905 211.375 cv
311.57 205.517 mo
303.88 203.059 297.036 199.309 292.183 193.682 cv
291.796 183.653 295.796 173.704 294.952 160.628 cv
294.688 156.532 294.184 150.45 293.933 143.346 cv
295.709 140.297 297.744 137.005 299.999 133.566 cv
300.268 139.178 300.654 143.965 300.874 147.377 cv
302.298 169.452 289.92 182.612 308.141 202.299 cv
309.245 203.492 310.39 204.562 311.57 205.517 cv
level3{
gsave
clp
[113.75 -113.75 113.75 113.75 311.425 213.042 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[113.75 -113.75 113.75 113.75 311.425 213.042 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
333.822 212.62 mo
325.842 212.62 318.156 210.846 311.57 205.517 cv
322.266 208.935 334.6 209.855 345.501 209.855 cv
348.965 209.855 352.285 209.762 355.361 209.627 cv
348.339 211.197 340.964 212.62 333.822 212.62 cv
425.771 195.778 mo
429.254 190.116 430.389 183.752 430.292 177.202 cv
438.257 177.202 li
438.257 176.202 li
430.267 176.202 li
430.186 173.751 429.941 171.281 429.59 168.812 cv
438.257 168.812 li
438.257 167.812 li
429.442 167.812 li
429.062 165.331 428.584 162.86 428.066 160.422 cv
438.257 160.422 li
438.257 159.422 li
427.851 159.422 li
427.304 156.907 426.724 154.434 426.175 152.032 cv
438.257 152.032 li
438.257 151.032 li
425.947 151.032 li
425.368 148.469 424.835 145.992 424.432 143.642 cv
435.432 143.642 li
441.488 153.787 444.877 164.108 443.895 173.961 cv
443.623 176.691 443.172 179.252 442.561 181.647 cv
438.227 187.944 432.344 192.48 425.771 195.778 cv
434.826 142.642 mo
424.267 142.642 li
424.121 141.712 423.997 140.801 423.901 139.915 cv
423.752 138.534 423.623 136.969 423.492 135.252 cv
429.813 135.252 li
431.623 137.697 433.303 140.163 434.826 142.642 cv
429.064 134.252 mo
423.417 134.252 li
423.248 131.996 423.07 129.509 422.838 126.862 cv
423.036 126.862 li
425.159 129.293 427.18 131.763 429.064 134.252 cv
.093019 .0573739 .0683299 0 cmyk
f
438.257 177.202 mo
430.292 177.202 li
430.287 176.869 430.279 176.536 430.267 176.202 cv
438.257 176.202 li
438.257 177.202 li
.144869 .0940871 .106996 0 cmyk
f
438.257 168.812 mo
429.59 168.812 li
429.543 168.479 429.493 168.144 429.442 167.812 cv
438.257 167.812 li
438.257 168.812 li
f
438.257 160.422 mo
428.066 160.422 li
427.995 160.089 427.923 159.754 427.851 159.422 cv
438.257 159.422 li
438.257 160.422 li
f
438.257 152.032 mo
426.175 152.032 li
426.098 151.697 426.022 151.364 425.947 151.032 cv
438.257 151.032 li
438.257 152.032 li
f
435.432 143.642 mo
424.432 143.642 li
424.374 143.305 424.32 142.973 424.267 142.642 cv
434.826 142.642 li
435.03 142.973 435.234 143.31 435.432 143.642 cv
f
429.813 135.252 mo
423.492 135.252 li
423.467 134.924 423.442 134.59 423.417 134.252 cv
429.064 134.252 li
429.317 134.587 429.564 134.917 429.813 135.252 cv
f
423.036 126.862 mo
422.838 126.862 li
422.831 126.778 422.823 126.694 422.816 126.61 cv
422.889 126.694 422.963 126.778 423.036 126.862 cv
f
299.999 133.566 mo
299.352 120.01 299.395 101.649 304.13 86.2954 cv
306.547 82.4775 309.499 79.1495 313.094 76.5215 cv
355.02 76.5215 li
351.308 78.6231 347.616 81.1177 343.981 83.9116 cv
312.403 83.9116 li
312.403 84.9115 li
342.698 84.9115 li
339.794 87.2076 336.932 89.6854 334.125 92.3018 cv
312.403 92.3018 li
312.403 93.3018 li
333.062 93.3018 li
330.564 95.6727 328.111 98.1491 325.723 100.692 cv
312.403 100.692 li
312.403 101.692 li
324.79 101.692 li
322.552 104.108 320.369 106.582 318.255 109.081 cv
312.403 109.081 li
312.403 110.082 li
317.414 110.082 li
310.802 117.989 304.88 126.125 299.999 133.566 cv
356.75 75.5216 mo
314.546 75.5216 li
319.797 72.1212 326.328 70.1337 334.426 70.1337 cv
338.186 70.1337 342.283 70.5615 346.749 71.4744 cv
348.908 71.9158 352.378 73.3165 356.75 75.5216 cv
.093019 .0573739 .0683299 0 cmyk
f
317.414 110.082 mo
312.403 110.082 li
312.403 109.081 li
318.255 109.081 li
317.974 109.414 317.693 109.748 317.414 110.082 cv
.144869 .0940871 .106996 0 cmyk
f
324.79 101.692 mo
312.403 101.692 li
312.403 100.692 li
325.723 100.692 li
325.411 101.024 325.1 101.358 324.79 101.692 cv
f
333.062 93.3018 mo
312.403 93.3018 li
312.403 92.3018 li
334.125 92.3018 li
333.77 92.6329 333.415 92.9664 333.062 93.3018 cv
f
342.698 84.9115 mo
312.403 84.9115 li
312.403 83.9116 li
343.981 83.9116 li
343.553 84.2407 343.125 84.5742 342.698 84.9115 cv
f
355.02 76.5215 mo
313.094 76.5215 li
313.568 76.1751 314.05 75.8431 314.546 75.5216 cv
356.75 75.5216 li
356.766 75.5294 356.783 75.5382 356.798 75.5461 cv
356.205 75.8612 355.613 76.1859 355.02 76.5215 cv
f
345.501 209.855 mo
334.6 209.855 322.266 208.935 311.57 205.517 cv
310.39 204.562 309.245 203.492 308.141 202.299 cv
289.92 182.612 302.298 169.452 300.874 147.377 cv
300.654 143.965 300.268 139.178 299.999 133.566 cv
304.88 126.125 310.802 117.989 317.414 110.082 cv
317.693 109.748 317.974 109.414 318.255 109.081 cv
320.369 106.582 322.552 104.108 324.79 101.692 cv
325.1 101.358 325.411 101.024 325.723 100.692 cv
328.111 98.1491 330.564 95.6727 333.062 93.3018 cv
333.415 92.9664 333.77 92.6329 334.125 92.3018 cv
336.932 89.6854 339.794 87.2076 342.698 84.9115 cv
343.125 84.5742 343.553 84.2407 343.981 83.9116 cv
347.616 81.1177 351.308 78.6231 355.02 76.5215 cv
355.613 76.1859 356.205 75.8612 356.798 75.5461 cv
373.35 83.9039 402.755 103.738 422.816 126.61 cv
422.823 126.694 422.831 126.778 422.838 126.862 cv
423.07 129.509 423.248 131.996 423.417 134.252 cv
423.442 134.59 423.467 134.924 423.492 135.252 cv
423.623 136.969 423.752 138.534 423.901 139.915 cv
423.997 140.801 424.121 141.712 424.267 142.642 cv
424.32 142.973 424.374 143.305 424.432 143.642 cv
424.835 145.992 425.368 148.469 425.947 151.032 cv
426.022 151.364 426.098 151.697 426.175 152.032 cv
426.724 154.434 427.304 156.907 427.851 159.422 cv
427.923 159.754 427.995 160.089 428.066 160.422 cv
428.584 162.86 429.062 165.331 429.442 167.812 cv
429.493 168.144 429.543 168.479 429.59 168.812 cv
429.941 171.281 430.186 173.751 430.267 176.202 cv
430.279 176.536 430.287 176.869 430.292 177.202 cv
430.389 183.752 429.254 190.116 425.771 195.778 cv
408.208 204.589 385.702 204.57 374.524 205.778 cv
368.852 206.391 362.275 208.08 355.361 209.627 cv
352.285 209.762 348.965 209.855 345.501 209.855 cv
level3{
gsave
clp
[113.75 -113.75 113.75 113.75 311.425 213.042 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~V&E&.V&E&.V&E&.V&E&.V&E&.V&E&.V&W//V&W//V&W//V&W//V&W//V&W//V&W//V&`2/VB&5.VB&5.
VB8>/VB8>/VBJG0VBJG0V]nS1V]nS1V^4e4V^4e4V^=h4V^Y"6W$jt4W%((5W@U76W@U76W@U76W@g@7
W@g@7W\6L8X"c[9X"ud:X#2j:X#Ds;X#Ds;X#N!;X?&3=XZJ<=XZ\E>XZ\E>Y!+T@Y!=Z@Y<jiAY='rB
Y=0rAYX^/CYXp8DYY-AEYY-;CYtcMDZ;;\EZ;MeFZ;VhFZW.tFZre1GZs"7G[9OII[9OCG[U0[J[UBdK
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[113.75 -113.75 113.75 113.75 311.425 213.042 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^UnsoaV5:#bV5:#b
V5:#bV5:#bV5:#bV5:&dVP^5fVP^5fVP^5fVP^5fVP^5fVP^8hVl-GjVl-JlW2QYnW2QYnW2QYnW2QYn
W2QYoWMuksWiE)!WiE)!WiE)!WiE)!WiE)!WiE)"X/i;&XK8M)XK8M)XK8M*Xf\_-Xf\_.Y-+q1Y-+q1
Y-+q1YHP.5YHP.5YHP.5YHP.5Yct@9Z*CR=Z*CR=Z*CR=ZEgdAZa7!EZa7!E['[3I['[3I[C*EM[C*EM
~>
<~)&X;0)&X;0)&X;0)&X;0)&X;0)&aD4)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]Th;*#oq<*#oq<*$$%@
*Zc@D*ZcCF+<VdL+<VgN+X&!P+X&$S,:"N[,U=Z^,palc-R^Ak-n$Jl.4H_r.k<,#.k<,#.k</%/M/P+
/M/P,/hSb00/,(70etL?1GgpG2)[?N2E!HP2`EZT3&ru[3]];`4$5Vf4?P_h4Ztql5!M7s5X@\&6:4+.
6psF277B[87n6*@8P)NH8kM]J92&#R:/4S\:f("d;GpCj;c?Xp<E<.%=BJ^/>$>-7>?b<9>[1Q@?XI2K
~>
<~9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9M8#O91qoN91qoN91qoN91qoN91qoN91qoN91hfJ8OuBC84Z9B
84Z6@7n6'>7n6$<7Rfj:7Rfg877BX677BX677BX677BU46psC06:*t(5s[b$5<h=q5!D.o5!D.o5!D+m
4Ztqk4Ztqj4?GVc3]];^3B/uW2`EZR2E!HO2E!HN2)R6J1c$pC1,:U>0ekC;0ekC;0eb:70.nk//M/P*
/1`;%.Olnt.4H\p-n$Jl-RU5f,pX`\+sJ0R+<VdL+!2RH*ZZ7@)]BV4(`4&*()@Z$'bqDs',)#m&eYfi
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
334.248 55.6741 mo
350.026 58.8993 435.857 113.39 431.394 158.161 cv
426.957 202.667 375.122 201.173 356.101 203.228 cv
337.08 205.283 307.939 219.436 289.718 199.749 cv
271.497 180.062 283.875 166.902 282.451 144.827 cv
281.027 122.753 272.654 43.0835 334.248 55.6741 cv
cp
level3{
gsave
clp
[121.687 121.687 -121.687 121.687 277.872 82.9032 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~)?;i!)?;i!)?;i!)?;i!)?;i!)ZVr")ZVr")ZVr")ur&#)ur&#)ur#"*<8,#*WS5$*rn>%*rn>%+94G&
+94G&+TOP'+ojV',60_(,QKh),lfq*-3-%+-NH.,-ic7-.0)@..KDF..f_O//-%X0/H@a1/c[j20*!p2
0E=$31&s651B9?61]TE62?5W82ZP`92uki:3WM&<49.8>4TI>>4odG?5QEV@63&hB6i]"C70#+D7fY:E
8H:LG8cURG9E6dI:&lsJ:]N0L;#i9M;ZJHN;ueQO<raiQ=9'rR>6$8U>lZGV?iVbY@K7t[A,n1]AcO@^
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[121.687 121.687 -121.687 121.687 277.872 82.9032 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~)&X;0)&X;0)&X;0)&X;0)&aD3)B'M4)B'M4)B0V7)]K_8)]K_8)]Th;*$$%?*?H7C*Zc@D*ZlIG+!2RH
+!2UJ+<VgN+X&$R+sJ6V,9nHZ,U=Z^,palb-71)f-RU;j-n$Mn.4H_r.Olr!.k</%/1`A)/M/S-/hSe1
0/"t40JP:;1,:U@1G^gD1c7-K2E!HP2`EZT3&ru[3]fDc4?P_h4Ztql5!M7s5X@\&6:4+.6psF377Ka:
7n6*@8P)KF8kM`L9MA/T:/4S\:f'tb;,L4h;c?Un<)lq!='&I)=BSd1>?b?;?!UcD?smDO@U`hWA7T7_
~>
0 <~3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]T2\3B9)[3B9)[3B9)[3B9)[3B9)[
3B9)[3B9)[3B9&Y3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&ilW3&iiU2`EZS2`EZS2`EZS2`EZS2`EWQ
2E!HO2E!HO2E!HO2E!HN2)R6K2)R6K2)R6K2)R6K2)R6K2)R6J1c.$G1c.$F1G^gC1G^gB1,:U?1,:U>
0ekC;0ekC;0JG170JG170/"t30/"t30/"t3/hSb//hSb//M/P+/M/P+/M/P+/1`>'/1`>'/1`>'/1`>'
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
401.327 183.155 mo
389.882 197.375 379.77 226.584 354.191 225.598 cv
328.613 224.611 328.082 207.378 312.236 193.451 cv
306.643 188.531 295.621 179.361 285.899 168.09 cv
269.132 148.657 256.234 122.97 281.791 102.193 cv
283.384 100.892 285.129 99.6133 287.026 98.356 cv
299.848 89.8805 394.521 68.7349 421.714 101.954 cv
448.744 134.979 412.772 168.935 401.327 183.155 cv
cp
level3{
gsave
clp
[36.1272 152.096 -152.096 36.1272 337.349 77.3326 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.1272 152.096 -152.096 36.1272 337.349 77.3326 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
280.105 97.8018 mo
279.806 97.7793 li
278.564 97.6854 277.383 97.1948 276.676 96.2378 cv
276.058 95.4011 274.999 94.9001 273.81 95.0987 cv
272.797 95.2678 271.917 96.0114 271.586 96.9833 cv
270.938 98.8848 272.257 100.736 274.114 100.877 cv
274.973 100.942 275.772 100.627 276.349 100.075 cv
277.178 99.2799 278.305 98.8746 279.45 98.9612 cv
280.076 99.0084 li
281.388 99.1076 282.441 100.007 282.938 101.226 cv
283.841 103.441 286.076 105.006 288.721 104.847 cv
291.326 104.69 293.569 102.713 294.06 100.15 cv
294.728 96.6634 292.214 93.4748 288.777 93.2152 cv
286.438 93.0384 284.316 94.2687 283.244 96.1917 cv
282.626 97.3009 281.371 97.8975 280.105 97.8018 cv
cp
level3{
gsave
clp
[26.5321 2.69166 -2.69166 26.5321 269.451 97.112 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[26.5321 2.69166 -2.69166 26.5321 269.451 97.112 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
415.942 140.978 mo
415.942 149.54 409 156.482 400.437 156.482 cv
391.875 156.482 384.933 149.54 384.933 140.978 cv
384.933 132.415 391.875 125.473 400.437 125.473 cv
409 125.473 415.942 132.415 415.942 140.978 cv
cp
level3{
gsave
clp
[36.1113 3.66347 -3.66347 36.1113 382.263 139.134 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.1113 3.66347 -3.66347 36.1113 382.263 139.134 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
395.299 112.314 mo
395.299 116.31 392.06 119.549 388.065 119.549 cv
384.069 119.549 380.83 116.31 380.83 112.314 cv
380.83 108.319 384.069 105.08 388.065 105.08 cv
392.06 105.08 395.299 108.319 395.299 112.314 cv
cp
level3{
gsave
clp
[16.8503 1.70945 -1.70945 16.8503 379.584 111.454 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[16.8503 1.70945 -1.70945 16.8503 379.584 111.454 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
369.614 188.989 mo
369.124 188.952 li
367.082 188.798 365.144 187.992 363.982 186.42 cv
362.966 185.046 361.226 184.222 359.273 184.549 cv
357.609 184.827 356.163 186.048 355.619 187.645 cv
354.555 190.769 356.721 193.81 359.772 194.041 cv
361.183 194.147 362.497 193.631 363.444 192.724 cv
364.807 191.418 366.657 190.752 368.539 190.894 cv
369.567 190.972 li
371.722 191.135 373.453 192.613 374.269 194.614 cv
375.753 198.254 379.424 200.824 383.769 200.563 cv
388.048 200.306 391.733 197.058 392.54 192.847 cv
393.638 187.119 389.507 181.881 383.862 181.454 cv
380.018 181.164 376.533 183.185 374.772 186.344 cv
373.756 188.167 371.694 189.146 369.614 188.989 cv
cp
level3{
gsave
clp
[-35.3214 -4.32563e-15 4.32563e-15 -35.3214 394.919 191.004 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-35.3214 -4.32563e-15 4.32563e-15 -35.3214 394.919 191.004 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
432.086 142.451 mo
431.247 140.547 432.111 138.323 434.015 137.484 cv
435.919 136.646 438.143 137.509 438.981 139.413 cv
439.82 141.317 438.956 143.541 437.052 144.38 cv
435.148 145.218 432.925 144.355 432.086 142.451 cv
cp
level3{
gsave
clp
[2.64266 -6.93144 6.93144 2.64266 434.245 144.312 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.64266 -6.93144 6.93144 2.64266 434.245 144.312 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
290.473 194.818 mo
289.644 192.938 290.497 190.742 292.378 189.914 cv
294.258 189.085 296.454 189.938 297.283 191.819 cv
298.111 193.699 297.258 195.895 295.377 196.724 cv
293.497 197.552 291.301 196.699 290.473 194.818 cv
cp
level3{
gsave
clp
[2.6099 -6.8455 6.8455 2.6099 292.605 196.657 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.6099 -6.8455 6.8455 2.6099 292.605 196.657 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
437.349 133.812 mo
436.86 132.7 437.364 131.402 438.476 130.912 cv
439.588 130.422 440.886 130.927 441.376 132.038 cv
441.866 133.15 441.361 134.449 440.249 134.938 cv
439.138 135.428 437.839 134.924 437.349 133.812 cv
cp
level3{
gsave
clp
[1.54306 -4.04729 4.04729 1.54306 438.61 134.899 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.54306 -4.04729 4.04729 1.54306 438.61 134.899 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
0 0 0 0 cmyk
%ADOBeginSubsetFont: BPreplay-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /BPreplay-Bold def/FontInfo 7 dict dup begin/Notice (Copyright (c) 2004 by Magenta/ 2008 by George Triantafyllakos. Released under the SIL Open Font License (OFL).) def/Weight (Bold) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 65 /A putdup 66 /B putdup 67 /C putdup 68 /D putdup 73 /I putdup 76 /L putdup 81 /Q putdup 82 /R putdup 83 /S putdup 84 /T putdup 85 /U putdef/FontBBox {-169 -245 1370 981} defendsystemdict begindup /Private8 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 584 600 779 806] def/OtherBlues [-245 -205] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings12 dict dup begin/A <1C60D8A8C9B65DE774DEE3784566E79C13FE4D63EEA1AAC649D3D9CFC97D0E398B79D2BFFA0A0549BF8EB52FFA1AE46CEE305501160232AEE671C54B5DAD2EE9270C937B26E6A352E508A33A425E4C5FDEFA9BA6E84F73415104026ED56241343985434D> |-/B <1C60D8A8C9B7D54518E97C0AAF82DF3C5160C292B24228E08054A594C5A6723B7BACBD1D97980FEB0D866D2FCFE8B525A1CB4B852B76C0923F4D0522EDEBA101EB0BF86FB10A4C456E45939351C38FB383177CCF8BBE2228B198676469C28276EC50349F5F57D7AC8C79E2045E> |-/C <1C60D8A8C9B63D102089FFF6DC6C6B57CF71FB502802F27721615247CEE4FEA6BDBDAA3359DE52C9A387AC1F3FF7305709BF4F271A8E68BC9F204ACA8C072984B18A30AD47DC61E633E7E10E4998036E332D25881A1F8471026C91B66AB45A05DF5D30F6FFB3724AC526E1B2B3BC9024A84EFC> |-/D <1C60D8A8C9B649C73EB5E035ACDA6B2F38535C027FFD8B6AD31D00319CF67266A3CB9E286BEE646ADCA9433F6DD49C7C0027C259FCDA8145F4B1C33C323922E6A36EE6846C4FCEEECA> |-/I <1C60D8A8C9B89E84D16CB5DD099195131C9C655E25982575AF334DE39D19445D1DC30C07> |-/L <1C60D8A8C9B7BF8632EDC54A241CB0574002FF0B4A2F0653C11BC53C0E9F12CA4D92E0344A522A2F4DB2E640E45FD8> |-/Q <1C60D8A8C9B6F14C3B59D63963FDAE381E8EB5711197D023444CCA0C367D94E097CA8FE8D167D86492EC225066FB942725D1D23ABF6F63F38B254B1C7A330649A7725F4D3C3FD779EF2D59F264F99DFA5FA4AE7596947C443272BA4B87003A78F9A27B3421825177471C991B6671F2A651DA5E4705C14EAFC77C49BDA64E5C80F24BE77FF167030147BE0E32F9FEEC9C8136E266C82C333DF1756299> |-/R <1C60D8A8C9B661292F55E7AEEC6E7E736C62BF3EE8FF8EA87105A2DCF04830782B3F4B762F5265D515264043EA66BC646F7347309273C7590019B32876A447EBC9009CA46727B8437797556A4F951F1D4CE2AAF9F689F7DE90818025026297F76DFDA6CC44> |-/S <1C60D8A8C9B79B8E96303A837531F52A1913DB45BCDE9A53F65C1D678C9CA1BF8B0FC249B8E2B2A08127249088A52C76B9C6F8FF356FEC4A9E0FFBA34BED75C6F3EB70B2BA727F894849E985D09CDE5B38DE292E0FF4FE5774A54C3FDA23A0BF9831AD808D8D97543842019BD25B8E5DEA9B9D0CCB7F433DFF1969F13FEE6CD16B5A8D64501515DBCBE8DA> |-/T <1C60D8A8C9B78D34AA3B8669C650661ACF43C394AE991D91AFDAE306FE9532D15B99467CF93F5FC336506F5F60430BBD20C8349D1DCE> |-/U <1C60D8A8C9B620B7986A556C2C075C8075258DA6D8B8C8B35FF7743357B33E2D4B0E0C6AAD3B95BA0FF570C029732EEE2A2E1241883161B989E8F16249DCF1DD3799A507D6CD3E> |-/.notdef <1C60D8A8C9B8517FED> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MNBOCF+BPreplay-Bold /BPreplay-Bold findfont ct_VMDictPut/MNBOCF+BPreplay-Bold*1 [65{/.notdef}rp /A /B /C /D 4{/.notdef}rp /I 2{/.notdef}rp /L 4{/.notdef}rp /Q /R /S /T /U 170{/.notdef}rp]MNBOCF+BPreplay-Bold nfMNBOCF+BPreplay-Bold*1 [17.3034 0 0 -17.3034 0 0 ]msf291.227 122.344 mo(ABSTRACT)[12.6313 11.0566 9.36133 9.96582 11.5933 11.749 13.1851 0 ]xsh291.227 143.108 mo(LIQUID)[9.65527 4.39502 14.085 12.7173 4.39502 0 ]xsh%ADOBeginSubsetFont: FiraSans-Light Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2019 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /FiraSans-Light def/FontInfo 7 dict dup begin/Notice (Digitized data copyright 2012-2016, The Mozilla Foundation and Telefonica S.A.) def/Weight (Light) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 69 /E putdup 73 /I putdup 76 /L putdup 77 /M putdup 79 /O putdup 80 /P putdup 82 /R putdup 83 /S putdup 85 /U putdef/FontBBox {-167 -350 1360 1057} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-13 -0 523 536 562 575 685 698 736 749] def/OtherBlues [-210 -197] def/FamilyBlues [-14 -0 564 578 689 703 739 753] def/FamilyOtherBlues [-216 -202] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [49] def/StdVW [58] def/StemSnapH [49] def/StemSnapV [58] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings11 dict dup begin/space <1C60D8A8C9B855A1B9> |-/E <1C60D8A8C9B7BB5CD64482032327B47EDD766DC4CED885542A830F3F7D14AE0BFF7F65D05FA2CBA014AAC711F8C2CDC69347E1F28A63EE8769EAB8458A> |-/I <1C60D8A8C9B850A987A0FAA1E8404C07A430E17B75BB05A9D39243FFBE4774D465> |-/L <1C60D8A8C9B75E5E69FAD6271930A9354CC8BFBD90F832028354EBEBD7F8AF9623139E6EB78296D5> |-/M <1C60D8A8C9B6F715B17D53FB01EC9FDE0C1D4E2318A2243468C9E98C2BDDE0E170C6378F5E43F6990F256750E10B69CCB097A3E90312C591C96453DB7E20AC0322C93AD82527B226412F99B4C077CA5B70433E9E3C> |-/O <1C60D8A8C9B6269C5CE1F70855C5BDB6E8D93B4451B5555B883CABCF87463943CB24433391BB19B8707AAC0216855891B3DFD7E162DDB2CBC9A0B66D391B10F638B6C571B7B4BA5A35E108C8668512BD5D416D0333DBC0BB05155F228DB7674C> |-/P <1C60D8A8C9B7E1F8B3ADEC6A0ADC6F6270BB96597143A35BB2F48D2CB60B4A69DA76D12CCC8AFFE33E29D6D4E97C0E7C5C012AEA9F3AB8130602E6CDC944AFEB3AF0C3CA0A619B5079ACBDDFA9BBC39F5EA77E93CE7C42> |-/R <1C60D8A8C9B7CDD895E9B3C4F183DDA971B6C287B2C1E497A20D0550EB53D11F073C36C66E22635804DC102026C6D3CDC801BE6478047D250FF7E3ECBD9A3AF96DA80A3823E9C7298D32942E058475E06636B3371B6D20C18E> |-/S <1C60D8A8C9B780B36E26F01798A047E5032B5ECB16A5E91699F1A5FCC411A11EA75F033FE54721075D99C049E2E08A638614DF4A266F30D50A21A3AD62EBAAC2F67A7BB2D4AB5DA5249CC2F317BAA7484FB635BEAC1C5ACD33C2312ECFD8D2C549B0C53CCD263AF9397FFB2702BB6C0045914201DB73D6> |-/U <1C60D8A8C9B6415B3C7C34F4D4B72F6DAA537293DA506AC73B8566041D4CD272CDA6209EF049718285B207FCA367CB7B0B11047B5A749AD6EBC99F972F22EA6D20213A1E2E8B> |-/.notdef <1C60D8A8C9B64FADB619E309546AF58CE0C708D6A2D4DA16668C7F2D4A1D078EC9DE64A936E6FEA4D83073AAEF119EC88636B96A49D19F6F1657B25E59E7A3800CD9A4C80D13A0997606698B69F1F3642D79B44EC413EB245DB0AD18F8791EFB72BCE43C206E058EA180575C5C1EA0C4823EB9952077B7037B412842976C96CC34315953461D2FBA77C06212EA6552F5C0B7995373926B6B5EDBD74EA4C57A47466BF878A5C57562BD65CAB62491DAE7FBF318BBAEF2FF9B165CF17EADD8E1B00F6E3930FA87A8B1308A8F39> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/MNBOCG+FiraSans-Light /FiraSans-Light findfont ct_VMDictPut/MNBOCG+FiraSans-Light*1 [32{/.notdef}rp /space 36{/.notdef}rp /E 3{/.notdef}rp /I 2{/.notdef}rp /L /M /.notdef /O /P /.notdef /R /S /.notdef /U 170{/.notdef}rp]MNBOCG+FiraSans-Light nfMNBOCG+FiraSans-Light*1 [13.8531 0 0 -13.8531 0 0 ]msf291.226 159.611 mo(LOREM IPSUM)[5.94336 9.57227 8.17285 7.09277 10.667 3.86523 3.90625 7.57764 7.4668 9.03223 0 ]xsh298.564 178.781 mo
297.773 178.781 297.132 179.422 297.132 180.213 cv
297.132 181.004 297.773 181.645 298.564 181.645 cv
299.355 181.645 299.996 181.004 299.996 180.213 cv
299.996 179.422 299.355 178.781 298.564 178.781 cv
cp
f
298.564 172.407 mo
297.773 172.407 297.132 173.048 297.132 173.839 cv
297.132 174.63 297.773 175.271 298.564 175.271 cv
299.355 175.271 299.996 174.63 299.996 173.839 cv
299.996 173.048 299.355 172.407 298.564 172.407 cv
cp
f
290.352 172.407 mo
289.561 172.407 288.92 173.048 288.92 173.839 cv
288.92 174.63 289.561 175.271 290.352 175.271 cv
291.143 175.271 291.784 174.63 291.784 173.839 cv
291.784 173.048 291.143 172.407 290.352 172.407 cv
cp
f
290.352 178.781 mo
289.561 178.781 288.92 179.422 288.92 180.213 cv
288.92 181.004 289.561 181.645 290.352 181.645 cv
291.143 181.645 291.784 181.004 291.784 180.213 cv
291.784 179.422 291.143 178.781 290.352 178.781 cv
cp
f
306.776 178.781 mo
305.985 178.781 305.344 179.422 305.344 180.213 cv
305.344 181.004 305.985 181.645 306.776 181.645 cv
307.567 181.645 308.208 181.004 308.208 180.213 cv
308.208 179.422 307.567 178.781 306.776 178.781 cv
cp
f
306.776 172.407 mo
305.985 172.407 305.344 173.048 305.344 173.839 cv
305.344 174.63 305.985 175.271 306.776 175.271 cv
307.567 175.271 308.208 174.63 308.208 173.839 cv
308.208 173.048 307.567 172.407 306.776 172.407 cv
cp
f
265.716 178.781 mo
264.925 178.781 264.284 179.422 264.284 180.213 cv
264.284 181.004 264.925 181.645 265.716 181.645 cv
266.507 181.645 267.149 181.004 267.149 180.213 cv
267.149 179.422 266.507 178.781 265.716 178.781 cv
cp
f
265.716 172.407 mo
264.925 172.407 264.284 173.048 264.284 173.839 cv
264.284 174.63 264.925 175.271 265.716 175.271 cv
266.507 175.271 267.149 174.63 267.149 173.839 cv
267.149 173.048 266.507 172.407 265.716 172.407 cv
cp
f
273.928 172.407 mo
273.137 172.407 272.496 173.048 272.496 173.839 cv
272.496 174.63 273.137 175.271 273.928 175.271 cv
274.719 175.271 275.36 174.63 275.36 173.839 cv
275.36 173.048 274.719 172.407 273.928 172.407 cv
cp
f
282.14 178.781 mo
281.349 178.781 280.708 179.422 280.708 180.213 cv
280.708 181.004 281.349 181.645 282.14 181.645 cv
282.931 181.645 283.572 181.004 283.572 180.213 cv
283.572 179.422 282.931 178.781 282.14 178.781 cv
cp
f
282.14 172.407 mo
281.349 172.407 280.708 173.048 280.708 173.839 cv
280.708 174.63 281.349 175.271 282.14 175.271 cv
282.931 175.271 283.572 174.63 283.572 173.839 cv
283.572 173.048 282.931 172.407 282.14 172.407 cv
cp
f
273.928 178.781 mo
273.137 178.781 272.496 179.422 272.496 180.213 cv
272.496 181.004 273.137 181.645 273.928 181.645 cv
274.719 181.645 275.36 181.004 275.36 180.213 cv
275.36 179.422 274.719 178.781 273.928 178.781 cv
cp
f
201.448 217.148 mo
200.448 217.148 li
200.448 211.998 li
200.782 211.976 201.116 211.948 201.448 211.916 cv
201.448 217.148 li
201.448 77.9012 mo
201.113 77.776 200.78 77.6556 200.448 77.5396 cv
200.448 62.4814 li
201.448 62.4814 li
201.448 77.9012 li
.0402228 .022919 .0259098 0 cmyk
f
193.058 217.148 mo
192.058 217.148 li
192.058 211.6 li
192.391 211.655 192.724 211.705 193.058 211.751 cv
193.058 217.148 li
193.058 75.624 mo
192.722 75.5679 192.39 75.5166 192.058 75.4695 cv
192.058 62.4814 li
193.058 62.4814 li
193.058 75.624 li
f
184.668 217.148 mo
183.668 217.148 li
183.668 209.151 li
183.999 209.294 184.334 209.431 184.668 209.563 cv
184.668 217.148 li
184.668 73.0019 mo
184.343 72.7837 184.009 72.5741 183.668 72.3729 cv
183.668 62.4814 li
184.668 62.4814 li
184.668 73.0019 li
f
176.277 217.148 mo
175.277 217.148 li
175.277 204.093 li
175.608 204.36 175.94 204.618 176.277 204.871 cv
176.277 217.148 li
176.277 69.6853 mo
175.949 69.6244 175.617 69.569 175.277 69.5186 cv
175.277 62.4814 li
176.277 62.4814 li
176.277 69.6853 li
f
167.887 217.148 mo
166.887 217.148 li
166.887 194.96 li
167.219 195.411 167.552 195.853 167.887 196.286 cv
167.887 217.148 li
166.887 69.2901 mo
166.887 62.4814 li
167.887 62.4814 li
167.887 69.2276 li
167.647 69.2402 167.407 69.2545 167.163 69.271 cv
167.071 69.2771 166.979 69.2835 166.887 69.2901 cv
f
159.497 217.148 mo
158.497 217.148 li
158.497 181.616 li
158.836 182.121 159.17 182.633 159.497 183.153 cv
159.497 217.148 li
158.497 70.6178 mo
158.497 62.4814 li
159.497 62.4814 li
159.497 70.3759 li
159.161 70.4531 158.826 70.5341 158.497 70.6178 cv
f
151.106 217.148 mo
150.106 217.148 li
150.106 173.779 li
150.44 173.828 150.774 173.88 151.106 173.934 cv
151.106 217.148 li
150.106 73.756 mo
150.106 62.4814 li
151.106 62.4814 li
151.106 73.2675 li
150.768 73.4272 150.437 73.5888 150.106 73.756 cv
f
142.716 217.148 mo
141.716 217.148 li
141.716 172.924 li
142.05 172.943 142.383 172.965 142.716 172.987 cv
142.716 217.148 li
141.716 79.2341 mo
141.716 62.4814 li
142.716 62.4814 li
142.716 78.4511 li
142.38 78.7089 142.047 78.9696 141.716 79.2341 cv
f
134.326 217.148 mo
133.326 217.148 li
133.326 172.727 li
133.66 172.724 133.992 172.722 134.326 172.722 cv
134.326 217.148 li
134.326 85.1767 mo
133.994 85.166 133.662 85.1524 133.326 85.1359 cv
133.326 62.4814 li
134.326 62.4814 li
134.326 85.1767 li
f
125.936 217.148 mo
124.936 217.148 li
124.936 173.001 li
125.269 172.983 125.602 172.966 125.936 172.949 cv
125.936 217.148 li
125.936 84.3263 mo
125.605 84.2703 125.271 84.2114 124.936 84.1496 cv
124.936 62.4814 li
125.936 62.4814 li
125.936 84.3263 li
f
117.545 217.148 mo
116.545 217.148 li
116.545 173.568 li
116.878 173.542 117.211 173.517 117.545 173.491 cv
117.545 217.148 li
117.545 82.375 mo
117.214 82.2775 116.88 82.1771 116.545 82.0739 cv
116.545 62.4814 li
117.545 62.4814 li
117.545 82.375 li
f
109.155 217.148 mo
108.155 217.148 li
108.155 174.241 li
108.488 174.215 108.821 174.188 109.155 174.162 cv
109.155 217.148 li
109.155 80.0345 mo
108.819 79.9624 108.487 79.8943 108.155 79.8293 cv
108.155 62.4814 li
109.155 62.4814 li
109.155 80.0345 li
f
100.765 217.148 mo
99.7651 217.148 li
99.7651 174.796 li
100.097 174.78 100.431 174.763 100.765 174.745 cv
100.765 217.148 li
100.765 78.9217 mo
100.431 78.9067 100.094 78.8955 99.7651 78.8883 cv
99.7651 62.4814 li
100.765 62.4814 li
100.765 78.9217 li
f
92.3744 217.148 mo
91.3744 217.148 li
91.3744 174.938 li
91.7058 174.946 92.0396 174.952 92.3744 174.956 cv
92.3744 217.148 li
91.3744 79.6103 mo
91.3744 62.4814 li
92.3744 62.4814 li
92.3744 79.4201 li
92.0386 79.4788 91.7032 79.5426 91.3744 79.6103 cv
f
197.969 212.083 mo
196.331 212.083 194.69 211.973 193.058 211.751 cv
193.058 192.424 li
195.509 193.348 197.983 193.987 200.448 194.363 cv
200.448 211.998 li
199.624 212.055 198.797 212.083 197.969 212.083 cv
201.448 211.916 mo
201.448 194.502 li
202.929 194.686 204.405 194.775 205.869 194.775 cv
216.072 194.775 225.692 190.42 232.358 183.229 cv
231.974 185.97 231.176 188.797 229.85 191.734 cv
224.363 203.883 213.249 210.783 201.448 211.916 cv
192.058 211.6 mo
189.551 211.188 187.073 210.511 184.668 209.563 cv
184.668 188.517 li
187.21 189.907 189.675 191.069 192.058 192.033 cv
192.058 211.6 li
183.668 209.151 mo
181.089 208.044 178.606 206.619 176.277 204.871 cv
176.277 183.292 li
176.716 183.575 177.153 183.865 177.589 184.163 cv
179.658 185.577 181.685 186.838 183.668 187.96 cv
183.668 209.151 li
175.277 204.093 mo
173.726 202.841 172.25 201.44 170.868 199.886 cv
169.868 198.762 168.873 197.563 167.887 196.286 cv
167.887 178.78 li
170.39 179.881 172.857 181.165 175.277 182.661 cv
175.277 204.093 li
166.887 194.96 mo
164.944 192.319 163.041 189.361 161.208 186.05 cv
160.659 185.057 160.089 184.093 159.497 183.153 cv
159.497 175.777 li
161.986 176.481 164.453 177.331 166.887 178.35 cv
166.887 194.96 li
158.497 181.616 mo
156.693 178.936 154.718 176.471 152.602 174.19 cv
154.577 174.547 156.544 174.981 158.497 175.502 cv
158.497 181.616 li
f
200.448 211.998 mo
200.448 194.363 li
200.782 194.414 201.115 194.46 201.448 194.502 cv
201.448 211.916 li
201.116 211.948 200.782 211.976 200.448 211.998 cv
.093019 .0573739 .0683299 0 cmyk
f
193.058 211.751 mo
192.724 211.705 192.391 211.655 192.058 211.6 cv
192.058 192.033 li
192.184 192.084 192.31 192.134 192.436 192.184 cv
192.642 192.266 192.851 192.347 193.058 192.424 cv
193.058 211.751 li
f
184.668 209.563 mo
184.334 209.431 183.999 209.294 183.668 209.151 cv
183.668 187.96 li
184.002 188.15 184.336 188.336 184.668 188.517 cv
184.668 209.563 li
f
176.277 204.871 mo
175.94 204.618 175.608 204.36 175.277 204.093 cv
175.277 182.661 li
175.611 182.867 175.946 183.078 176.277 183.292 cv
176.277 204.871 li
f
167.887 196.286 mo
167.552 195.853 167.219 195.411 166.887 194.96 cv
166.887 178.35 li
167.222 178.491 167.554 178.633 167.887 178.78 cv
167.887 196.286 li
f
159.497 183.153 mo
159.17 182.633 158.836 182.121 158.497 181.616 cv
158.497 175.502 li
158.831 175.591 159.164 175.682 159.497 175.777 cv
159.497 183.153 li
f
218.47 125.922 mo
212.141 120.965 206.199 115.806 203.209 108.479 cv
202.591 106.965 202.007 105.461 201.448 103.976 cv
201.448 77.9012 li
202.13 78.1557 202.818 78.4292 203.516 78.7233 cv
225.682 88.0679 220.658 104.635 218.47 125.922 cv
200.448 101.274 mo
197.962 94.4626 195.858 88.1161 193.058 82.8942 cv
193.058 75.624 li
195.428 76.0202 197.884 76.6431 200.448 77.5396 cv
200.448 101.274 li
192.058 81.1302 mo
190.678 78.8324 189.121 76.7923 187.28 75.0772 cv
188.839 75.1127 190.429 75.2382 192.058 75.4695 cv
192.058 81.1302 li
.0402228 .022919 .0259098 0 cmyk
f
201.448 103.976 mo
201.106 103.068 200.774 102.168 200.448 101.274 cv
200.448 77.5396 li
200.78 77.6556 201.113 77.776 201.448 77.9012 cv
201.448 103.976 li
.093019 .0573739 .0683299 0 cmyk
f
193.058 82.8942 mo
192.735 82.291 192.402 81.7024 192.058 81.1302 cv
192.058 75.4695 li
192.39 75.5166 192.722 75.5679 193.058 75.624 cv
193.058 82.8942 li
f
69.6127 118.824 mo
64.7193 103.101 72.0146 83.6 91.3744 79.6103 cv
91.3744 111.272 li
90.8898 111.356 90.3978 111.437 89.9017 111.514 cv
81.3912 112.836 74.7021 115.424 69.6127 118.824 cv
92.3744 111.091 mo
92.3744 79.4201 li
94.4029 79.0654 96.5576 78.8781 98.8401 78.8781 cv
99.1468 78.8781 99.4538 78.8815 99.7651 78.8883 cv
99.7651 109.318 li
97.4595 110.004 95.0002 110.601 92.3744 111.091 cv
100.765 109.011 mo
100.765 78.9217 li
103.104 79.0261 105.566 79.3222 108.155 79.8293 cv
108.155 106.167 li
105.872 107.22 103.419 108.176 100.765 109.011 cv
109.155 105.695 mo
109.155 80.0345 li
111.199 80.4724 113.316 81.0402 115.513 81.7482 cv
115.859 81.8598 116.203 81.9684 116.545 82.0739 cv
116.545 101.453 li
114.278 102.972 111.835 104.4 109.155 105.695 cv
117.545 100.77 mo
117.545 82.375 li
120.109 83.129 122.57 83.7131 124.936 84.1496 cv
124.936 94.8765 li
122.651 96.9145 120.222 98.9029 117.545 100.77 cv
125.936 93.9737 mo
125.936 84.3263 li
128.504 84.76 130.963 85.0198 133.326 85.1359 cv
133.326 86.86 li
130.931 89.2047 128.52 91.6135 125.936 93.9737 cv
134.326 85.8846 mo
134.326 85.1767 li
134.564 85.1844 134.802 85.1907 135.038 85.1956 cv
134.801 85.4243 134.563 85.6541 134.326 85.8846 cv
.0402228 .022919 .0259098 0 cmyk
f
133.326 86.86 mo
133.326 85.1359 li
133.662 85.1524 133.994 85.166 134.326 85.1767 cv
134.326 85.8846 li
133.993 86.2076 133.659 86.5342 133.326 86.86 cv
.093019 .0573739 .0683299 0 cmyk
f
124.936 94.8765 mo
124.936 84.1496 li
125.271 84.2114 125.605 84.2703 125.936 84.3263 cv
125.936 93.9737 li
125.606 94.2753 125.272 94.5768 124.936 94.8765 cv
f
116.545 101.453 mo
116.545 82.0739 li
116.88 82.1771 117.214 82.2775 117.545 82.375 cv
117.545 100.77 li
117.216 100.999 116.882 101.227 116.545 101.453 cv
f
108.155 106.167 mo
108.155 79.8293 li
108.487 79.8943 108.819 79.9624 109.155 80.0345 cv
109.155 105.695 li
108.826 105.855 108.492 106.012 108.155 106.167 cv
f
99.7651 109.318 mo
99.7651 78.8883 li
100.094 78.8955 100.431 78.9067 100.765 78.9217 cv
100.765 109.011 li
100.434 109.116 100.103 109.217 99.7651 109.318 cv
f
91.3744 111.272 mo
91.3744 79.6103 li
91.7032 79.5426 92.0386 79.4788 92.3744 79.4201 cv
92.3744 111.091 li
92.0424 111.153 91.7119 111.213 91.3744 111.272 cv
f
232.358 183.229 mo
235.1 163.635 216.645 148.473 218.102 129.947 cv
218.209 128.587 218.334 127.245 218.47 125.922 cv
229.081 134.232 240.779 141.971 241.465 158.399 cv
241.875 168.203 238.283 176.837 232.358 183.229 cv
93.5054 174.962 mo
93.1264 174.962 92.7493 174.96 92.3744 174.956 cv
92.3744 141.102 li
94.7333 142.224 97.2065 143.308 99.7651 144.385 cv
99.7651 174.796 li
97.626 174.9 95.5361 174.962 93.5054 174.962 cv
91.3744 174.938 mo
86.4351 174.822 81.877 174.277 77.8231 172.983 cv
56.2436 166.094 46.6362 134.174 69.6127 118.824 cv
71.0531 123.452 73.5488 127.754 77.1033 131.236 cv
80.8319 134.887 85.7479 137.876 91.3744 140.62 cv
91.3744 174.938 li
100.765 174.745 mo
100.765 144.804 li
103.168 145.806 105.643 146.806 108.155 147.824 cv
108.155 174.241 li
105.64 174.437 103.171 174.615 100.765 174.745 cv
152.602 174.19 mo
152.104 174.1 151.606 174.015 151.106 173.934 cv
151.106 172.631 li
151.612 173.141 152.111 173.661 152.602 174.19 cv
109.155 174.162 mo
109.155 148.229 li
111.592 149.218 114.063 150.229 116.545 151.283 cv
116.545 173.568 li
115.395 173.658 114.251 173.75 113.115 173.842 cv
111.784 173.95 110.463 174.058 109.155 174.162 cv
150.106 173.779 mo
147.65 173.412 145.184 173.156 142.716 172.987 cv
142.716 165.429 li
145.295 167.328 147.773 169.391 150.106 171.644 cv
150.106 173.779 li
117.545 173.491 mo
117.545 151.71 li
120.01 152.768 122.481 153.871 124.936 155.04 cv
124.936 173.001 li
122.447 173.135 119.983 173.306 117.545 173.491 cv
125.936 172.949 mo
125.936 155.521 li
128.429 156.73 130.9 158.01 133.326 159.385 cv
133.326 172.727 li
130.85 172.747 128.384 172.828 125.936 172.949 cv
141.716 172.924 mo
139.313 172.782 136.908 172.722 134.513 172.722 cv
134.451 172.722 134.388 172.722 134.326 172.722 cv
134.326 159.958 li
136.854 161.426 139.326 162.998 141.716 164.704 cv
141.716 172.924 li
.0402228 .022919 .0259098 0 cmyk
f
151.106 173.934 mo
150.774 173.88 150.44 173.828 150.106 173.779 cv
150.106 171.644 li
150.443 171.969 150.776 172.298 151.106 172.631 cv
151.106 173.934 li
.093019 .0573739 .0683299 0 cmyk
f
142.716 172.987 mo
142.383 172.965 142.05 172.943 141.716 172.924 cv
141.716 164.704 li
142.052 164.943 142.384 165.184 142.716 165.429 cv
142.716 172.987 li
f
133.326 172.727 mo
133.326 159.385 li
133.659 159.574 133.994 159.766 134.326 159.958 cv
134.326 172.722 li
133.992 172.722 133.66 172.724 133.326 172.727 cv
f
124.936 173.001 mo
124.936 155.04 li
125.269 155.199 125.603 155.36 125.936 155.521 cv
125.936 172.949 li
125.602 172.966 125.269 172.983 124.936 173.001 cv
f
116.545 173.568 mo
116.545 151.283 li
116.88 151.425 117.211 151.567 117.545 151.71 cv
117.545 173.491 li
117.211 173.517 116.878 173.542 116.545 173.568 cv
f
108.155 174.241 mo
108.155 147.824 li
108.488 147.959 108.821 148.094 109.155 148.229 cv
109.155 174.162 li
108.821 174.188 108.488 174.215 108.155 174.241 cv
f
99.7651 174.796 mo
99.7651 144.385 li
100.097 144.525 100.43 144.664 100.765 144.804 cv
100.765 174.745 li
100.431 174.763 100.097 174.78 99.7651 174.796 cv
f
92.3744 174.956 mo
92.0396 174.952 91.7058 174.946 91.3744 174.938 cv
91.3744 140.62 li
91.7049 140.781 92.0391 140.942 92.3744 141.102 cv
92.3744 174.956 li
f
136.266 85.2082 mo
135.859 85.2082 135.451 85.2041 135.038 85.1956 cv
137.209 83.1046 139.397 81.089 141.716 79.2341 cv
141.716 84.9602 li
139.954 85.12 138.139 85.2082 136.266 85.2082 cv
142.716 84.8614 mo
142.716 78.4511 li
145.004 76.698 147.434 75.1068 150.106 73.756 cv
150.106 83.6474 li
147.732 84.1653 145.278 84.5874 142.716 84.8614 cv
151.106 83.4226 mo
151.106 73.2675 li
153.373 72.1984 155.817 71.3001 158.497 70.6178 cv
158.497 81.4145 li
156.1 82.1437 153.649 82.8345 151.106 83.4226 cv
159.497 81.1073 mo
159.497 70.3759 li
161.779 69.8521 164.231 69.4818 166.887 69.2901 cv
166.887 78.7579 li
165.456 79.2072 164.017 79.6723 162.566 80.1373 cv
161.551 80.4624 160.528 80.7876 159.497 81.1073 cv
167.887 78.4464 mo
167.887 69.2276 li
168.683 69.186 169.459 69.1653 170.209 69.1653 cv
172.027 69.1653 173.712 69.2862 175.277 69.5186 cv
175.277 76.4173 li
172.8 76.983 170.35 77.6862 167.887 78.4464 cv
176.277 76.197 mo
176.277 69.6853 li
179.12 70.2121 181.552 71.1271 183.668 72.3729 cv
183.668 75.1516 li
181.147 75.3106 178.697 75.6835 176.277 76.197 cv
184.668 75.1001 mo
184.668 73.0019 li
185.6 73.6268 186.468 74.3203 187.28 75.0772 cv
186.966 75.07 186.653 75.0665 186.342 75.0665 cv
185.78 75.0665 185.222 75.0779 184.668 75.1001 cv
.0402228 .022919 .0259098 0 cmyk
f
183.668 75.1516 mo
183.668 72.3729 li
184.009 72.5741 184.343 72.7837 184.668 73.0019 cv
184.668 75.1001 li
184.334 75.1134 184 75.1307 183.668 75.1516 cv
.093019 .0573739 .0683299 0 cmyk
f
175.277 76.4173 mo
175.277 69.5186 li
175.617 69.569 175.949 69.6244 176.277 69.6853 cv
176.277 76.197 li
175.944 76.2677 175.61 76.3415 175.277 76.4173 cv
f
166.887 78.7579 mo
166.887 69.2901 li
166.979 69.2835 167.071 69.2771 167.163 69.271 cv
167.407 69.2545 167.647 69.2402 167.887 69.2276 cv
167.887 78.4464 li
167.554 78.5494 167.221 78.653 166.887 78.7579 cv
f
158.497 81.4145 mo
158.497 70.6178 li
158.826 70.5341 159.161 70.4531 159.497 70.3759 cv
159.497 81.1073 li
159.165 81.2103 158.831 81.3128 158.497 81.4145 cv
f
150.106 83.6474 mo
150.106 73.756 li
150.437 73.5888 150.768 73.4272 151.106 73.2675 cv
151.106 83.4226 li
150.775 83.4993 150.441 83.5743 150.106 83.6474 cv
f
141.716 84.9602 mo
141.716 79.2341 li
142.047 78.9696 142.38 78.7089 142.716 78.4511 cv
142.716 84.8614 li
142.384 84.8969 142.052 84.9298 141.716 84.9602 cv
f
205.869 194.775 mo
204.405 194.775 202.929 194.686 201.448 194.502 cv
201.448 103.976 li
202.007 105.461 202.591 106.965 203.209 108.479 cv
206.199 115.806 212.141 120.965 218.47 125.922 cv
218.334 127.245 218.209 128.587 218.102 129.947 cv
216.645 148.473 235.1 163.635 232.358 183.229 cv
225.692 190.42 216.072 194.775 205.869 194.775 cv
200.448 194.363 mo
197.983 193.987 195.509 193.348 193.058 192.424 cv
193.058 82.8942 li
195.858 88.1161 197.962 94.4626 200.448 101.274 cv
200.448 194.363 li
192.058 192.033 mo
189.675 191.069 187.21 189.907 184.668 188.517 cv
184.668 75.1001 li
185.222 75.0779 185.78 75.0665 186.342 75.0665 cv
186.653 75.0665 186.966 75.07 187.28 75.0772 cv
189.121 76.7923 190.678 78.8324 192.058 81.1302 cv
192.058 192.033 li
183.668 187.96 mo
181.685 186.838 179.658 185.577 177.589 184.163 cv
177.153 183.865 176.716 183.575 176.277 183.292 cv
176.277 76.197 li
178.697 75.6835 181.147 75.3106 183.668 75.1516 cv
183.668 187.96 li
175.277 182.661 mo
172.857 181.165 170.39 179.881 167.887 178.78 cv
167.887 78.4464 li
170.35 77.6862 172.8 76.983 175.277 76.4173 cv
175.277 182.661 li
166.887 178.35 mo
164.453 177.331 161.986 176.481 159.497 175.777 cv
159.497 81.1073 li
160.528 80.7876 161.551 80.4624 162.566 80.1373 cv
164.017 79.6723 165.456 79.2072 166.887 78.7579 cv
166.887 178.35 li
158.497 175.502 mo
156.544 174.981 154.577 174.547 152.602 174.19 cv
152.111 173.661 151.612 173.141 151.106 172.631 cv
151.106 83.4226 li
153.649 82.8345 156.1 82.1437 158.497 81.4145 cv
158.497 175.502 li
150.106 171.644 mo
147.773 169.391 145.295 167.328 142.716 165.429 cv
142.716 84.8614 li
145.278 84.5874 147.732 84.1653 150.106 83.6474 cv
150.106 171.644 li
141.716 164.704 mo
139.326 162.998 136.854 161.426 134.326 159.958 cv
134.326 85.8846 li
134.563 85.6541 134.801 85.4243 135.038 85.1956 cv
135.451 85.2041 135.859 85.2082 136.266 85.2082 cv
138.139 85.2082 139.954 85.12 141.716 84.9602 cv
141.716 164.704 li
133.326 159.385 mo
130.9 158.01 128.429 156.73 125.936 155.521 cv
125.936 93.9737 li
128.52 91.6135 130.931 89.2047 133.326 86.86 cv
133.326 159.385 li
124.936 155.04 mo
122.481 153.871 120.01 152.768 117.545 151.71 cv
117.545 100.77 li
120.222 98.9029 122.651 96.9145 124.936 94.8765 cv
124.936 155.04 li
116.545 151.283 mo
114.063 150.229 111.592 149.218 109.155 148.229 cv
109.155 105.695 li
111.835 104.4 114.278 102.972 116.545 101.453 cv
116.545 151.283 li
108.155 147.824 mo
105.643 146.806 103.168 145.806 100.765 144.804 cv
100.765 109.011 li
103.419 108.176 105.872 107.22 108.155 106.167 cv
108.155 147.824 li
99.7651 144.385 mo
97.2065 143.308 94.7333 142.224 92.3744 141.102 cv
92.3744 111.091 li
95.0002 110.601 97.4595 110.004 99.7651 109.318 cv
99.7651 144.385 li
91.3744 140.62 mo
85.7479 137.876 80.8319 134.887 77.1033 131.236 cv
73.5488 127.754 71.0531 123.452 69.6127 118.824 cv
74.7021 115.424 81.3912 112.836 89.9017 111.514 cv
90.3978 111.437 90.8898 111.356 91.3744 111.272 cv
91.3744 140.62 li
f
201.448 194.502 mo
201.115 194.46 200.782 194.414 200.448 194.363 cv
200.448 101.274 li
200.774 102.168 201.106 103.068 201.448 103.976 cv
201.448 194.502 li
.144869 .0940871 .106996 0 cmyk
f
193.058 192.424 mo
192.851 192.347 192.642 192.266 192.436 192.184 cv
192.31 192.134 192.184 192.084 192.058 192.033 cv
192.058 81.1302 li
192.402 81.7024 192.735 82.291 193.058 82.8942 cv
193.058 192.424 li
f
184.668 188.517 mo
184.336 188.336 184.002 188.15 183.668 187.96 cv
183.668 75.1516 li
184 75.1307 184.334 75.1134 184.668 75.1001 cv
184.668 188.517 li
f
176.277 183.292 mo
175.946 183.078 175.611 182.867 175.277 182.661 cv
175.277 76.4173 li
175.61 76.3415 175.944 76.2677 176.277 76.197 cv
176.277 183.292 li
f
167.887 178.78 mo
167.554 178.633 167.222 178.491 166.887 178.35 cv
166.887 78.7579 li
167.221 78.653 167.554 78.5494 167.887 78.4464 cv
167.887 178.78 li
f
159.497 175.777 mo
159.164 175.682 158.831 175.591 158.497 175.502 cv
158.497 81.4145 li
158.831 81.3128 159.165 81.2103 159.497 81.1073 cv
159.497 175.777 li
f
151.106 172.631 mo
150.776 172.298 150.443 171.969 150.106 171.644 cv
150.106 83.6474 li
150.441 83.5743 150.775 83.4993 151.106 83.4226 cv
151.106 172.631 li
f
142.716 165.429 mo
142.384 165.184 142.052 164.943 141.716 164.704 cv
141.716 84.9602 li
142.052 84.9298 142.384 84.8969 142.716 84.8614 cv
142.716 165.429 li
f
134.326 159.958 mo
133.994 159.766 133.659 159.574 133.326 159.385 cv
133.326 86.86 li
133.659 86.5342 133.993 86.2076 134.326 85.8846 cv
134.326 159.958 li
f
125.936 155.521 mo
125.603 155.36 125.269 155.199 124.936 155.04 cv
124.936 94.8765 li
125.272 94.5768 125.606 94.2753 125.936 93.9737 cv
125.936 155.521 li
f
117.545 151.71 mo
117.211 151.567 116.88 151.425 116.545 151.283 cv
116.545 101.453 li
116.882 101.227 117.216 100.999 117.545 100.77 cv
117.545 151.71 li
f
109.155 148.229 mo
108.821 148.094 108.488 147.959 108.155 147.824 cv
108.155 106.167 li
108.492 106.012 108.826 105.855 109.155 105.695 cv
109.155 148.229 li
f
100.765 144.804 mo
100.43 144.664 100.097 144.525 99.7651 144.385 cv
99.7651 109.318 li
100.103 109.217 100.434 109.116 100.765 109.011 cv
100.765 144.804 li
f
92.3744 141.102 mo
92.0391 140.942 91.7049 140.781 91.3744 140.62 cv
91.3744 111.272 li
91.7119 111.213 92.0424 111.153 92.3744 111.091 cv
92.3744 141.102 li
f
236.668 184.511 mo
235.083 209.758 207.511 224.339 185.1 212.607 cv
180.73 210.319 176.128 207.258 171.361 203.212 cv
141.316 177.709 97.6766 192.085 74.6513 181.982 cv
49.661 171.017 46.0363 125.253 92.8226 122.93 cv
135.249 120.823 138.349 88.1447 172.953 89.4415 cv
198.136 90.3853 197.861 109.548 204.277 131.609 cv
210.112 151.67 238.291 158.673 236.668 184.511 cv
cp
level3{
gsave
clp
[-174.411 -56.9688 56.9688 -174.411 241.455 173.438 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p
!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p
!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p
!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p!=V9p
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!=V9p!=V6o!=V6o!=_<p!=_<p!=_<p!=hBq!=hBq!=hBq!=hBq!=qHr!=qHr!>%Ns!>%Ns!>%Ns!>.Tt
!>.Tt!>7Zu!>7Zu!>7Zu!>7Zu!>@a!!>@a!!>@a!!>@]u!>Id!!>Id!!>Id!!>Rj"!>Rg!!>[m"!>[m"
!>[m"!>ds#!>dp"!>dp"!>dp"!>n!#!>n!#!>ms"!?"$#!?"$#!?"$#!?+*$!?+*$!?+*$!?40%!?4-$
!?4-$!?4-$!?=3%!?=3%!?=3%!?=3%!?F9&!?F9&!?F9&!?O?'!?O?'!?O<&!$=9&!$=9&!$=9&!$F?'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.005 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-174.411 -56.9688 56.9688 -174.411 241.455 173.438 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~$O[=M$O[=M$O[@O$k*OQ$k*OQ$k*RS%1NaU%1NaU%1NaU%1NdW%LrsY%Ls![%hB0]%hB0]%hB3_&.fBa
&.fEc&J5Te&J5Te&J5Te&J5Tf&eYfi&eYfi&eYfi&eYfj',)#m',)#m',)#n'GM5q'GM5r'bqGu'bqGu
'bqH!()@Z$()@Z$()@Z$()@Z%(Ddl((Ddl((Ddl)(`4),(`4),(`4),)&X;0)&X;0)&X;0)B'M4)B'M4
)B'M4)B'M4)]K_8)]K_8)]K_8)]K_8*#oq<*#oq<*#oq<*??.@*??.@*??.@*Zc@D*Zc@D*Zc@D+!2RH
~>
<~5s[e&5s[b$5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S!5<h@s5<h@s5<h@s5<h@s5<h@r5!D.o5!D.o
5!D.o5!D.o5!D.n4Ztqk4Ztqk4Ztqk4Ztqk4Ztqj4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g4?P_g
4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc4$,Mc3]];_3]];_3]];_3]];_
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
214.952 201.377 mo
234.89 187.674 233.311 157.888 212.675 145.262 cv
208.652 142.8 203.879 140.527 198.218 138.604 cv
162.533 126.477 152.894 83.6068 133.294 69.6762 cv
112.021 54.5566 72.6889 74.0618 93.7641 113.593 cv
112.876 149.441 87.5837 168.036 105.646 195.794 cv
118.79 215.994 134.379 206.356 155.633 200.784 cv
174.96 195.717 194.548 215.4 214.952 201.377 cv
cp
level3{
gsave
clp
[-140.176 -132.228 132.228 -140.176 212.342 220.867 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!'6kT!'?tV!'R+X!'[4Z!'mC]!(!L_!(<ac!C`sf!Cs-i!D09k!D9Bm!DKNo!DTWq!Dfcs!Dolu!E-$"
!)p$#!*-3&!*69'!*HH*!*QN+!F)f/!*lf0!+)u3!+3&4!+E57!+N;8!+`J;!+rV=!,&_?!,8kA!,AtC
!,T.F!,f=I!,oCJ!-#LL!-5XN!-GgQ!-YsS!-l-V!-u6X!.)?Z!.;K\!.DT^!.Vca!._lc!.r&f!//2h
!/AAk!/JGl!/\Vo!/nbq!0"ks!05&!!0G5$!0YD'!0kV+!0t_-!1(h/!1:t1!1M.4!1V76!1hF9!1qO;
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-140.176 -132.228 132.228 -140.176 212.342 220.867 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~3BB2^3]fDc4?Yhj4[)%o5<qJ!5X@_'6UX=16q'O67Ros>84cBE8P2TJ92&#Q9MJ5V:/=Y]:Jakb;,U:i
;GpFl<)cjt<E3(#='&L+=BJ^/>$>-7>?b?;?!UcC?=$uG?smDO@:<VS@q0%[AS#IcAnG[gBP;*oBk_<s
C27U$Ci+$,DJj?1Df9Q5E,fl<EcZ;DFEM_LG'A.TG^+IYH$O[]H@(!dI!g<iI=?WpIt)ruJ:W9'JqJ]/
KS5&5L5(G;LPL\AM2@+IMi3LON/WaUNfK0]OH>TeP*2#mPa%DsQ'IW"QBml(R$a;0R[T\6S"#q<SXl=B
~>
<~U8+KYUSFTZUSO]]UnsoaV5C,eVPg>iVl6PmW2ZbqWMukrWN)tuWiE)!WiN2$X/i;%X/rD(XK8M)XKAV,
Xf\b/Y-+q1Y-+t3YHP.5YHP17YctC;Z*CU?ZEgdAZEggCZa7!EZa7$G['[3I['[6K[C*EM[C*HO[^NZS
\$riV\@B&Y\@B&Z\[f8]\[f8^]"5Ja]"5Jb]=Y\f]Y(nj]tM+m]tM+n^:q=r^V@P!^qdb%_83t(_83t)
_SX1,_SX1,_o'C0_o'C0`5KU4`Pog8`l?$<a2c6@aN2KFb0%lLbKJ)PbKJ)Pbfn;Tc-=MXcHa_\cd0q`
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
216.186 197.373 mo
205.629 220.748 174.252 224.69 157.205 205.526 cv
153.881 201.79 150.615 197.236 147.545 191.689 cv
128.195 156.729 81.6536 154.714 63.4399 136.876 cv
43.6718 117.515 56.6451 72.8137 101.849 87.388 cv
142.841 100.604 157.499 70.724 189.852 84.3631 cv
213.397 94.2887 206.265 112.363 204.439 135.587 cv
202.778 156.705 226.991 173.451 216.186 197.373 cv
cp
level3{
gsave
clp
[94.5119 120.941 -120.941 94.5119 111.584 88.0285 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[94.5119 120.941 -120.941 94.5119 111.584 88.0285 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
91.9799 128.426 mo
91.9799 134.387 87.1474 139.219 81.1861 139.219 cv
75.225 139.219 70.3924 134.387 70.3924 128.426 cv
70.3924 122.464 75.225 117.632 81.1861 117.632 cv
87.1474 117.632 91.9799 122.464 91.9799 128.426 cv
cp
level3{
gsave
clp
[15.9865 17.4316 -17.4316 15.9865 77.9406 124.887 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.9865 17.4316 -17.4316 15.9865 77.9406 124.887 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
94.4642 111.831 mo
94.4642 114.562 92.2504 116.776 89.5194 116.776 cv
86.7883 116.776 84.5744 114.562 84.5744 111.831 cv
84.5744 109.1 86.7883 106.886 89.5194 106.886 cv
92.2504 106.886 94.4642 109.1 94.4642 111.831 cv
cp
level3{
gsave
clp
[7.22551 9.66412 -9.66412 7.22551 88.0967 109.928 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.22551 9.66412 -9.66412 7.22551 88.0967 109.928 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
61.4854 89.0449 mo
61.4854 90.4105 60.3785 91.5175 59.0129 91.5175 cv
57.6474 91.5175 56.5405 90.4105 56.5405 89.0449 cv
56.5405 87.6794 57.6474 86.5725 59.0129 86.5725 cv
60.3785 86.5725 61.4854 87.6794 61.4854 89.0449 cv
cp
level3{
gsave
clp
[2.7882 2.7882 -2.7882 2.7882 57.4198 87.4518 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.7882 2.7882 -2.7882 2.7882 57.4198 87.4518 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
74.9805 75.7211 mo
74.7276 75.7908 li
73.6731 76.0815 72.5532 76.0258 71.6854 75.4448 cv
70.9268 74.9371 69.9037 74.8369 68.9805 75.3531 cv
68.1942 75.7929 67.6876 76.6676 67.702 77.5685 cv
67.7301 79.3309 69.3677 80.4696 70.9433 80.0353 cv
71.6718 79.8345 72.2389 79.338 72.5514 78.7112 cv
73.0013 77.8088 73.8115 77.1404 74.7835 76.8725 cv
75.314 76.7262 li
76.427 76.4195 77.5637 76.8507 78.3349 77.7098 cv
79.7373 79.2722 82.0466 79.9024 84.1838 78.9877 cv
86.2889 78.0868 87.5558 75.7894 87.2024 73.5271 cv
86.7216 70.4491 83.7001 68.5605 80.7851 69.3639 cv
78.8002 69.911 77.4127 71.5554 77.0967 73.4613 cv
76.9146 74.5605 76.0546 75.425 74.9805 75.7211 cv
cp
level3{
gsave
clp
[-2.71827 -9.8623 9.8623 -2.71827 78.7959 80.5237 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.71827 -9.8623 9.8623 -2.71827 78.7959 80.5237 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
181.939 167.961 mo
181.519 167.93 li
179.767 167.797 178.104 167.106 177.107 165.757 cv
176.236 164.578 174.743 163.872 173.068 164.152 cv
171.64 164.39 170.4 165.438 169.934 166.808 cv
169.02 169.488 170.879 172.097 173.496 172.295 cv
174.707 172.386 175.833 171.943 176.646 171.165 cv
177.815 170.044 179.403 169.473 181.017 169.595 cv
181.899 169.662 li
183.748 169.801 185.232 171.07 185.932 172.787 cv
187.206 175.909 190.355 178.114 194.082 177.89 cv
197.753 177.669 200.915 174.883 201.607 171.271 cv
202.549 166.357 199.005 161.863 194.162 161.497 cv
190.865 161.248 187.875 162.982 186.364 165.692 cv
185.493 167.255 183.724 168.096 181.939 167.961 cv
cp
level3{
gsave
clp
[37.3919 3.79339 -3.79339 37.3919 166.925 166.989 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[37.3919 3.79339 -3.79339 37.3919 166.925 166.989 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
106.156 170.229 mo
106.464 170.157 li
107.749 169.858 109.096 169.98 110.113 170.723 cv
111.003 171.372 112.231 171.543 113.369 170.966 cv
114.338 170.475 114.991 169.446 115.018 168.359 cv
115.071 166.234 113.153 164.781 111.233 165.227 cv
110.345 165.434 109.637 166.004 109.23 166.744 cv
108.644 167.81 107.634 168.575 106.45 168.85 cv
105.803 169.001 li
104.447 169.316 103.098 168.74 102.211 167.667 cv
100.597 165.715 97.8454 164.842 95.2248 165.84 cv
92.6435 166.822 91.0038 169.529 91.3186 172.273 cv
91.7471 176.005 95.2957 178.43 98.8481 177.605 cv
101.267 177.043 103.02 175.129 103.494 172.848 cv
103.768 171.532 104.847 170.533 106.156 170.229 cv
cp
level3{
gsave
clp
[2.79221 12.019 -12.019 2.79221 101.793 164.253 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!'$>G!'-DH!'-DH!'6JI!'?PJ!'HSJ!'HSJ!'QYK!'QVJ!'Z\K!'cbL!'leL!'leL!'ukM!()qN!(3"O
!(<(P!(E.Q!(E.Q!(N4R!(W:S!(`@T!(iFU!(iFU!(rLV!)&RW!)&OV!)/UW!)8[X!)AaY!)AaY!)JdY
!)JdY!)SjZ!)\mZ!)es[!)epZ!)o![!*#'\!*#'\!*,-]!*50]!*>6^!*>6^!*G<_!*PB`!*PB`!*YHa
!*bNb!*kTc!*kQb!*tWc!*tWc!+(]d!+1`d!+:fe!+:fe!+Cie!+Lof!+Lof!+Urf!+Urf!+_#g!+h&g
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.79221 12.019 -12.019 2.79221 101.793 164.253 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~2`NcV3&ilW3&ruZ3BB2^3]fDb4$,Mc4$5Vf4?P_g4?Yhj4[)%n5!M7r5<h@s5<qJ!5X@\%5sdn)6:4+-
6UO706psF26psI477B[87Rfm<7n6*@84Z9B84Z<D8P)NH8kM]J8kM`L91qrP9MA/T9he>V9heAX:/4PZ
:/4P[:JXb_:f'tc;,L1f;,L1g;GpCk;c?Un;c?Uo<)cgs<E3%"<`W7%<`W7&='&I*=BJ[-=BJ[.=]nm2
>$>*5>?b<9>?b<9>[1N=>[1N=?!U`A?=$rE?XI/I?XI/I?smAM@:<SQ@:<SQ@U`eU@U`eU@q0"YA7T4]
~>
<~Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^3r'QBmi&QBmi&QBd`#Q'IW"Q'IW"Q'@MtPa%DsPa%DsPa%DsPa%Ds
Pa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%AqPEV2oPEV2oPEV2oPEV2oPEV/m
P*1ukP*1ukP*1ujOcbcgOcbcfOH>QcOH>QcOH>QcOH>QcOH>QbO,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
O,o?_O,o?_O,o?_NfK-[NfK-[NfK-[NfK-[NK&pWNK&pWNK&pWN/W^SN/W^SN/W^SMi3LOMi3LOMi3LO
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
97.4078 191.064 mo
97.4078 192.214 96.4755 193.146 95.3255 193.146 cv
94.1754 193.146 93.2431 192.214 93.2431 191.064 cv
93.2431 189.914 94.1754 188.981 95.3255 188.981 cv
96.4755 188.981 97.4078 189.914 97.4078 191.064 cv
cp
level3{
gsave
clp
[3.04273 4.06965 -4.06965 3.04273 94.7264 190.263 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.04273 4.06965 -4.06965 3.04273 94.7264 190.263 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
0 0 0 0 cmyk
MNBOCF+BPreplay-Bold*1 [17.3034 0 0 -17.3034 0 0 ]msf104.665 117.661 mo(ABSTRACT)[12.6313 11.0566 9.36133 9.96582 11.5933 11.749 13.1851 0 ]xsh104.665 138.425 mo(LIQUID)[9.65527 4.39502 14.085 12.7173 4.39502 0 ]xshMNBOCG+FiraSans-Light*1 [13.8531 0 0 -13.8531 0 0 ]msf104.664 154.929 mo(LOREM IPSUM)[5.94287 9.57227 8.17383 7.09277 10.666 3.86523 3.90625 7.57764 7.4668 9.03223 0 ]xsh150.387 194.395 mo
149.582 194.395 148.929 195.047 148.929 195.853 cv
148.929 196.658 149.582 197.311 150.387 197.311 cv
151.192 197.311 151.845 196.658 151.845 195.853 cv
151.845 195.047 151.192 194.395 150.387 194.395 cv
cp
f
142.029 181.42 mo
141.224 181.42 140.571 182.073 140.571 182.878 cv
140.571 183.683 141.224 184.336 142.029 184.336 cv
142.834 184.336 143.487 183.683 143.487 182.878 cv
143.487 182.073 142.834 181.42 142.029 181.42 cv
cp
f
142.029 194.395 mo
141.224 194.395 140.571 195.047 140.571 195.853 cv
140.571 196.658 141.224 197.311 142.029 197.311 cv
142.834 197.311 143.487 196.658 143.487 195.853 cv
143.487 195.047 142.834 194.395 142.029 194.395 cv
cp
f
142.029 187.907 mo
141.224 187.907 140.571 188.56 140.571 189.365 cv
140.571 190.171 141.224 190.823 142.029 190.823 cv
142.834 190.823 143.487 190.171 143.487 189.365 cv
143.487 188.56 142.834 187.907 142.029 187.907 cv
cp
f
150.387 187.907 mo
149.582 187.907 148.929 188.56 148.929 189.365 cv
148.929 190.171 149.582 190.823 150.387 190.823 cv
151.192 190.823 151.845 190.171 151.845 189.365 cv
151.845 188.56 151.192 187.907 150.387 187.907 cv
cp
f
158.745 181.42 mo
157.94 181.42 157.288 182.073 157.288 182.878 cv
157.288 183.683 157.94 184.336 158.745 184.336 cv
159.551 184.336 160.203 183.683 160.203 182.878 cv
160.203 182.073 159.551 181.42 158.745 181.42 cv
cp
f
158.745 187.907 mo
157.94 187.907 157.288 188.56 157.288 189.365 cv
157.288 190.171 157.94 190.823 158.745 190.823 cv
159.551 190.823 160.203 190.171 160.203 189.365 cv
160.203 188.56 159.551 187.907 158.745 187.907 cv
cp
f
158.745 194.395 mo
157.94 194.395 157.288 195.047 157.288 195.853 cv
157.288 196.658 157.94 197.311 158.745 197.311 cv
159.551 197.311 160.203 196.658 160.203 195.853 cv
160.203 195.047 159.551 194.395 158.745 194.395 cv
cp
f
150.387 181.42 mo
149.582 181.42 148.929 182.073 148.929 182.878 cv
148.929 183.683 149.582 184.336 150.387 184.336 cv
151.192 184.336 151.845 183.683 151.845 182.878 cv
151.845 182.073 151.192 181.42 150.387 181.42 cv
cp
f
150.387 207.37 mo
149.582 207.37 148.929 208.022 148.929 208.827 cv
148.929 209.633 149.582 210.285 150.387 210.285 cv
151.192 210.285 151.845 209.633 151.845 208.827 cv
151.845 208.022 151.192 207.37 150.387 207.37 cv
cp
f
150.387 200.882 mo
149.582 200.882 148.929 201.535 148.929 202.34 cv
148.929 203.145 149.582 203.798 150.387 203.798 cv
151.192 203.798 151.845 203.145 151.845 202.34 cv
151.845 201.535 151.192 200.882 150.387 200.882 cv
cp
f
142.029 200.882 mo
141.224 200.882 140.571 201.535 140.571 202.34 cv
140.571 203.145 141.224 203.798 142.029 203.798 cv
142.834 203.798 143.487 203.145 143.487 202.34 cv
143.487 201.535 142.834 200.882 142.029 200.882 cv
cp
f
142.029 207.37 mo
141.224 207.37 140.571 208.022 140.571 208.827 cv
140.571 209.633 141.224 210.285 142.029 210.285 cv
142.834 210.285 143.487 209.633 143.487 208.827 cv
143.487 208.022 142.834 207.37 142.029 207.37 cv
cp
f
158.745 207.37 mo
157.94 207.37 157.288 208.022 157.288 208.827 cv
157.288 209.633 157.94 210.285 158.745 210.285 cv
159.551 210.285 160.203 209.633 160.203 208.827 cv
160.203 208.022 159.551 207.37 158.745 207.37 cv
cp
f
158.745 200.882 mo
157.94 200.882 157.288 201.535 157.288 202.34 cv
157.288 203.145 157.94 203.798 158.745 203.798 cv
159.551 203.798 160.203 203.145 160.203 202.34 cv
160.203 201.535 159.551 200.882 158.745 200.882 cv
cp
f
116.954 207.37 mo
116.149 207.37 115.496 208.022 115.496 208.827 cv
115.496 209.633 116.149 210.285 116.954 210.285 cv
117.759 210.285 118.412 209.633 118.412 208.827 cv
118.412 208.022 117.759 207.37 116.954 207.37 cv
cp
f
116.954 200.882 mo
116.149 200.882 115.496 201.535 115.496 202.34 cv
115.496 203.145 116.149 203.798 116.954 203.798 cv
117.759 203.798 118.412 203.145 118.412 202.34 cv
118.412 201.535 117.759 200.882 116.954 200.882 cv
cp
f
125.312 200.882 mo
124.507 200.882 123.854 201.535 123.854 202.34 cv
123.854 203.145 124.507 203.798 125.312 203.798 cv
126.118 203.798 126.77 203.145 126.77 202.34 cv
126.77 201.535 126.118 200.882 125.312 200.882 cv
cp
f
133.671 207.37 mo
132.865 207.37 132.213 208.022 132.213 208.827 cv
132.213 209.633 132.865 210.285 133.671 210.285 cv
134.476 210.285 135.128 209.633 135.128 208.827 cv
135.128 208.022 134.476 207.37 133.671 207.37 cv
cp
f
133.671 200.882 mo
132.865 200.882 132.213 201.535 132.213 202.34 cv
132.213 203.145 132.865 203.798 133.671 203.798 cv
134.476 203.798 135.128 203.145 135.128 202.34 cv
135.128 201.535 134.476 200.882 133.671 200.882 cv
cp
f
125.312 207.37 mo
124.507 207.37 123.854 208.022 123.854 208.827 cv
123.854 209.633 124.507 210.285 125.312 210.285 cv
126.118 210.285 126.77 209.633 126.77 208.827 cv
126.77 208.022 126.118 207.37 125.312 207.37 cv
cp
f
438.723 364.964 mo
435.665 364.964 li
435.348 364.63 435.031 364.297 434.714 363.964 cv
438.723 363.964 li
438.723 364.964 li
.0402228 .022919 .0259098 0 cmyk
f
438.723 356.574 mo
427.941 356.574 li
427.664 356.244 427.388 355.909 427.117 355.574 cv
438.723 355.574 li
438.723 356.574 li
f
438.723 348.185 mo
422.179 348.185 li
422.008 347.855 421.841 347.521 421.68 347.185 cv
438.723 347.185 li
438.723 348.185 li
f
438.723 339.794 mo
419.212 339.794 li
419.137 339.46 419.062 339.126 418.989 338.794 cv
438.723 338.794 li
438.723 339.794 li
f
438.723 331.404 mo
417.474 331.404 li
417.409 331.071 417.344 330.736 417.28 330.404 cv
438.723 330.404 li
438.723 331.404 li
324.698 331.404 mo
312.869 331.404 li
312.869 330.404 li
327.159 330.404 li
326.356 330.751 325.537 331.085 324.698 331.404 cv
f
438.723 323.014 mo
415.828 323.014 li
415.758 322.679 415.688 322.345 415.618 322.014 cv
438.723 322.014 li
438.723 323.014 li
339.764 323.014 mo
312.869 323.014 li
312.869 322.014 li
340.875 322.014 li
340.505 322.348 340.137 322.679 339.764 323.014 cv
f
438.723 314.624 mo
413.796 314.624 li
413.697 314.287 413.596 313.955 413.493 313.624 cv
438.723 313.624 li
438.723 314.624 li
349.076 314.624 mo
312.869 314.624 li
312.869 313.624 li
350.243 313.624 li
349.852 313.955 349.464 314.287 349.076 314.624 cv
f
438.723 306.234 mo
410.419 306.234 li
410.228 305.895 410.031 305.561 409.829 305.234 cv
438.723 305.234 li
438.723 306.234 li
360.015 306.234 mo
312.869 306.234 li
312.869 305.234 li
361.303 305.234 li
360.871 305.563 360.442 305.897 360.015 306.234 cv
f
438.723 297.844 mo
401.923 297.844 li
401.186 297.473 400.406 297.139 399.582 296.844 cv
438.723 296.844 li
438.723 297.844 li
374.191 297.844 mo
312.869 297.844 li
312.869 296.844 li
377.22 296.844 li
376.183 297.141 375.173 297.475 374.191 297.844 cv
f
438.723 289.454 mo
312.869 289.454 li
312.869 288.454 li
438.723 288.454 li
438.723 289.454 li
f
376.166 433.59 mo
292.417 433.59 li
292.417 432.59 li
375.055 432.59 li
375.426 432.93 375.796 433.264 376.166 433.59 cv
f
365.806 425.2 mo
292.417 425.2 li
292.417 424.2 li
364.163 424.2 li
364.714 424.522 365.262 424.855 365.806 425.2 cv
f
343.141 416.81 mo
292.417 416.81 li
292.417 415.81 li
335.581 415.81 li
338.111 416.046 340.637 416.371 343.141 416.81 cv
f
418.272 332.909 mo
417.768 332.909 li
417.702 332.574 417.637 332.242 417.572 331.909 cv
418.272 331.909 li
418.272 332.909 li
320.235 332.909 mo
292.417 332.909 li
292.417 331.909 li
323.323 331.909 li
322.319 332.264 321.292 332.597 320.235 332.909 cv
f
418.272 324.52 mo
416.135 324.52 li
416.067 324.183 416 323.852 415.932 323.519 cv
418.272 323.519 li
418.272 324.52 li
337.818 324.52 mo
292.417 324.52 li
292.417 323.519 li
339.197 323.519 li
339.11 323.596 339.026 323.671 338.939 323.748 cv
338.569 324.007 338.195 324.265 337.818 324.52 cv
f
402.626 445.667 mo
397.49 445.667 392.329 444.415 387.478 441.708 cv
383.832 439.673 380.046 437.016 376.166 433.59 cv
401.266 433.59 li
404.982 435.003 408.81 435.67 412.612 435.67 cv
419.802 435.67 426.899 433.284 432.973 429.049 cv
425.541 439.361 414.15 445.667 402.626 445.667 cv
398.919 432.59 mo
375.055 432.59 li
374.696 432.261 374.337 431.926 373.977 431.584 cv
371.37 429.106 368.636 426.995 365.806 425.2 cv
387.572 425.2 li
390.846 427.849 394.043 429.98 397.134 431.678 cv
397.725 432.003 398.32 432.306 398.919 432.59 cv
386.361 424.2 mo
364.163 424.2 li
357.541 420.33 350.425 418.086 343.141 416.81 cv
377.409 416.81 li
379.526 418.263 381.584 419.898 383.574 421.737 cv
384.509 422.601 385.438 423.421 386.361 424.2 cv
375.899 415.81 mo
335.581 415.81 li
330.786 415.361 325.969 415.228 321.22 415.228 cv
317.737 415.228 314.291 415.3 310.918 415.371 cv
307.545 415.443 304.244 415.515 301.053 415.515 cv
291.73 415.515 283.337 414.903 276.764 411.894 cv
256.614 402.666 251.84 366.488 276.141 350.493 cv
263.109 367.629 269.414 393.925 286.487 401.661 cv
293.711 404.934 303.094 405.433 313.48 405.433 cv
315.758 405.433 318.086 405.409 320.449 405.385 cv
322.813 405.361 325.211 405.337 327.636 405.337 cv
336.403 405.337 345.486 405.652 354.301 407.42 cv
292.417 407.42 li
292.417 408.42 li
358.643 408.42 li
364.628 409.986 370.443 412.326 375.899 415.81 cv
f
401.266 433.59 mo
376.166 433.59 li
375.796 433.264 375.426 432.93 375.055 432.59 cv
398.919 432.59 li
399.695 432.957 400.478 433.29 401.266 433.59 cv
.093019 .0573739 .0683299 0 cmyk
f
387.572 425.2 mo
365.806 425.2 li
365.262 424.855 364.714 424.522 364.163 424.2 cv
386.361 424.2 li
386.766 424.542 387.169 424.875 387.572 425.2 cv
f
377.409 416.81 mo
343.141 416.81 li
340.637 416.371 338.111 416.046 335.581 415.81 cv
375.899 415.81 li
376.405 416.133 376.909 416.466 377.409 416.81 cv
f
358.643 408.42 mo
292.417 408.42 li
292.417 407.42 li
354.301 407.42 li
355.756 407.712 357.205 408.043 358.643 408.42 cv
f
339.264 323.519 mo
339.197 323.519 li
339.385 323.352 339.576 323.181 339.764 323.014 cv
339.97 323.014 li
339.737 323.182 339.5 323.352 339.264 323.519 cv
341.324 322.014 mo
340.875 322.014 li
343.655 319.501 346.345 316.99 349.076 314.624 cv
350.239 314.624 li
347.403 317.121 344.484 319.634 341.324 322.014 cv
351.373 313.624 mo
350.243 313.624 li
352.878 311.394 355.57 309.315 358.439 307.508 cv
356.069 309.458 353.743 311.529 351.373 313.624 cv
.0402228 .022919 .0259098 0 cmyk
f
339.97 323.014 mo
339.764 323.014 li
340.137 322.679 340.505 322.348 340.875 322.014 cv
341.324 322.014 li
340.878 322.349 340.426 322.684 339.97 323.014 cv
.093019 .0573739 .0683299 0 cmyk
f
350.239 314.624 mo
349.076 314.624 li
349.464 314.287 349.852 313.955 350.243 313.624 cv
351.373 313.624 li
350.996 313.957 350.618 314.29 350.239 314.624 cv
f
338.939 323.748 mo
339.026 323.671 339.11 323.596 339.197 323.519 cv
339.264 323.519 li
339.155 323.596 339.048 323.671 338.939 323.748 cv
f
432.973 429.049 mo
437.383 422.93 440.401 415.399 441.226 406.938 cv
442.282 396.115 439.21 388.345 434.636 381.744 cv
438.723 381.744 li
438.723 380.744 li
433.926 380.744 li
432.038 378.149 429.931 375.726 427.773 373.354 cv
438.723 373.354 li
438.723 372.355 li
426.858 372.355 li
424.601 369.899 422.315 367.481 420.188 364.964 cv
435.665 364.964 li
443.9 373.655 451.751 382.812 450.336 398.582 cv
449.152 411.781 442.257 422.575 432.973 429.049 cv
434.714 363.964 mo
419.357 363.964 li
417.82 362.084 416.384 360.142 415.124 358.08 cv
418.272 358.08 li
418.272 357.08 li
414.533 357.08 li
414.436 356.911 414.342 356.745 414.249 356.574 cv
427.941 356.574 li
430.071 359.111 432.394 361.528 434.714 363.964 cv
427.117 355.574 mo
413.717 355.574 li
412.77 353.726 411.975 351.776 411.377 349.69 cv
418.272 349.69 li
418.272 348.69 li
411.109 348.69 li
411.067 348.523 411.026 348.353 410.987 348.185 cv
422.179 348.185 li
423.55 350.827 425.243 353.255 427.117 355.574 cv
421.68 347.185 mo
410.767 347.185 li
410.342 345.201 409.957 343.234 409.596 341.3 cv
418.272 341.3 li
418.272 340.3 li
409.411 340.3 li
409.38 340.131 409.349 339.962 409.319 339.794 cv
419.212 339.794 li
419.301 340.185 419.392 340.578 419.484 340.97 cv
420.002 343.183 420.752 345.242 421.68 347.185 cv
418.989 338.794 mo
409.138 338.794 li
408.777 336.792 408.435 334.826 408.091 332.909 cv
417.768 332.909 li
418.149 334.84 418.549 336.805 418.989 338.794 cv
.0402228 .022919 .0259098 0 cmyk
f
438.723 381.744 mo
434.636 381.744 li
434.403 381.407 434.167 381.075 433.926 380.744 cv
438.723 380.744 li
438.723 381.744 li
.093019 .0573739 .0683299 0 cmyk
f
438.723 373.354 mo
427.773 373.354 li
427.469 373.02 427.164 372.687 426.858 372.355 cv
438.723 372.355 li
438.723 373.354 li
f
435.665 364.964 mo
420.188 364.964 li
419.909 364.633 419.63 364.299 419.357 363.964 cv
434.714 363.964 li
435.031 364.297 435.348 364.63 435.665 364.964 cv
f
427.941 356.574 mo
414.249 356.574 li
414.067 356.245 413.888 355.91 413.717 355.574 cv
427.117 355.574 li
427.388 355.909 427.664 356.244 427.941 356.574 cv
f
422.179 348.185 mo
410.987 348.185 li
410.953 348.04 410.921 347.897 410.889 347.751 cv
410.848 347.562 410.807 347.374 410.767 347.185 cv
421.68 347.185 li
421.841 347.521 422.008 347.855 422.179 348.185 cv
f
419.212 339.794 mo
409.319 339.794 li
409.258 339.459 409.198 339.127 409.138 338.794 cv
418.989 338.794 li
419.062 339.126 419.137 339.46 419.212 339.794 cv
f
417.572 331.909 mo
407.911 331.909 li
407.88 331.741 407.849 331.572 407.819 331.404 cv
417.474 331.404 li
417.507 331.572 417.539 331.74 417.572 331.909 cv
417.28 330.404 mo
407.634 330.404 li
407.256 328.374 406.868 326.41 406.442 324.52 cv
416.135 324.52 li
416.518 326.429 416.892 328.396 417.28 330.404 cv
.0402228 .022919 .0259098 0 cmyk
f
417.474 331.404 mo
407.819 331.404 li
407.758 331.069 407.696 330.736 407.634 330.404 cv
417.28 330.404 li
417.344 330.736 417.409 331.071 417.474 331.404 cv
.093019 .0573739 .0683299 0 cmyk
f
415.932 323.519 mo
406.212 323.519 li
406.172 323.351 406.131 323.181 406.091 323.014 cv
415.828 323.014 li
415.863 323.182 415.897 323.35 415.932 323.519 cv
415.618 322.014 mo
405.843 322.014 li
405.167 319.359 404.39 316.882 403.436 314.624 cv
413.796 314.624 li
414.479 316.946 415.067 319.422 415.618 322.014 cv
413.493 313.624 mo
402.995 313.624 li
401.663 310.732 400 308.234 397.833 306.234 cv
410.419 306.234 li
411.657 308.441 412.648 310.923 413.493 313.624 cv
358.439 307.508 mo
358.961 307.077 359.487 306.652 360.015 306.234 cv
360.573 306.234 li
359.851 306.641 359.138 307.067 358.439 307.508 cv
409.829 305.234 mo
396.652 305.234 li
393.037 302.428 388.151 300.841 381.352 300.841 cv
381.273 300.841 381.193 300.841 381.114 300.842 cv
373.774 300.881 367.763 302.561 362.449 305.234 cv
361.303 305.234 li
365.249 302.23 369.414 299.635 374.191 297.844 cv
401.923 297.844 li
405.352 299.567 407.877 302.089 409.829 305.234 cv
399.582 296.844 mo
377.22 296.844 li
380.776 295.826 384.675 295.249 389.058 295.249 cv
389.147 295.249 389.231 295.249 389.32 295.25 cv
393.363 295.271 396.74 295.827 399.582 296.844 cv
.0402228 .022919 .0259098 0 cmyk
f
415.828 323.014 mo
406.091 323.014 li
406.01 322.678 405.927 322.344 405.843 322.014 cv
415.618 322.014 li
415.688 322.345 415.758 322.679 415.828 323.014 cv
.093019 .0573739 .0683299 0 cmyk
f
413.796 314.624 mo
403.436 314.624 li
403.293 314.285 403.146 313.952 402.995 313.624 cv
413.493 313.624 li
413.596 313.955 413.697 314.287 413.796 314.624 cv
f
410.419 306.234 mo
397.833 306.234 li
397.455 305.885 397.062 305.553 396.652 305.234 cv
409.829 305.234 li
410.031 305.561 410.228 305.895 410.419 306.234 cv
360.573 306.234 mo
360.015 306.234 li
360.442 305.897 360.871 305.563 361.303 305.234 cv
362.449 305.234 li
361.814 305.554 361.19 305.887 360.573 306.234 cv
f
401.923 297.844 mo
374.191 297.844 li
375.173 297.475 376.183 297.141 377.22 296.844 cv
399.582 296.844 li
400.406 297.139 401.186 297.473 401.923 297.844 cv
f
418.272 358.08 mo
415.124 358.08 li
414.923 357.75 414.725 357.416 414.533 357.08 cv
418.272 357.08 li
418.272 358.08 li
f
418.272 349.69 mo
411.377 349.69 li
411.282 349.359 411.193 349.027 411.109 348.69 cv
418.272 348.69 li
418.272 349.69 li
f
418.272 341.3 mo
409.596 341.3 li
409.534 340.965 409.472 340.633 409.411 340.3 cv
418.272 340.3 li
418.272 341.3 li
f
417.768 332.909 mo
408.091 332.909 li
408.031 332.574 407.971 332.242 407.911 331.909 cv
417.572 331.909 li
417.637 332.242 417.702 332.574 417.768 332.909 cv
f
416.135 324.52 mo
406.442 324.52 li
406.366 324.184 406.29 323.85 406.212 323.519 cv
415.932 323.519 li
416 323.852 416.067 324.183 416.135 324.52 cv
f
276.141 350.493 mo
282.108 342.648 292.128 336.722 307.021 335.377 cv
311.887 334.938 316.258 334.082 320.235 332.909 cv
327.243 332.909 li
323.876 335.122 320.214 337.13 316.12 338.794 cv
312.869 338.794 li
312.869 339.794 li
313.487 339.794 li
312.995 339.968 312.499 340.136 311.995 340.3 cv
292.417 340.3 li
292.417 341.3 li
308.591 341.3 li
305.353 342.153 301.87 342.799 298.089 343.19 cv
289.072 344.125 281.815 346.759 276.141 350.493 cv
.0402228 .022919 .0259098 0 cmyk
f
313.487 339.794 mo
312.869 339.794 li
312.869 338.794 li
316.12 338.794 li
315.263 339.142 314.383 339.477 313.487 339.794 cv
.093019 .0573739 .0683299 0 cmyk
f
328.725 331.909 mo
323.323 331.909 li
323.785 331.746 324.247 331.576 324.698 331.404 cv
329.446 331.404 li
329.207 331.573 328.966 331.742 328.725 331.909 cv
330.826 330.404 mo
327.159 330.404 li
331.077 328.711 334.584 326.704 337.818 324.52 cv
338.063 324.52 li
335.763 326.533 333.375 328.518 330.826 330.404 cv
.0402228 .022919 .0259098 0 cmyk
f
329.446 331.404 mo
324.698 331.404 li
325.537 331.085 326.356 330.751 327.159 330.404 cv
330.826 330.404 li
330.371 330.741 329.911 331.074 329.446 331.404 cv
.093019 .0573739 .0683299 0 cmyk
f
308.591 341.3 mo
292.417 341.3 li
292.417 340.3 li
311.995 340.3 li
310.892 340.658 309.756 340.993 308.591 341.3 cv
f
327.243 332.909 mo
320.235 332.909 li
321.292 332.597 322.319 332.264 323.323 331.909 cv
328.725 331.909 li
328.237 332.247 327.743 332.58 327.243 332.909 cv
f
338.063 324.52 mo
337.818 324.52 li
338.195 324.265 338.569 324.007 338.939 323.748 cv
338.649 324.005 338.356 324.264 338.063 324.52 cv
f
412.612 435.67 mo
408.81 435.67 404.982 435.003 401.266 433.59 cv
418.272 433.59 li
418.272 432.59 li
398.919 432.59 li
398.32 432.306 397.725 432.003 397.134 431.678 cv
394.043 429.98 390.846 427.849 387.572 425.2 cv
418.272 425.2 li
418.272 424.2 li
386.361 424.2 li
385.438 423.421 384.509 422.601 383.574 421.737 cv
381.584 419.898 379.526 418.263 377.409 416.81 cv
418.272 416.81 li
418.272 415.81 li
375.899 415.81 li
370.443 412.326 364.628 409.986 358.643 408.42 cv
418.272 408.42 li
418.272 407.42 li
354.301 407.42 li
345.486 405.652 336.403 405.337 327.636 405.337 cv
325.211 405.337 322.813 405.361 320.449 405.385 cv
318.086 405.409 315.758 405.433 313.48 405.433 cv
303.094 405.433 293.711 404.934 286.487 401.661 cv
269.414 393.925 263.109 367.629 276.141 350.493 cv
281.815 346.759 289.072 344.125 298.089 343.19 cv
301.87 342.799 305.353 342.153 308.591 341.3 cv
409.596 341.3 li
409.957 343.234 410.342 345.201 410.767 347.185 cv
312.869 347.185 li
312.869 348.185 li
410.987 348.185 li
411.026 348.353 411.067 348.523 411.109 348.69 cv
292.417 348.69 li
292.417 349.69 li
411.377 349.69 li
411.975 351.776 412.77 353.726 413.717 355.574 cv
312.869 355.574 li
312.869 356.574 li
414.249 356.574 li
414.342 356.745 414.436 356.911 414.533 357.08 cv
292.417 357.08 li
292.417 358.08 li
415.124 358.08 li
416.384 360.142 417.82 362.084 419.357 363.964 cv
312.869 363.964 li
312.869 364.964 li
420.188 364.964 li
422.315 367.481 424.601 369.899 426.858 372.355 cv
312.869 372.355 li
312.869 373.354 li
427.773 373.354 li
429.931 375.726 432.038 378.149 433.926 380.744 cv
312.869 380.744 li
312.869 381.744 li
434.636 381.744 li
439.21 388.345 442.282 396.115 441.226 406.938 cv
440.401 415.399 437.383 422.93 432.973 429.049 cv
426.899 433.284 419.802 435.67 412.612 435.67 cv
292.417 399.03 mo
292.417 400.03 li
418.272 400.03 li
418.272 399.03 li
292.417 399.03 li
312.869 397.524 mo
312.869 398.524 li
438.723 398.524 li
438.723 397.524 li
312.869 397.524 li
292.417 390.64 mo
292.417 391.64 li
418.272 391.64 li
418.272 390.64 li
292.417 390.64 li
312.869 389.135 mo
312.869 390.135 li
438.723 390.135 li
438.723 389.135 li
312.869 389.135 li
292.417 382.25 mo
292.417 383.25 li
418.272 383.25 li
418.272 382.25 li
292.417 382.25 li
292.417 373.859 mo
292.417 374.859 li
418.272 374.859 li
418.272 373.859 li
292.417 373.859 li
292.417 365.47 mo
292.417 366.47 li
418.272 366.47 li
418.272 365.47 li
292.417 365.47 li
f
438.723 398.524 mo
312.869 398.524 li
312.869 397.524 li
438.723 397.524 li
438.723 398.524 li
.144869 .0940871 .106996 0 cmyk
f
438.723 390.135 mo
312.869 390.135 li
312.869 389.135 li
438.723 389.135 li
438.723 390.135 li
f
434.636 381.744 mo
312.869 381.744 li
312.869 380.744 li
433.926 380.744 li
434.167 381.075 434.403 381.407 434.636 381.744 cv
f
427.773 373.354 mo
312.869 373.354 li
312.869 372.355 li
426.858 372.355 li
427.164 372.687 427.469 373.02 427.773 373.354 cv
f
420.188 364.964 mo
312.869 364.964 li
312.869 363.964 li
419.357 363.964 li
419.63 364.299 419.909 364.633 420.188 364.964 cv
f
414.249 356.574 mo
312.869 356.574 li
312.869 355.574 li
413.717 355.574 li
413.888 355.91 414.067 356.245 414.249 356.574 cv
f
410.987 348.185 mo
312.869 348.185 li
312.869 347.185 li
410.767 347.185 li
410.807 347.374 410.848 347.562 410.889 347.751 cv
410.921 347.897 410.953 348.04 410.987 348.185 cv
f
409.411 340.3 mo
311.995 340.3 li
312.499 340.136 312.995 339.968 313.487 339.794 cv
409.319 339.794 li
409.349 339.962 409.38 340.131 409.411 340.3 cv
409.138 338.794 mo
316.12 338.794 li
320.214 337.13 323.876 335.122 327.243 332.909 cv
408.091 332.909 li
408.435 334.826 408.777 336.792 409.138 338.794 cv
.093019 .0573739 .0683299 0 cmyk
f
409.319 339.794 mo
313.487 339.794 li
314.383 339.477 315.263 339.142 316.12 338.794 cv
409.138 338.794 li
409.198 339.127 409.258 339.459 409.319 339.794 cv
.144869 .0940871 .106996 0 cmyk
f
407.911 331.909 mo
328.725 331.909 li
328.966 331.742 329.207 331.573 329.446 331.404 cv
407.819 331.404 li
407.849 331.572 407.88 331.741 407.911 331.909 cv
407.634 330.404 mo
330.826 330.404 li
333.375 328.518 335.763 326.533 338.063 324.52 cv
406.442 324.52 li
406.868 326.41 407.256 328.374 407.634 330.404 cv
.093019 .0573739 .0683299 0 cmyk
f
407.819 331.404 mo
329.446 331.404 li
329.911 331.074 330.371 330.741 330.826 330.404 cv
407.634 330.404 li
407.696 330.736 407.758 331.069 407.819 331.404 cv
.144869 .0940871 .106996 0 cmyk
f
406.212 323.519 mo
339.264 323.519 li
339.5 323.352 339.737 323.182 339.97 323.014 cv
406.091 323.014 li
406.131 323.181 406.172 323.351 406.212 323.519 cv
405.843 322.014 mo
341.324 322.014 li
344.484 319.634 347.403 317.121 350.239 314.624 cv
403.436 314.624 li
404.39 316.882 405.167 319.359 405.843 322.014 cv
402.995 313.624 mo
351.373 313.624 li
353.743 311.529 356.069 309.458 358.439 307.508 cv
359.138 307.067 359.851 306.641 360.573 306.234 cv
397.833 306.234 li
400 308.234 401.663 310.732 402.995 313.624 cv
396.652 305.234 mo
362.449 305.234 li
367.763 302.561 373.774 300.881 381.114 300.842 cv
381.193 300.841 381.273 300.841 381.352 300.841 cv
388.151 300.841 393.037 302.428 396.652 305.234 cv
.093019 .0573739 .0683299 0 cmyk
f
406.091 323.014 mo
339.97 323.014 li
340.426 322.684 340.878 322.349 341.324 322.014 cv
405.843 322.014 li
405.927 322.344 406.01 322.678 406.091 323.014 cv
.144869 .0940871 .106996 0 cmyk
f
403.436 314.624 mo
350.239 314.624 li
350.618 314.29 350.996 313.957 351.373 313.624 cv
402.995 313.624 li
403.146 313.952 403.293 314.285 403.436 314.624 cv
f
397.833 306.234 mo
360.573 306.234 li
361.19 305.887 361.814 305.554 362.449 305.234 cv
396.652 305.234 li
397.062 305.553 397.455 305.885 397.833 306.234 cv
f
418.272 433.59 mo
401.266 433.59 li
400.478 433.29 399.695 432.957 398.919 432.59 cv
418.272 432.59 li
418.272 433.59 li
f
418.272 425.2 mo
387.572 425.2 li
387.169 424.875 386.766 424.542 386.361 424.2 cv
418.272 424.2 li
418.272 425.2 li
f
418.272 416.81 mo
377.409 416.81 li
376.909 416.466 376.405 416.133 375.899 415.81 cv
418.272 415.81 li
418.272 416.81 li
f
418.272 408.42 mo
358.643 408.42 li
357.205 408.043 355.756 407.712 354.301 407.42 cv
418.272 407.42 li
418.272 408.42 li
f
418.272 400.03 mo
292.417 400.03 li
292.417 399.03 li
418.272 399.03 li
418.272 400.03 li
f
418.272 391.64 mo
292.417 391.64 li
292.417 390.64 li
418.272 390.64 li
418.272 391.64 li
f
418.272 383.25 mo
292.417 383.25 li
292.417 382.25 li
418.272 382.25 li
418.272 383.25 li
f
418.272 374.859 mo
292.417 374.859 li
292.417 373.859 li
418.272 373.859 li
418.272 374.859 li
f
418.272 366.47 mo
292.417 366.47 li
292.417 365.47 li
418.272 365.47 li
418.272 366.47 li
f
415.124 358.08 mo
292.417 358.08 li
292.417 357.08 li
414.533 357.08 li
414.725 357.416 414.923 357.75 415.124 358.08 cv
f
411.377 349.69 mo
292.417 349.69 li
292.417 348.69 li
411.109 348.69 li
411.193 349.027 411.282 349.359 411.377 349.69 cv
f
409.596 341.3 mo
308.591 341.3 li
309.756 340.993 310.892 340.658 311.995 340.3 cv
409.411 340.3 li
409.472 340.633 409.534 340.965 409.596 341.3 cv
f
408.091 332.909 mo
327.243 332.909 li
327.743 332.58 328.237 332.247 328.725 331.909 cv
407.911 331.909 li
407.971 332.242 408.031 332.574 408.091 332.909 cv
f
406.442 324.52 mo
338.063 324.52 li
338.356 324.264 338.649 324.005 338.939 323.748 cv
339.048 323.671 339.155 323.596 339.264 323.519 cv
406.212 323.519 li
406.29 323.85 406.366 324.184 406.442 324.52 cv
f
454.479 372.082 mo
452.894 397.329 425.322 411.91 402.911 400.178 cv
398.541 397.89 393.939 394.829 389.172 390.782 cv
359.127 365.28 315.487 379.656 292.462 369.553 cv
267.472 358.588 263.847 312.824 310.633 310.501 cv
353.06 308.394 356.159 275.716 390.764 277.012 cv
415.947 277.956 415.672 297.118 422.088 319.18 cv
427.923 339.241 456.102 346.244 454.479 372.082 cv
cp
level3{
gsave
clp
[165.284 107.841 -107.841 165.284 302.863 295.397 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~A2sVi@lXMh@Q4>f@5n5e@5e/d?T%la?8_c`>r;T^>VlE\>Vc?[>;H6Z=Y]sW=>BjV="s[T<\OLR<A+=P
<%e4O;_A%M;_A%M;CqkK:b;YI:FlJG:FcDF:+?5D9e$,C9ITrA8gs`?8gjZ>814H<7je9:7OA*874&!7
73qp66R;^466lO25pQF15U-7/59^(-4s9n+4Wse*4<OV(4!+G&3?J5$3$&&"2]Vku2]Met2B2\s1`HDp
1E-;o1E-;o1)^,m0H'ok0,X`i0,OZh/f4Qg/JeBe//J9d.i/0c.M`!a.2Dm`.2;g_-klX]-56F[,ng7Y
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[165.284 107.841 -107.841 165.284 302.863 295.397 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@q0"Y@q&nV@UW\R@:3JN?smAL?X@&F?<piB?!LW>>[(E:>?b<9>?Y35=]ed.=BAR*=&r@&<`N."<E)ps
<)cdp;c?Rl;GpCj;Gp@h:f'q`:JX_\:/4PZ:/4MX9he;T9MA)P8kMZH8P)KF84Z6@7n6$<7Rfg877BU4
6psF26pj=.6:+")5s[e%5X7S!5<h@r5!D.n4Ztqj4?P_f4$,Mb3]T2[3&ilV2`EZR2E!HO2E!HN2)I-G
1G^gC1,:U?1,:U?0ek@90/"t3/hSb//hSb//M/P+/1`>'.k<,#.Olnt.4H\p-n$Jl-n$Jl-RU5f,pai`
~>
<~3&ilW3&ilW3&`cT2`EZS2`<QP2Dm?L2)R6K2)I-H1c$pD1GU^@1,:U?1,1L<0ekC;0eb:80J>(40.nk0
/hSb//hS_-/M/P+/M/M)/1`>'/1`;%.k<)!.Olkr.4H\p.4HYn-n$Jl-n$Gj-RU8h-RU5f-71#b,pai`
,pai_,U=W\,U=W[,9nEX,9nEW+sJ3S+X&!O+<VdL+<VdK+!2RG*Zc@D*Zc@C*??.?*#oq;)]K_8)]K_7
)B'M4)B'M4)B'M4)&X;0)&X;0(`4),(Ddl((Ddl(()@Z$()@Z$()@Z$'bqGu'bqGu'GM5q',)#m',)#m
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
336.728 411.123 mo
317.869 406.472 295.374 390.015 298.866 354.836 cv
301.66 326.675 320.739 303.009 346.811 292.007 cv
370.418 282.045 400.319 277.305 415.889 306.006 cv
444.03 357.877 449.435 393.882 426.388 409.594 cv
405.262 423.997 403.766 403.128 370.788 406.799 cv
360.24 407.973 358.254 416.433 336.728 411.123 cv
cp
level3{
gsave
clp
[-96.0823 96.0823 -96.0823 -96.0823 419.757 313.758 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~lHfM2l-KD1kg'5/kfs/.kfj)-kKEo+kKEo+kK<i*kK*](k/[N&k/[N&ji7?$jMh0"jMh0"j2:otj2:ot
ikk`rikbZqiPGQpiP>Koi4o<mhnB'jhnB'jhn/phhR`afhRW[ehRNUdh73Lch7*FbgpR1_gU."]gU."]
g9^h[g9UbZfs(MWfWY>Uf<5/Sf<,)ReuSiOeuJcNeZ&TLeYrNKe>E9He><3Ge"m$Ed\HjCdA$[Ad@pU@
d%C@=d%::<c^b%9cC=k7c'eV4baAG2ba8A1bE`,.b*;r,aclc*acZW(aH6H&aH$<$a,U-"a,Buu`esfs
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-96.0823 96.0823 -96.0823 -96.0823 419.757 313.758 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~l07Hsl0.?pki_-lkND$kkND$kkN:phk2tggk2tggk2tggk2k^djlPUcjlGL`jQ#:\j5]1[j5T(Xio8tW
io8qUiSibSiSi_Qi8EPOi8EMMhr!;IhVR,GhVR,GhVR)Eh;-oCh;-oCh;-lAgt^]?gt^Z=gY:H9g=k97
g=k96g"G'3g"G'2f\"j.f@SX*f%/F'f%/F&e^`4#e^`4"eC<!teC<!se'ldpe'ldodaHRkdF$@gd*U.d
d*U.dcd0q`cd0q`cHa_\c-=MXbfn;TbKJ)PbKJ)Pb0%lLaiVZHaN2HDaN2HDa2c6@a2c6@`l?$<`l?$<
~>
<~cd0q`cd0q`cd'h]cHXVYc-4DUbfe2QbKJ)PbK@uLaiMQEaN)?Aa2c6@a2Z-=`l5p9`Pog7`5BL1_o'C0
_o'@._SX.*_83t(_83q&^qd_"^:q:o]tM+m]Y(kg]=YYc]"5G_\[f5[\@B&Y\@B#W[^NTO[C*BK['[3I
['[3HZa7!DZE^[=Yct@8YHP.4Y-+q0XfSV)X/i;$WiE(uWMukqW2HPjVP^5eV5:#aUnjf]USFTYU8"BU
TqS-PT:_aJSt;LDS=H+>S"#k8R@0J2R$a8.Q^=#(Q'IW"Pa%DsPEV/mOcbcgOH>NaNfK-[NK&mUMi3LO
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
433.44 362.789 mo
429.82 369.898 424.411 376.12 418.569 381.376 cv
405.358 393.244 388.233 399.53 370.502 400.755 cv
344.045 402.587 338.236 417.164 338.236 417.164 cv
338.236 417.164 314.164 451.923 287.838 436.641 cv
261.523 421.359 284.142 392.019 284.207 382.579 cv
284.272 373.139 274.16 366.94 282.982 354.963 cv
291.794 342.987 312.777 345.024 325.078 340.147 cv
337.38 335.281 350.971 316.26 350.971 316.26 cv
350.971 316.26 380.451 281.317 410.744 299.72 cv
416.759 303.373 422.807 309.128 428.671 317.68 cv
440.625 335.118 439.78 350.314 433.44 362.789 cv
cp
level3{
gsave
clp
[117.858 0 0 77.2223 373.349 333.304 ]ct
/9 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~R9fjnRU6$pS6u<sSRDKuSmh["TO\$&Tk+3(ULjK+Uh9Z-V.fo0VeQ23W+uA5Wb_Y8X)7n;XD\(=X`+7?
YAjOBY]BdEZ?-'HZZZ<K[<MZO[WqiQ[sA#S\U4AW\paVZ]79k]]n$.`^4H=b^OuRe_1hpi_M8*k_he?n
`/4Np`f'lta,L'!aH$<$acHK&b)lZ(bEDo+b`i)-c'88/cBeM2c^4\4d$aq7d@1+9d[^@<e"-O>eXlgA
eY)sCetN-Ef:r<GfVAKIg84iMg8=oNgSk/Qgo:>Sh5^MUhQ6bXhlZqZhlm(\i3<7^iN`F`ij8[cj0\je
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[117.858 0 0 77.2223 373.349 333.304 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~R$jA1R@9S6S"-"=S=Q4ASXuFFT:hjMTV8'RU8+KYUSO]]UnsobVPg>iVl6PnWN)tuWiN2$X/rD(XKAV-
Y-+t3YHP17Z*CU?ZEggC['[6K[C*HO[^NZS\@B)[\[f;_]"5Mc]Y(qk]tM.o^:q@s^qde&_84"*_SX4.
_o'C1`5T^8`l?$=a2c6AaN2HEaiVZIb0%lMbKJ)Qbfn;Uc-=MYcHa_]cd0qad*U.edF$@idaHRme'ums
eC<!te^`4#f%/F'f@SX+f\"m1g"G'3g=k97gY:K;gt^]?h;-oChVR,GhVR,Ghr!>Ki8EPOiSibSio8tW
~>
<~?!^iD?=.&H?XR8L?t!JP@:E\U@q9+\A7]=`AS,OdAnPaiBPD0pBkhBtC27U#CM[g(D/O6/DJsH3DfBZ7
E,]f:EcQ5BF)uGFF`hkNGB\:VG^+LZH$O^^H[C-fI=6QnIt*!!J:N3%JUrE)K7ei1KnY89L5(J=LkpnE
M2@(HMMmCON/W^TNK0$[O,o?`OH>QdOcklkPEV2pPa%DtQ'R`&Q^=&+R$jA2R[T\7S"-">SXl=CSt;OG
T:_dLTqS0RU8"BVUSFTZUnji`VP^5fVl-JlWMukrWiE)!X/i>'Xf\_-Y-+t3Yct@9Z*CR=ZEggC['[3I
~>
0 0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
409.362 362.502 mo
408.942 362.47 li
407.19 362.338 405.527 361.646 404.531 360.297 cv
403.659 359.118 402.166 358.412 400.491 358.692 cv
399.063 358.93 397.823 359.978 397.357 361.348 cv
396.443 364.028 398.302 366.637 400.919 366.835 cv
402.13 366.927 403.257 366.483 404.069 365.705 cv
405.238 364.585 406.826 364.014 408.44 364.135 cv
409.322 364.202 li
411.171 364.342 412.655 365.61 413.355 367.327 cv
414.629 370.45 417.778 372.654 421.505 372.43 cv
425.177 372.21 428.338 369.423 429.03 365.811 cv
429.972 360.897 426.428 356.404 421.585 356.038 cv
418.288 355.789 415.298 357.522 413.787 360.232 cv
412.916 361.796 411.147 362.636 409.362 362.502 cv
cp
level3{
gsave
clp
[-32.2042 3.94387e-15 -3.94387e-15 -32.2042 428.887 364.23 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~j0\jeij8[ciN`F`i3<7^hlm(\hlZqZhQ6bXh5^MUgo:>SgSk/Qg8=oNg84iMfVAKIf:r<GetN-EeY)sC
eXlgAe"-O>d[^@<d@1+9d$aq7c^4\4cBeM2c'88/b`i)-bEDo+b)lZ(acHK&aH$<$a,L'!`f'lt`/4Np
_he?n_M8*k_1hpi^OuRe^4H=b]n$.`]79k]\paVZ\U4AW[sA#S[WqiQ[<MZOZZZ<KZ?-'HY]BdEYAjOB
X`+7?XD\(=X)7n;Wb_Y8W+uA5VeQ23V.fo0Uh9Z-ULjK+Tk+3(TO\$&Smh["SRDKuS6u<sRU6$pR9fjn
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-32.2042 3.94387e-15 -3.94387e-15 -32.2042 428.887 364.23 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~io8tWio/kTiS`YPi8<GLhqm5HhVR,GhVI#Dh;$f@gtUT<gY1B8g=b04g"G'2f[na,f@JO(f%&=$e^W*u
eC<!te'landaHOjdF$=fd*U+bcd0n^cHa\Zc-=JVbfn8RbKJ&Nb0%iJaiVWFaN2EBa2c3>`l?!:`5KR2
_o'C/_SX1+_83t'^q[Xu^:q=p]tM+l]Xtee]"5J`\[f8\\@8rU[^NWP[C*EL['R*EZEgd@Z*:I9YHP.4
Y-+n/XK8M)X/i;%WiE)!WMuhpVl-GjVP^2dUnjf^USFTZU8"?TTV.sNT:_^HSXl=BS=H+>S"#k8R@0J2
~>
<~['[3I['R*EZE^[>Z*:I:Yck75Y-"h.XfSV)X/`2"Wi;tsWMlbnVl$>gVPU,bUna][US=KWU7n9STqJ'N
T:_^HSt;LDSXl:@S"#k8R[TY4R$a5,Q^=#(Q'ISuPa%AqPEV/mOcb`eOH>NaO,o<]NK&mUN/W[QMMd7I
M2@(FLkgb?L5(G:KnP,3K7\]+JUrB&J:N0"IsuipI=-EhH[:!`H$O[[G^+IWGBS.PF`__HF)uDCEcH)<
E,]c8Df9Q4DJj?0D/F**CMR^$C2.KuBk_9qBP;$kAnGXeAS#FaA7T4]@q/tW@:<SQ?smAM?XI/I?=$rE
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
307.181 400.33 mo
306.906 400.01 li
305.761 398.678 305.074 397.013 305.323 395.355 cv
305.54 393.905 304.984 392.35 303.601 391.363 cv
302.423 390.522 300.805 390.386 299.507 391.025 cv
296.966 392.274 296.435 395.433 298.146 397.424 cv
298.938 398.345 300.048 398.828 301.172 398.852 cv
302.791 398.887 304.318 399.605 305.373 400.833 cv
305.949 401.504 li
307.158 402.91 307.311 404.856 306.592 406.566 cv
305.284 409.674 305.952 413.46 308.746 415.937 cv
311.498 418.377 315.704 418.642 318.747 416.577 cv
322.888 413.768 323.56 408.085 320.394 404.402 cv
318.238 401.894 314.899 401.006 311.914 401.854 cv
310.192 402.343 308.347 401.687 307.181 400.33 cv
cp
level3{
gsave
clp
[-27.2066 -26.4401 26.4401 -27.2066 322.875 418.224 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-27.2066 -26.4401 26.4401 -27.2066 322.875 418.224 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
274.351 363.193 mo
274.351 365.623 272.381 367.593 269.951 367.593 cv
267.521 367.593 265.552 365.623 265.552 363.193 cv
265.552 360.763 267.521 358.794 269.951 358.794 cv
272.381 358.794 274.351 360.763 274.351 363.193 cv
cp
level3{
gsave
clp
[-11.9651 -1.46531e-15 1.46531e-15 -11.9651 273.996 363.193 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-11.9651 -1.46531e-15 1.46531e-15 -11.9651 273.996 363.193 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
275.104 375.354 mo
275.104 376.569 274.119 377.554 272.904 377.554 cv
271.689 377.554 270.704 376.569 270.704 375.354 cv
270.704 374.139 271.689 373.154 272.904 373.154 cv
274.119 373.154 275.104 374.139 275.104 375.354 cv
cp
level3{
gsave
clp
[-5.98263 -7.32661e-16 7.32661e-16 -5.98263 274.926 375.354 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-5.98263 -7.32661e-16 7.32661e-16 -5.98263 274.926 375.354 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
0 0 0 0 cmyk
MNBOCF+BPreplay-Bold*1 [17.3034 0 0 -17.3034 0 0 ]msf312.87 341.287 mo(ABSTRACT)[12.6313 11.0566 9.36133 9.96582 11.5933 11.749 13.1851 0 ]xsh312.87 362.051 mo(LIQUID)[9.65527 4.39502 14.085 12.7173 4.39502 0 ]xshMNBOCG+FiraSans-Light*1 [13.8531 0 0 -13.8531 0 0 ]msf312.869 378.555 mo(LOREM IPSUM)[5.94287 9.57227 8.17383 7.09277 10.666 3.86523 3.90625 7.57764 7.4668 9.03223 0 ]xsh367.732 399.26 mo
368.45 399.26 369.032 398.678 369.032 397.96 cv
369.032 397.242 368.45 396.66 367.732 396.66 cv
367.014 396.66 366.432 397.242 366.432 397.96 cv
366.432 398.678 367.014 399.26 367.732 399.26 cv
cp
f
352.823 419.804 mo
352.104 419.804 351.522 420.386 351.522 421.104 cv
351.522 421.823 352.104 422.405 352.823 422.405 cv
353.54 422.405 354.123 421.823 354.123 421.104 cv
354.123 420.386 353.54 419.804 352.823 419.804 cv
cp
f
352.823 414.018 mo
352.104 414.018 351.522 414.6 351.522 415.318 cv
351.522 416.037 352.104 416.619 352.823 416.619 cv
353.54 416.619 354.123 416.037 354.123 415.318 cv
354.123 414.6 353.54 414.018 352.823 414.018 cv
cp
f
352.823 408.232 mo
352.104 408.232 351.522 408.814 351.522 409.532 cv
351.522 410.25 352.104 410.833 352.823 410.833 cv
353.54 410.833 354.123 410.25 354.123 409.532 cv
354.123 408.814 353.54 408.232 352.823 408.232 cv
cp
f
352.823 402.446 mo
352.104 402.446 351.522 403.028 351.522 403.746 cv
351.522 404.464 352.104 405.047 352.823 405.047 cv
353.54 405.047 354.123 404.464 354.123 403.746 cv
354.123 403.028 353.54 402.446 352.823 402.446 cv
cp
f
345.368 402.446 mo
344.65 402.446 344.068 403.028 344.068 403.746 cv
344.068 404.464 344.65 405.047 345.368 405.047 cv
346.086 405.047 346.668 404.464 346.668 403.746 cv
346.668 403.028 346.086 402.446 345.368 402.446 cv
cp
f
345.368 408.232 mo
344.65 408.232 344.068 408.814 344.068 409.532 cv
344.068 410.25 344.65 410.833 345.368 410.833 cv
346.086 410.833 346.668 410.25 346.668 409.532 cv
346.668 408.814 346.086 408.232 345.368 408.232 cv
cp
f
345.368 419.804 mo
344.65 419.804 344.068 420.386 344.068 421.104 cv
344.068 421.823 344.65 422.405 345.368 422.405 cv
346.086 422.405 346.668 421.823 346.668 421.104 cv
346.668 420.386 346.086 419.804 345.368 419.804 cv
cp
f
345.368 414.018 mo
344.65 414.018 344.068 414.6 344.068 415.318 cv
344.068 416.037 344.65 416.619 345.368 416.619 cv
346.086 416.619 346.668 416.037 346.668 415.318 cv
346.668 414.6 346.086 414.018 345.368 414.018 cv
cp
f
345.368 396.66 mo
344.65 396.66 344.068 397.242 344.068 397.96 cv
344.068 398.678 344.65 399.26 345.368 399.26 cv
346.086 399.26 346.668 398.678 346.668 397.96 cv
346.668 397.242 346.086 396.66 345.368 396.66 cv
cp
f
352.823 396.66 mo
352.104 396.66 351.522 397.242 351.522 397.96 cv
351.522 398.678 352.104 399.26 352.823 399.26 cv
353.54 399.26 354.123 398.678 354.123 397.96 cv
354.123 397.242 353.54 396.66 352.823 396.66 cv
cp
f
367.732 414.018 mo
367.014 414.018 366.432 414.6 366.432 415.318 cv
366.432 416.037 367.014 416.619 367.732 416.619 cv
368.45 416.619 369.032 416.037 369.032 415.318 cv
369.032 414.6 368.45 414.018 367.732 414.018 cv
cp
f
367.732 408.232 mo
367.014 408.232 366.432 408.814 366.432 409.532 cv
366.432 410.25 367.014 410.833 367.732 410.833 cv
368.45 410.833 369.032 410.25 369.032 409.532 cv
369.032 408.814 368.45 408.232 367.732 408.232 cv
cp
f
367.732 402.446 mo
367.014 402.446 366.432 403.028 366.432 403.746 cv
366.432 404.464 367.014 405.047 367.732 405.047 cv
368.45 405.047 369.032 404.464 369.032 403.746 cv
369.032 403.028 368.45 402.446 367.732 402.446 cv
cp
f
367.732 419.804 mo
367.014 419.804 366.432 420.386 366.432 421.104 cv
366.432 421.823 367.014 422.405 367.732 422.405 cv
368.45 422.405 369.032 421.823 369.032 421.104 cv
369.032 420.386 368.45 419.804 367.732 419.804 cv
cp
f
360.277 402.446 mo
359.559 402.446 358.977 403.028 358.977 403.746 cv
358.977 404.464 359.559 405.047 360.277 405.047 cv
360.995 405.047 361.577 404.464 361.577 403.746 cv
361.577 403.028 360.995 402.446 360.277 402.446 cv
cp
f
360.277 414.018 mo
359.559 414.018 358.977 414.6 358.977 415.318 cv
358.977 416.037 359.559 416.619 360.277 416.619 cv
360.995 416.619 361.577 416.037 361.577 415.318 cv
361.577 414.6 360.995 414.018 360.277 414.018 cv
cp
f
360.277 396.66 mo
359.559 396.66 358.977 397.242 358.977 397.96 cv
358.977 398.678 359.559 399.26 360.277 399.26 cv
360.995 399.26 361.577 398.678 361.577 397.96 cv
361.577 397.242 360.995 396.66 360.277 396.66 cv
cp
f
360.277 419.804 mo
359.559 419.804 358.977 420.386 358.977 421.104 cv
358.977 421.823 359.559 422.405 360.277 422.405 cv
360.995 422.405 361.577 421.823 361.577 421.104 cv
361.577 420.386 360.995 419.804 360.277 419.804 cv
cp
f
360.277 408.232 mo
359.559 408.232 358.977 408.814 358.977 409.532 cv
358.977 410.25 359.559 410.833 360.277 410.833 cv
360.995 410.833 361.577 410.25 361.577 409.532 cv
361.577 408.814 360.995 408.232 360.277 408.232 cv
cp
f
219.49 436.41 mo
160.007 436.41 li
160.469 436.09 160.927 435.757 161.383 435.41 cv
219.49 435.41 li
219.49 436.41 li
129.166 436.41 mo
93.6362 436.41 li
93.6362 435.41 li
127.341 435.41 li
127.935 435.75 128.54 436.082 129.166 436.41 cv
.0402228 .022919 .0259098 0 cmyk
f
219.49 428.019 mo
169.375 428.019 li
169.687 427.69 169.999 427.357 170.312 427.019 cv
219.49 427.019 li
219.49 428.019 li
117.537 428.019 mo
93.6362 428.019 li
93.6362 427.019 li
116.558 427.019 li
116.877 427.356 117.203 427.689 117.537 428.019 cv
f
219.49 419.63 mo
176.936 419.63 li
177.231 419.298 177.527 418.965 177.825 418.63 cv
219.49 418.63 li
219.49 419.63 li
110.82 419.63 mo
93.6362 419.63 li
93.6362 418.63 li
110.194 418.63 li
110.399 418.966 110.607 419.298 110.82 419.63 cv
f
219.49 411.24 mo
184.683 411.24 li
185.038 410.896 185.399 410.563 185.768 410.24 cv
219.49 410.24 li
219.49 411.24 li
106.229 411.24 mo
93.6362 411.24 li
93.6362 410.24 li
105.755 410.24 li
105.912 410.575 106.069 410.907 106.229 411.24 cv
f
219.49 402.85 mo
198.919 402.85 li
199.861 402.5 200.814 402.169 201.778 401.85 cv
219.49 401.85 li
219.49 402.85 li
102.438 402.85 mo
93.6362 402.85 li
93.6362 401.85 li
101.996 401.85 li
102.143 402.182 102.291 402.518 102.438 402.85 cv
f
98.5769 394.46 mo
93.6362 394.46 li
93.6362 393.46 li
98.0774 393.46 li
98.2456 393.793 98.4128 394.128 98.5769 394.46 cv
f
93.9161 386.069 mo
93.6362 386.069 li
93.6362 385.63 li
93.7301 385.776 93.8235 385.923 93.9161 386.069 cv
f
243.694 375.998 mo
254.794 350.332 235.175 321.936 207.091 321.895 cv
207.056 321.895 207.021 321.895 206.987 321.895 cv
201.504 321.895 195.398 322.532 188.625 324.047 cv
183.69 325.151 178.851 325.641 174.109 325.641 cv
138.934 325.642 109.075 298.676 84.7713 295.103 cv
87.924 294.016 91.2539 293.421 94.6463 293.421 cv
95.3192 293.421 95.9982 293.444 96.6752 293.492 cv
119.813 295.121 148.555 322.272 182.648 322.272 cv
187.073 322.272 191.588 321.814 196.192 320.785 cv
202.511 319.372 208.208 318.776 213.322 318.776 cv
213.355 318.776 213.389 318.776 213.422 318.776 cv
239.786 318.815 258.156 345.634 247.381 369.695 cv
246.314 372.077 245.075 374.161 243.694 375.998 cv
f
145.757 441.196 mo
141.455 441.196 136.649 440.034 131.092 437.374 cv
130.433 437.059 129.79 436.737 129.166 436.41 cv
160.007 436.41 li
155.716 439.385 151.129 441.196 145.757 441.196 cv
161.383 435.41 mo
127.341 435.41 li
123.447 433.18 120.245 430.698 117.537 428.019 cv
145.988 428.019 li
149.739 429.447 153.106 430.089 156.195 430.089 cv
159.532 430.089 162.544 429.34 165.367 428.019 cv
169.375 428.019 li
166.727 430.819 164.104 433.341 161.383 435.41 cv
170.312 427.019 mo
167.288 427.019 li
170.489 425.183 173.473 422.625 176.453 419.63 cv
176.936 419.63 li
174.653 422.202 172.469 424.696 170.312 427.019 cv
143.582 427.019 mo
116.558 427.019 li
114.343 424.686 112.471 422.211 110.82 419.63 cv
131.845 419.63 li
134.764 422.165 138.248 424.482 142.512 426.523 cv
142.872 426.695 143.228 426.86 143.582 427.019 cv
177.825 418.63 mo
177.433 418.63 li
179.635 416.35 181.849 413.848 184.158 411.24 cv
184.683 411.24 li
184.443 411.472 184.207 411.71 183.974 411.952 cv
181.819 414.187 179.784 416.433 177.825 418.63 cv
130.734 418.63 mo
110.194 418.63 li
108.734 416.246 107.443 413.773 106.229 411.24 cv
124.438 411.24 li
126.214 413.845 128.261 416.321 130.734 418.63 cv
185.768 410.24 mo
185.043 410.24 li
187.186 407.824 189.418 405.332 191.807 402.85 cv
198.919 402.85 li
194.099 404.637 189.588 406.889 185.768 410.24 cv
123.773 410.24 mo
105.755 410.24 li
104.619 407.821 103.541 405.353 102.438 402.85 cv
119.658 402.85 li
120.9 405.393 122.235 407.867 123.773 410.24 cv
201.778 401.85 mo
192.817 401.85 li
196.424 398.459 200.749 396.218 205.396 394.46 cv
219.49 394.46 li
219.49 393.46 li
208.215 393.46 li
220.778 389.262 235.034 387.511 243.694 375.998 cv
243.626 376.155 243.558 376.31 243.487 376.468 cv
235.222 394.925 217.328 396.702 201.778 401.85 cv
119.176 401.85 mo
101.996 401.85 li
100.914 399.406 99.8002 396.938 98.5769 394.46 cv
115.843 394.46 li
116.947 396.966 118.027 399.437 119.176 401.85 cv
115.401 393.46 mo
98.0774 393.46 li
96.8314 390.995 95.4689 388.526 93.9161 386.069 cv
111.969 386.069 li
113.206 388.548 114.321 391.018 115.401 393.46 cv
93.6362 385.63 mo
88.4655 377.575 81.2018 369.684 69.2539 362.629 cv
25.2723 336.66 50.2885 294.719 79.7905 294.719 cv
80.5117 294.719 81.2395 294.745 81.9652 294.796 cv
82.892 294.861 83.8277 294.964 84.7713 295.103 cv
62.3427 302.839 48.8363 335.539 84.8152 356.783 cv
90.9672 360.416 95.7894 364.287 99.6859 368.29 cv
93.6362 368.29 li
93.6362 369.29 li
100.638 369.29 li
102.896 371.716 104.831 374.187 106.53 376.68 cv
93.6362 376.68 li
93.6362 377.68 li
107.199 377.68 li
108.807 380.132 110.201 382.603 111.464 385.069 cv
93.6362 385.069 li
93.6362 385.63 li
f
160.007 436.41 mo
129.166 436.41 li
128.54 436.082 127.935 435.75 127.341 435.41 cv
161.383 435.41 li
160.927 435.757 160.469 436.09 160.007 436.41 cv
.093019 .0573739 .0683299 0 cmyk
f
169.375 428.019 mo
165.367 428.019 li
166.017 427.716 166.657 427.382 167.288 427.019 cv
170.312 427.019 li
169.999 427.357 169.687 427.69 169.375 428.019 cv
145.988 428.019 mo
117.537 428.019 li
117.203 427.689 116.877 427.356 116.558 427.019 cv
143.582 427.019 li
144.401 427.388 145.203 427.721 145.988 428.019 cv
f
176.936 419.63 mo
176.453 419.63 li
176.78 419.302 177.107 418.968 177.433 418.63 cv
177.825 418.63 li
177.527 418.965 177.231 419.298 176.936 419.63 cv
131.845 419.63 mo
110.82 419.63 li
110.607 419.298 110.399 418.966 110.194 418.63 cv
130.734 418.63 li
131.095 418.967 131.465 419.3 131.845 419.63 cv
f
184.683 411.24 mo
184.158 411.24 li
184.451 410.908 184.746 410.575 185.043 410.24 cv
185.768 410.24 li
185.399 410.563 185.038 410.896 184.683 411.24 cv
124.438 411.24 mo
106.229 411.24 li
106.069 410.907 105.912 410.575 105.755 410.24 cv
123.773 410.24 li
123.991 410.575 124.212 410.909 124.438 411.24 cv
f
198.919 402.85 mo
191.807 402.85 li
191.822 402.834 191.837 402.818 191.852 402.802 cv
192.168 402.475 192.49 402.158 192.817 401.85 cv
201.778 401.85 li
200.814 402.169 199.861 402.5 198.919 402.85 cv
119.658 402.85 mo
102.438 402.85 li
102.291 402.518 102.143 402.182 101.996 401.85 cv
119.176 401.85 li
119.335 402.184 119.496 402.517 119.658 402.85 cv
f
219.49 394.46 mo
205.396 394.46 li
206.324 394.109 207.264 393.778 208.215 393.46 cv
219.49 393.46 li
219.49 394.46 li
115.843 394.46 mo
98.5769 394.46 li
98.4128 394.128 98.2456 393.793 98.0774 393.46 cv
115.401 393.46 li
115.549 393.794 115.696 394.128 115.843 394.46 cv
f
111.969 386.069 mo
93.9161 386.069 li
93.8235 385.923 93.7301 385.776 93.6362 385.63 cv
93.6362 385.069 li
111.464 385.069 li
111.635 385.403 111.803 385.735 111.969 386.069 cv
f
107.199 377.68 mo
93.6362 377.68 li
93.6362 376.68 li
106.53 376.68 li
106.757 377.013 106.98 377.346 107.199 377.68 cv
f
100.638 369.29 mo
93.6362 369.29 li
93.6362 368.29 li
99.6859 368.29 li
100.01 368.623 100.326 368.955 100.638 369.29 cv
f
156.195 430.089 mo
153.106 430.089 149.739 429.447 145.988 428.019 cv
165.367 428.019 li
162.544 429.34 159.532 430.089 156.195 430.089 cv
167.288 427.019 mo
143.582 427.019 li
143.228 426.86 142.872 426.695 142.512 426.523 cv
138.248 424.482 134.764 422.165 131.845 419.63 cv
176.453 419.63 li
173.473 422.625 170.489 425.183 167.288 427.019 cv
177.433 418.63 mo
130.734 418.63 li
128.261 416.321 126.214 413.845 124.438 411.24 cv
184.158 411.24 li
181.849 413.848 179.635 416.35 177.433 418.63 cv
185.043 410.24 mo
123.773 410.24 li
122.235 407.867 120.9 405.393 119.658 402.85 cv
191.807 402.85 li
189.418 405.332 187.186 407.824 185.043 410.24 cv
192.817 401.85 mo
119.176 401.85 li
118.027 399.437 116.947 396.966 115.843 394.46 cv
205.396 394.46 li
200.749 396.218 196.424 398.459 192.817 401.85 cv
208.215 393.46 mo
115.401 393.46 li
114.321 391.018 113.206 388.548 111.969 386.069 cv
219.49 386.069 li
219.49 385.069 li
111.464 385.069 li
110.201 382.603 108.807 380.132 107.199 377.68 cv
219.49 377.68 li
219.49 376.68 li
106.53 376.68 li
104.831 374.187 102.896 371.716 100.638 369.29 cv
219.49 369.29 li
219.49 368.29 li
99.6859 368.29 li
95.7894 364.287 90.9672 360.416 84.8152 356.783 cv
48.8363 335.539 62.3427 302.839 84.7713 295.103 cv
109.075 298.676 138.934 325.642 174.109 325.641 cv
178.851 325.641 183.69 325.151 188.625 324.047 cv
195.398 322.532 201.504 321.895 206.987 321.895 cv
207.021 321.895 207.056 321.895 207.091 321.895 cv
235.175 321.936 254.794 350.332 243.694 375.998 cv
235.034 387.511 220.778 389.262 208.215 393.46 cv
93.6362 359.899 mo
93.6362 360.899 li
219.49 360.899 li
219.49 359.899 li
93.6362 359.899 li
93.6362 351.51 mo
93.6362 352.51 li
219.49 352.51 li
219.49 351.51 li
93.6362 351.51 li
93.6362 343.119 mo
93.6362 344.119 li
219.49 344.119 li
219.49 343.119 li
93.6362 343.119 li
93.6362 334.729 mo
93.6362 335.729 li
219.49 335.729 li
219.49 334.729 li
93.6362 334.729 li
93.6362 326.34 mo
93.6362 327.34 li
219.49 327.34 li
219.49 326.34 li
93.6362 326.34 li
f
165.367 428.019 mo
145.988 428.019 li
145.203 427.721 144.401 427.388 143.582 427.019 cv
167.288 427.019 li
166.657 427.382 166.017 427.716 165.367 428.019 cv
.144869 .0940871 .106996 0 cmyk
f
176.453 419.63 mo
131.845 419.63 li
131.465 419.3 131.095 418.967 130.734 418.63 cv
177.433 418.63 li
177.107 418.968 176.78 419.302 176.453 419.63 cv
f
184.158 411.24 mo
124.438 411.24 li
124.212 410.909 123.991 410.575 123.773 410.24 cv
185.043 410.24 li
184.746 410.575 184.451 410.908 184.158 411.24 cv
f
191.807 402.85 mo
119.658 402.85 li
119.496 402.517 119.335 402.184 119.176 401.85 cv
192.817 401.85 li
192.49 402.158 192.168 402.475 191.852 402.802 cv
191.837 402.818 191.822 402.834 191.807 402.85 cv
f
205.396 394.46 mo
115.843 394.46 li
115.696 394.128 115.549 393.794 115.401 393.46 cv
208.215 393.46 li
207.264 393.778 206.324 394.109 205.396 394.46 cv
f
219.49 386.069 mo
111.969 386.069 li
111.803 385.735 111.635 385.403 111.464 385.069 cv
219.49 385.069 li
219.49 386.069 li
f
219.49 377.68 mo
107.199 377.68 li
106.98 377.346 106.757 377.013 106.53 376.68 cv
219.49 376.68 li
219.49 377.68 li
f
219.49 369.29 mo
100.638 369.29 li
100.326 368.955 100.01 368.623 99.6859 368.29 cv
219.49 368.29 li
219.49 369.29 li
f
219.49 360.899 mo
93.6362 360.899 li
93.6362 359.899 li
219.49 359.899 li
219.49 360.899 li
f
219.49 352.51 mo
93.6362 352.51 li
93.6362 351.51 li
219.49 351.51 li
219.49 352.51 li
f
219.49 344.119 mo
93.6362 344.119 li
93.6362 343.119 li
219.49 343.119 li
219.49 344.119 li
f
219.49 335.729 mo
93.6362 335.729 li
93.6362 334.729 li
219.49 334.729 li
219.49 335.729 li
f
219.49 327.34 mo
93.6362 327.34 li
93.6362 326.34 li
219.49 326.34 li
219.49 327.34 li
f
234.245 396.349 mo
250.492 378.425 242.098 349.802 219.11 342.266 cv
214.628 340.796 209.46 339.684 203.508 339.115 cv
165.99 335.529 146.74 296.03 124.459 286.986 cv
100.277 277.17 66.4921 305.206 96.1022 338.824 cv
122.953 369.309 102.622 393.227 126.589 416.081 cv
144.031 432.713 156.982 419.745 176.382 409.429 cv
194.024 400.049 217.617 414.693 234.245 396.349 cv
cp
level3{
gsave
clp
[-166.851 -96.4063 96.4063 -166.851 236.19 415.918 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!-=M-!-FM,!-OP,!-a\.!-j_.!.'h/!.0h.!.Bq/!.U"/!.g(/!/$./!/670!/?7/!/Q@0!/cL2!/uR2
!02X2!0;[2!0M^1!0_g2!0qp3!1/'5!1A-5!1S66!1e<6!2"B6!24H6!2FN6!2ON5!2jZ6!2sZ5!30`5
!3Bf5!3To6!3]o5!3fo4!3oo3!4,u3!4?)4!4H,4!4Z/3!4l53!5);3!5;A3!5D>1!5VD1!5_G1!5hG0
!5qG/!6.M/!6@S/!6IP-!6[V-!6m\-!7!\,!7*\+!73\*!7<\)!7E\(!7Wb(!7`_&!7ib&!8&e%!8/e$
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-166.851 -96.4063 96.4063 -166.851 236.19 415.918 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~f\"j/f[na+f%&=$e^W*ueC2mpda?IidEp7ed*L%acd'h]cHXVYc-4DTbK@uLaiMQEaN)?@`l5p8`5BL1
_o'@._SX.*_83q&^V@Ls^:q:o]Y(kg]"5G_\@B#W[^NTO[C*BKZa6sCZ*CO;Yct=7YHP+3Y-+n/XK8J'
WiE(uWMlbnVl-GiV50o^USFTYU7n9RTV%jJSt2FBS=?":R[KS2R$X/*QBd`"P`q;oP*(lgOH5H_NfK-Z
NK&mUMi3IMM2@%ELPLV=KnY57KS4u1JqAQ)J:N-!IXZ]nI!g9fH?sm`H$OXZGB\7TG'8"NFEDVHF)uDD
~>
<~-n-Sp.P!&%/M8Y./h\n50etL?1GgpG2)[?O2`NcW3BB2_4$5Vg4[)%o5<qJ"5sdn*6q'O67Ros>84cBF
8kM`L9MA/T9heAX:JXea;GpFl<)cjt<`W:'=BJ^0>$G6:>[1Q??!UcC?XI2K@:<VS@q0%[AS#IcAnG[g
B4tsmBkhBuCM[g(D/O60DfBZ8EH6)@F*)MHF`qqPGBe@XH$O[]H@(!cH[C*eI!g<iI=6NmIXcm!JUrB(
JqAW-KS5&5KnY57L5(G;LPL\AM2@(GMMd=MN/WaUNfK0]OH>QcOcbfiPEV2oPa%DsPa%DsQ'IW"QBml(
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
147.686 319.661 mo
132.705 310.113 115.2 304.984 97.5152 306.676 cv
75.9573 308.739 52.7188 318.722 51.5235 351.892 cv
49.2703 414.417 113.168 399.223 113.168 399.223 cv
113.168 399.223 135.395 392.003 148.184 395.401 cv
160.973 398.799 176.64 412.91 190.845 408.521 cv
205.05 404.133 200.614 393.137 206.277 385.587 cv
211.94 378.036 247.57 367.891 235.49 339.953 cv
223.409 312.015 183.391 325.653 183.391 325.653 cv
183.391 325.653 170.053 333.917 147.686 319.661 cv
cp
level3{
gsave
clp
[186.507 0 0 186.507 51.4653 357.858 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!.&eg!.8nh!.Aqh!.T(j!.f1k!.o4k!/,=l!/5@l!/GIm!/PLm!/bUn!/kXn!0(ao!0:jp!0Cjo!0Usp
!0_!p!0q*q!1.3r!1@?t!1RHu!1dR!!2!["!23d#!2<d"!2Nj"!2`s#!2j!#!3'*$!393%!3B3$!3K6$
!3]?%!3fB%!3oE%!4,K%!4>T&!4GT%!4Y]&!4kc&!4tf&!51l&!5:o&!5M#'!5V&'!5_)'!5h)&!6%2'
!6.2&!6@;'!6I>'!6[D'!6dD&!6mG&!7*P'!73P&!73M%!7<P%!7EP$!7WY%!7`\%!7i\$!8&b$!8/e$
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[186.507 0 0 186.507 51.4653 357.858 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~f\"j/f[na+f%&=$e^W*ueC2mpda?IidEp7ed*L%acd0q`cd'h\c-4DUbfe2QbK@uLaiMQEaN)?@`l5p9
`Pod6_o'@._SX.*_83q&^qd_"^:q:o]tM(k]=YYc]"5G_\@B#W[^NTO[C*BKZa6sCZ*CO;Yct=7YHP+3
Xf\_,XK8M(X/i;$Wi;trW2HPjVP^5eV50o^US=KVTqS0QTV%jJSt2FBS=?":R[KS2R$X/*QBd`"P`q;o
P*1ukOcb`eO,o?_NfK*YN/W[QMMd:KM2@%ELPLY?L5(D9KS5#3K7ec-JUrB'J:N-!IXZ]nI!g<hH[C'b
~>
<~-n-So.4Qet.kE5'/M8Y./h\k20/,(70etL>1,C^B1GgpG2)[?N2E*QR2`NcW3BB2_4$5Vf4?Yhj4[)%o
5<hCu5X7V$6:+%,6UO706psI477B[87Rfm<84Z<D8P)NH91qrP9MA/T:/4S\:JXe`;,L4h;GpFl;c?Xp
<)cgs<E3%"<``@)=BJ[.=]nm2>$>*6>?b<:>[:WA?=.&I?smAN@:<SR@U`eV@q0"Y@q0"ZA7T4^AS#Fb
AnGXeB4kjiBP;*oC2.KuCMR^$Ci!p(D/F-,DJj?0Df9Q4E,]c8EH,u<EcQ2@F)uDDF)uDDFEDVHF`hhL
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
163.319 387.841 mo
181.042 386.614 198.167 380.331 211.381 368.458 cv
227.49 353.983 240.242 332.141 221.485 304.758 cv
186.127 253.141 143.778 303.344 143.778 303.344 cv
143.778 303.344 130.197 322.364 117.893 327.234 cv
105.589 332.104 84.6027 330.071 75.7893 342.044 cv
66.9758 354.017 77.0794 360.222 77.0141 369.66 cv
76.9488 379.098 54.3294 408.438 80.6517 423.721 cv
106.974 439.005 131.046 404.249 131.046 404.249 cv
131.046 404.249 136.859 389.674 163.319 387.841 cv
cp
level3{
gsave
clp
[-149.97 110.878 -110.878 -149.97 217.983 299.924 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!0.Hf!0%Be!/q?e!/h9d!/h<e!/V0c!/M*b!/D'b!/D'b!/;$b!/1sa!/(pa!.tj`!.kg`!.ba_!.Y^_
!.PX^!.GR]!.>L\!.>O]!.5I\!.#@[!-o:Z!-f7Z!-]4Z!-T.Y!-B%X!-B(Y!-/tX!-&nW!,rkW!,rkW
!,ieV!,`bV!,W\U!,NVT!,EST!,<MS!,3JS!,*GS!+m;Q!+d8Q!+[2P!+R,O!+I)O!+I)O!+@&O!+6uN
!+-rN!*pfL!*gcL!*gcL!*^`L!*LTJ!*CNI!*:KI!*1HI!*(BH!)t?H!)k9G!)b6G!)Y0F!)P*E!)G'E
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-149.97 110.878 -110.878 -149.97 217.983 299.924 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~:/=Y]:Jaka:f1(e;,U:i;H$Lm;cH^q<)lpu<E<.$<``@(='/R,=BSd1>$G38>?b<9>?kE<>[:WA?=.&H
?XI2K?smDO@:<SQ@:<VS@U`hW@q0%[A7T7_AS#IcB4kmkBP;*oBk_<sC2.O"CMRa&Ci!s*D/F0.DJjB2
Df9Q4Df9Q5E,]c9EH,u=EcZ;CF)uDEFEM_LG'8%QGB\7UG^+IYH$O[]H@(!dI!g<hI!g<iI=6NmIXZ`q
It)rtJ:N0#JUrB'JqAT+K7ef/KS5#3KnY57L5(G;L5(G;LPLY?LkpkCM2@+IMMd:KMi3LON/W^SNK&pW
~>
<~.4H\p.4?Sm-n$Jl-n$Jl-mpAi-RU8h-RL/e-71&d-7'ra,pX`],U=W\,U=W\,U4NY,9nEX,9e<U+sJ3T
+sJ0R+X&!P+X%sN+<VdL+<VaJ+!2RH+!2RH+!2OF*Zc@D*Zc=B*??+>*#oq<*#on:)]K_8)]K_8)]K\6
)B'M4)B'M4)B'M3)&X;0)&X;/(`4)+(Ddl'()@Z$()@Z#'bqGt'GM5q'GM5p',)#m',)#l&eYfi&eYfi
&eYfi&eYfi&J5Te&J5Te&.fBa&.fBa%hB0]%hB0]%LrsY%LrsY%1NaU%1NaU%1NaU$k*OQ$k*OQ$O[=M
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
206.278 385.583 mo
200.61 393.138 205.054 404.128 190.845 408.517 cv
176.636 412.907 160.974 398.795 148.185 395.403 cv
135.396 392 113.166 399.218 113.166 399.218 cv
113.166 399.218 92.5412 404.128 75.1349 396.888 cv
61.9121 391.393 50.5536 378.885 51.5182 351.887 cv
51.529 351.681 51.529 351.486 51.5507 351.291 cv
53.0031 318.603 76.0886 308.729 97.5159 306.68 cv
115.204 304.979 132.708 310.116 147.686 319.665 cv
170.057 333.917 183.388 325.648 183.388 325.648 cv
183.388 325.648 223.414 312.013 235.488 339.954 cv
247.572 367.895 211.936 378.04 206.278 385.583 cv
cp
level3{
gsave
clp
[6.30677e-15 102.997 -102.997 6.30677e-15 144.716 306.358 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!-=M-!-FM,!-OP,!-a\.!-j_.!.'h/!.0h.!.Bq/!.U"/!.g(/!/$./!/670!/?7/!/Q@0!/cL2!/uR2
!02X2!0;[2!0M^1!0_g2!0qp3!1/'5!1A-5!1S66!1e<6!2"B6!24H6!2FN6!2ON5!2jZ6!2sZ5!30`5
!3Bf5!3To6!3]o5!3fo4!3oo3!4,u3!4?)4!4H,4!4Z/3!4l53!5);3!5;A3!5D>1!5VD1!5_G1!5hG0
!5qG/!6.M/!6@S/!6IP-!6[V-!6m\-!7!\,!7*\+!73\*!7<\)!7E\(!7Wb(!7`_&!7ib&!8&e%!8/e$
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.30677e-15 102.997 -102.997 6.30677e-15 144.716 306.358 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 <~EcZ;CF*)MGFEM_LG'A.SGBe@XH$Xd_H@(!dI!pElIXcitJ:W9'JqJ]/KS>,6Knb>;LPUbCM2I1KMi<US
NK&sYNfK0]OH>TeP*2#mPa%GuQBml(R$a;0R[T_8S=H.@St;RHTV/!PU8"EXUSFW\V5C/gVl-JlWMunt
WiN2%XKAV-Y-+q2YHP.6Yct@:Z*L[AZa@*I[C*EN[^W`U\@K/]]">Se]Y2"m^:q=r^VIY$_83t)_SX1-
_o'C0`5KX6`l?'>aN2HDaiV]JbKJ,Rc-=MXcHa_\cd0q`d*U.ddF$@hdaHUneC<!te^`4#f%/I)f\"j/
~>
<~Q^=&)QBd`#Q'@MtPa%DsP`q;pPEM)kOcYZdOH5H_NfB$WN/NUOMM[1HM26tCLPCP<L4t>8KnY56KS+o/
JqAQ)JUr?$IXZ]nI=6KjI!g9fH[C*dH?sj^H$OXZGB\4RF`heJF)uABEH,r:Df9N2D/F**CMR["Bk_6o
B4kjhAnGXdARo=]@q&nU@:3JM?X@&E?!U`@>[1N<>$>'2=BAR)<`N.!<)Z^n;Gg7d:JOYZ9he>U9M8#N
8kMZH84Z6@7Rfg86pj:-5s[b$5<h=q4Ztni4$,Ja3B9&Y2`EWQ2)R3I1G^dA0ek@8/hSb//M/M(.Olkr
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
64.1226 314.291 mo
63.7025 314.259 li
61.9507 314.127 60.2878 313.435 59.2909 312.087 cv
58.4193 310.908 56.9267 310.202 55.251 310.481 cv
53.8237 310.72 52.5836 311.768 52.1169 313.137 cv
51.2038 315.817 53.0622 318.427 55.6799 318.624 cv
56.8902 318.716 58.0169 318.273 58.8291 317.494 cv
59.9984 316.374 61.5859 315.803 63.2008 315.925 cv
64.082 315.991 li
65.9311 316.131 67.4156 317.399 68.1159 319.116 cv
69.389 322.239 72.5387 324.444 76.2657 324.22 cv
79.9369 323.999 83.0981 321.213 83.7903 317.601 cv
84.7322 312.687 81.1883 308.193 76.3455 307.827 cv
73.0479 307.578 70.0585 309.312 68.5476 312.022 cv
67.6761 313.585 65.9072 314.426 64.1226 314.291 cv
cp
level3{
gsave
clp
[37.392 3.79339 -3.79339 37.392 49.1083 313.319 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[37.392 3.79339 -3.79339 37.392 49.1083 313.319 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
201.857 343.192 mo
201.537 343.467 li
200.205 344.612 198.54 345.299 196.882 345.05 cv
195.432 344.833 193.877 345.389 192.89 346.772 cv
192.049 347.949 191.913 349.567 192.552 350.866 cv
193.801 353.406 196.96 353.937 198.951 352.226 cv
199.872 351.435 200.355 350.325 200.379 349.2 cv
200.414 347.581 201.132 346.055 202.36 344.999 cv
203.031 344.423 li
204.437 343.214 206.383 343.062 208.093 343.781 cv
211.201 345.088 214.987 344.42 217.464 341.626 cv
219.904 338.874 220.169 334.669 218.104 331.625 cv
215.295 327.484 209.612 326.813 205.929 329.979 cv
203.421 332.134 202.533 335.474 203.381 338.459 cv
203.87 340.18 203.214 342.026 201.857 343.192 cv
cp
level3{
gsave
clp
[29.1224 -23.7578 23.7578 29.1224 190.553 353.121 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.1224 -23.7578 23.7578 29.1224 190.553 353.121 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
196.414 417.661 mo
195.994 417.629 li
194.242 417.497 192.579 416.805 191.582 415.456 cv
190.71 414.277 189.218 413.571 187.542 413.851 cv
186.115 414.089 184.875 415.137 184.408 416.507 cv
183.495 419.187 185.353 421.796 187.971 421.994 cv
189.181 422.086 190.308 421.642 191.12 420.864 cv
192.289 419.744 193.877 419.172 195.492 419.294 cv
196.373 419.361 li
198.222 419.501 199.707 420.769 200.407 422.486 cv
201.68 425.609 204.83 427.813 208.557 427.589 cv
212.228 427.369 215.389 424.582 216.081 420.97 cv
217.023 416.056 213.479 411.562 208.636 411.197 cv
205.339 410.948 202.349 412.681 200.838 415.392 cv
199.967 416.955 198.198 417.795 196.414 417.661 cv
cp
level3{
gsave
clp
[37.392 3.79339 -3.79339 37.392 181.399 416.688 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[37.392 3.79339 -3.79339 37.392 181.399 416.688 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
183.169 421.674 mo
183.169 422.935 182.147 423.958 180.885 423.958 cv
179.623 423.958 178.6 422.935 178.6 421.674 cv
178.6 420.412 179.623 419.389 180.885 419.389 cv
182.147 419.389 183.169 420.412 183.169 421.674 cv
cp
level3{
gsave
clp
[5.32128 .53984 -.53984 5.32128 178.207 421.402 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.32128 .53984 -.53984 5.32128 178.207 421.402 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
59.6231 398.684 mo
59.6231 400.938 57.7959 402.765 55.542 402.765 cv
53.2881 402.765 51.461 400.938 51.461 398.684 cv
51.461 396.43 53.2881 394.603 55.542 394.603 cv
57.7959 394.603 59.6231 396.43 59.6231 398.684 cv
cp
level3{
gsave
clp
[9.50535 .964312 -.964312 9.50535 50.7582 398.199 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.50535 .964312 -.964312 9.50535 50.7582 398.199 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
0 0 0 0 cmyk
MNBOCF+BPreplay-Bold*1 [17.3034 0 0 -17.3034 0 0 ]msf78.9351 346.796 mo(ABSTRACT)[12.6313 11.0566 9.36133 9.96582 11.5933 11.749 13.1851 0 ]xsh78.9351 367.56 mo(LIQUID)[9.65527 4.39502 14.085 12.7173 4.39502 0 ]xshMNBOCG+FiraSans-Light*1 [13.8531 0 0 -13.8531 0 0 ]msf78.9341 384.063 mo(LOREM IPSUM)[5.94287 9.57227 8.17383 7.09277 10.666 3.86523 3.90625 7.57764 7.4668 9.03223 0 ]xsh109.663 400.468 mo
110.381 400.468 110.963 399.886 110.963 399.168 cv
110.963 398.449 110.381 397.867 109.663 397.867 cv
108.945 397.867 108.363 398.449 108.363 399.168 cv
108.363 399.886 108.945 400.468 109.663 400.468 cv
cp
f
94.7537 421.012 mo
94.0355 421.012 93.4535 421.594 93.4535 422.312 cv
93.4535 423.03 94.0355 423.612 94.7537 423.612 cv
95.4717 423.612 96.054 423.03 96.054 422.312 cv
96.054 421.594 95.4717 421.012 94.7537 421.012 cv
cp
f
94.7537 415.226 mo
94.0355 415.226 93.4535 415.808 93.4535 416.526 cv
93.4535 417.244 94.0355 417.826 94.7537 417.826 cv
95.4717 417.826 96.054 417.244 96.054 416.526 cv
96.054 415.808 95.4717 415.226 94.7537 415.226 cv
cp
f
94.7537 409.44 mo
94.0355 409.44 93.4535 410.022 93.4535 410.74 cv
93.4535 411.458 94.0355 412.04 94.7537 412.04 cv
95.4717 412.04 96.054 411.458 96.054 410.74 cv
96.054 410.022 95.4717 409.44 94.7537 409.44 cv
cp
f
94.7537 403.653 mo
94.0355 403.653 93.4535 404.235 93.4535 404.954 cv
93.4535 405.672 94.0355 406.254 94.7537 406.254 cv
95.4717 406.254 96.054 405.672 96.054 404.954 cv
96.054 404.235 95.4717 403.653 94.7537 403.653 cv
cp
f
87.2989 403.653 mo
86.5807 403.653 85.9987 404.235 85.9987 404.954 cv
85.9987 405.672 86.5807 406.254 87.2989 406.254 cv
88.0171 406.254 88.5992 405.672 88.5992 404.954 cv
88.5992 404.235 88.0171 403.653 87.2989 403.653 cv
cp
f
87.2989 409.44 mo
86.5807 409.44 85.9987 410.022 85.9987 410.74 cv
85.9987 411.458 86.5807 412.04 87.2989 412.04 cv
88.0171 412.04 88.5992 411.458 88.5992 410.74 cv
88.5992 410.022 88.0171 409.44 87.2989 409.44 cv
cp
f
87.2989 421.012 mo
86.5807 421.012 85.9987 421.594 85.9987 422.312 cv
85.9987 423.03 86.5807 423.612 87.2989 423.612 cv
88.0171 423.612 88.5992 423.03 88.5992 422.312 cv
88.5992 421.594 88.0171 421.012 87.2989 421.012 cv
cp
f
87.2989 415.226 mo
86.5807 415.226 85.9987 415.808 85.9987 416.526 cv
85.9987 417.244 86.5807 417.826 87.2989 417.826 cv
88.0171 417.826 88.5992 417.244 88.5992 416.526 cv
88.5992 415.808 88.0171 415.226 87.2989 415.226 cv
cp
f
87.2989 397.867 mo
86.5807 397.867 85.9987 398.449 85.9987 399.168 cv
85.9987 399.886 86.5807 400.468 87.2989 400.468 cv
88.0171 400.468 88.5992 399.886 88.5992 399.168 cv
88.5992 398.449 88.0171 397.867 87.2989 397.867 cv
cp
f
94.7537 397.867 mo
94.0355 397.867 93.4535 398.449 93.4535 399.168 cv
93.4535 399.886 94.0355 400.468 94.7537 400.468 cv
95.4717 400.468 96.054 399.886 96.054 399.168 cv
96.054 398.449 95.4717 397.867 94.7537 397.867 cv
cp
f
109.663 415.226 mo
108.945 415.226 108.363 415.808 108.363 416.526 cv
108.363 417.244 108.945 417.826 109.663 417.826 cv
110.381 417.826 110.963 417.244 110.963 416.526 cv
110.963 415.808 110.381 415.226 109.663 415.226 cv
cp
f
109.663 409.44 mo
108.945 409.44 108.363 410.022 108.363 410.74 cv
108.363 411.458 108.945 412.04 109.663 412.04 cv
110.381 412.04 110.963 411.458 110.963 410.74 cv
110.963 410.022 110.381 409.44 109.663 409.44 cv
cp
f
109.663 403.653 mo
108.945 403.653 108.363 404.235 108.363 404.954 cv
108.363 405.672 108.945 406.254 109.663 406.254 cv
110.381 406.254 110.963 405.672 110.963 404.954 cv
110.963 404.235 110.381 403.653 109.663 403.653 cv
cp
f
109.663 421.012 mo
108.945 421.012 108.363 421.594 108.363 422.312 cv
108.363 423.03 108.945 423.612 109.663 423.612 cv
110.381 423.612 110.963 423.03 110.963 422.312 cv
110.963 421.594 110.381 421.012 109.663 421.012 cv
cp
f
102.208 403.653 mo
101.49 403.653 100.908 404.235 100.908 404.954 cv
100.908 405.672 101.49 406.254 102.208 406.254 cv
102.927 406.254 103.509 405.672 103.509 404.954 cv
103.509 404.235 102.927 403.653 102.208 403.653 cv
cp
f
102.208 415.226 mo
101.49 415.226 100.908 415.808 100.908 416.526 cv
100.908 417.244 101.49 417.826 102.208 417.826 cv
102.927 417.826 103.509 417.244 103.509 416.526 cv
103.509 415.808 102.927 415.226 102.208 415.226 cv
cp
f
102.208 397.867 mo
101.49 397.867 100.908 398.449 100.908 399.168 cv
100.908 399.886 101.49 400.468 102.208 400.468 cv
102.927 400.468 103.509 399.886 103.509 399.168 cv
103.509 398.449 102.927 397.867 102.208 397.867 cv
cp
f
102.208 421.012 mo
101.49 421.012 100.908 421.594 100.908 422.312 cv
100.908 423.03 101.49 423.612 102.208 423.612 cv
102.927 423.612 103.509 423.03 103.509 422.312 cv
103.509 421.594 102.927 421.012 102.208 421.012 cv
cp
f
102.208 409.44 mo
101.49 409.44 100.908 410.022 100.908 410.74 cv
100.908 411.458 101.49 412.04 102.208 412.04 cv
102.927 412.04 103.509 411.458 103.509 410.74 cv
103.509 410.022 102.927 409.44 102.208 409.44 cv
cp
f
260.104 467.949 mo
259.672 468.392 259.301 468.88 258.996 469.402 cv
258.531 469.161 li
258.464 468.863 258.181 468.658 257.872 468.695 cv
257.541 468.734 257.304 469.033 257.343 469.364 cv
257.382 469.695 257.682 469.932 258.013 469.893 cv
258.196 469.841 li
258.648 470.075 li
258.397 470.629 258.215 471.214 258.108 471.819 cv
258.855 471.951 li
259.085 470.645 259.704 469.444 260.647 468.478 cv
260.104 467.949 li
cp
.35877 .201297 .147463 0 cmyk
f
265.592 465.647 mo
265.421 465.647 265.251 465.653 265.082 465.664 cv
265.009 465.038 li
265.196 464.888 265.304 464.648 265.274 464.393 cv
265.228 464 264.872 463.719 264.479 463.765 cv
264.086 463.811 263.805 464.167 263.851 464.56 cv
263.881 464.814 264.04 465.022 264.255 465.124 cv
264.329 465.748 li
263.615 465.864 262.926 466.08 262.269 466.394 cv
262.596 467.078 li
263.53 466.631 264.538 466.405 265.592 466.405 cv
266.088 466.405 266.585 466.458 267.067 466.562 cv
267.227 465.822 li
266.692 465.706 266.142 465.647 265.592 465.647 cv
cp
f
272.194 468.194 mo
272.525 468.153 272.76 467.852 272.72 467.522 cv
272.679 467.191 272.378 466.956 272.047 466.996 cv
271.738 467.034 271.512 467.3 271.518 467.605 cv
271.102 467.968 li
270.684 467.538 270.212 467.155 269.694 466.829 cv
269.29 467.47 li
270.424 468.185 271.31 469.196 271.853 470.395 cv
272.544 470.083 li
272.293 469.529 271.976 469.011 271.602 468.538 cv
272.004 468.187 li
272.194 468.194 li
cp
f
265.044 475.855 mo
264.658 475.878 264.269 475.89 263.887 475.89 cv
263.007 475.89 262.154 475.829 261.409 475.711 cv
261.018 475.649 260.563 475.556 260.138 475.419 cv
261.185 477.28 263.208 478.544 265.527 478.544 cv
268.382 478.544 270.789 476.628 271.476 474.04 cv
270.795 474.489 269.971 474.865 269.018 475.163 cv
267.839 475.53 266.463 475.77 265.044 475.855 cv
cp
f
268.17 472.769 mo
267.42 472.769 266.81 472.159 266.81 471.409 cv
266.81 470.659 267.42 470.049 268.17 470.049 cv
268.92 470.049 269.53 470.659 269.53 471.409 cv
269.53 472.159 268.92 472.769 268.17 472.769 cv
cp
263.432 473.678 mo
262.413 473.678 261.583 472.848 261.583 471.828 cv
261.583 470.808 262.413 469.978 263.432 469.978 cv
264.452 469.978 265.282 470.808 265.282 471.828 cv
265.282 472.848 264.452 473.678 263.432 473.678 cv
cp
265.592 467.163 mo
262.24 467.163 259.512 469.829 259.512 473.106 cv
259.512 473.532 259.558 473.955 259.649 474.368 cv
260.323 474.85 262.355 475.258 264.997 475.099 cv
267.876 474.925 270.294 474.141 271.669 472.94 cv
271.664 472.745 271.648 472.55 271.624 472.358 cv
271.244 469.396 268.65 467.163 265.592 467.163 cv
cp
f
281.595 469.03 mo
281.301 468.914 280.79 468.721 280.213 468.793 cv
279.662 468.861 279.369 469.133 279.369 469.799 cv
279.369 470.665 li
281.597 470.665 li
281.597 472.382 li
279.369 472.382 li
279.369 477.837 li
277.437 477.837 li
277.437 472.382 li
276.098 472.382 li
276.098 470.665 li
277.437 470.665 li
277.437 469.777 li
277.437 468.097 278.333 466.994 280.006 466.994 cv
280.648 466.994 281.163 467.116 281.596 467.302 cv
281.595 469.03 li
cp
f
286.298 472.362 mo
286.121 472.332 285.94 472.316 285.772 472.316 cv
284.876 472.316 284.262 472.864 284.262 473.929 cv
284.262 477.837 li
282.33 477.837 li
282.33 470.665 li
284.203 470.665 li
284.203 471.45 li
284.654 470.776 285.342 470.473 286.223 470.473 cv
286.638 470.473 287.071 470.6 287.318 470.81 cv
286.298 472.362 li
cp
f
288.851 473.574 mo
292.026 473.574 li
291.848 472.656 291.293 472.138 290.464 472.138 cv
289.554 472.138 289.021 472.686 288.851 473.574 cv
cp
293.965 474.24 mo
293.965 474.462 293.95 474.729 293.928 474.892 cv
288.843 474.892 li
289.051 475.928 289.776 476.379 290.686 476.379 cv
291.308 476.379 291.982 476.128 292.5 475.691 cv
293.632 476.934 li
292.818 477.682 291.782 478.022 290.575 478.022 cv
288.377 478.022 286.852 476.527 286.852 474.27 cv
286.852 472.012 288.333 470.473 290.479 470.473 cv
292.544 470.473 293.958 472.005 293.965 474.24 cv
cp
f
296.504 473.574 mo
299.679 473.574 li
299.501 472.656 298.946 472.138 298.117 472.138 cv
297.207 472.138 296.674 472.686 296.504 473.574 cv
cp
301.618 474.24 mo
301.618 474.462 301.603 474.729 301.581 474.892 cv
296.497 474.892 li
296.704 475.928 297.429 476.379 298.34 476.379 cv
298.961 476.379 299.635 476.128 300.153 475.691 cv
301.285 476.934 li
300.471 477.682 299.435 478.022 298.229 478.022 cv
296.03 478.022 294.506 476.527 294.506 474.27 cv
294.506 472.012 295.986 470.473 298.132 470.473 cv
300.197 470.473 301.611 472.005 301.618 474.24 cv
cp
f
304.287 474.248 mo
304.287 475.38 305.035 476.224 306.13 476.224 cv
307.27 476.224 307.98 475.343 307.98 474.248 cv
307.98 473.152 307.27 472.271 306.13 472.271 cv
305.035 472.271 304.287 473.115 304.287 474.248 cv
cp
309.964 474.248 mo
309.964 476.401 308.469 478.022 306.493 478.022 cv
305.531 478.022 304.85 477.645 304.383 477.09 cv
304.383 480.798 li
302.459 480.798 li
302.459 470.665 li
304.346 470.665 li
304.346 471.457 li
304.813 470.872 305.501 470.473 306.485 470.473 cv
308.469 470.473 309.964 472.094 309.964 474.248 cv
cp
f
312.809 477.837 mo
310.877 477.837 li
310.877 470.665 li
312.809 470.665 li
312.809 477.837 li
cp
313.068 468.319 mo
313.068 469.015 312.527 469.548 311.831 469.548 cv
311.136 469.548 310.603 469.015 310.603 468.319 cv
310.603 467.623 311.136 467.076 311.831 467.076 cv
312.527 467.076 313.068 467.623 313.068 468.319 cv
cp
f
316.032 473.219 mo
318.734 470.665 li
321.102 470.665 li
317.623 474.04 li
321.124 477.837 li
318.748 477.837 li
316.032 474.936 li
316.032 477.837 li
314.1 477.837 li
314.1 467.179 li
316.032 467.179 li
316.032 473.219 li
cp
f
184.412 475.853 mo
184.412 472.646 li
184.017 472.03 183.168 471.503 182.288 471.503 cv
180.868 471.503 180.018 472.675 180.018 474.242 cv
180.018 475.81 180.868 476.967 182.288 476.967 cv
183.168 476.967 184.017 476.469 184.412 475.853 cv
cp
184.412 477.772 mo
184.412 476.717 li
183.885 477.435 183.021 477.948 182.025 477.948 cv
180.179 477.948 178.876 476.542 178.876 474.242 cv
178.876 471.986 180.165 470.522 182.025 470.522 cv
182.977 470.522 183.841 470.99 184.412 471.767 cv
184.412 468.002 li
185.511 468.002 li
185.511 477.772 li
184.412 477.772 li
cp
f
190.403 471.43 mo
188.894 471.43 188.148 472.704 188.089 473.788 cv
192.732 473.788 li
192.718 472.733 192.015 471.43 190.403 471.43 cv
cp
186.932 474.228 mo
186.932 472.177 188.396 470.522 190.418 470.522 cv
192.557 470.522 193.816 472.192 193.816 474.315 cv
193.816 474.594 li
188.089 474.594 li
188.177 475.927 189.114 477.04 190.638 477.04 cv
191.443 477.04 192.264 476.717 192.82 476.146 cv
193.347 476.864 li
192.644 477.567 191.693 477.948 190.535 477.948 cv
188.44 477.948 186.932 476.439 186.932 474.228 cv
cp
f
194.607 476.835 mo
195.178 476.044 li
195.647 476.586 196.54 477.055 197.507 477.055 cv
198.591 477.055 199.177 476.542 199.177 475.839 cv
199.177 474.125 194.798 475.18 194.798 472.557 cv
194.798 471.459 195.749 470.522 197.434 470.522 cv
198.635 470.522 199.485 470.976 200.056 471.547 cv
199.543 472.309 li
199.119 471.796 198.342 471.415 197.434 471.415 cv
196.467 471.415 195.867 471.899 195.867 472.528 cv
195.867 474.081 200.246 473.056 200.246 475.81 cv
200.246 476.996 199.294 477.948 197.463 477.948 cv
196.306 477.948 195.325 477.596 194.607 476.835 cv
cp
f
201.667 477.772 mo
201.667 470.697 li
202.766 470.697 li
202.766 477.772 li
201.667 477.772 li
cp
201.477 468.954 mo
201.477 468.544 201.814 468.207 202.209 468.207 cv
202.619 468.207 202.956 468.544 202.956 468.954 cv
202.956 469.365 202.619 469.687 202.209 469.687 cv
201.814 469.687 201.477 469.365 201.477 468.954 cv
cp
f
209.709 475.736 mo
209.709 472.646 li
209.328 472.03 208.478 471.503 207.599 471.503 cv
206.178 471.503 205.329 472.631 205.329 474.198 cv
205.329 475.751 206.178 476.893 207.599 476.893 cv
208.478 476.893 209.328 476.352 209.709 475.736 cv
cp
204.582 479.589 mo
205.138 478.768 li
205.724 479.471 206.428 479.735 207.438 479.735 cv
208.61 479.735 209.709 479.164 209.709 477.611 cv
209.709 476.6 li
209.196 477.318 208.332 477.86 207.335 477.86 cv
205.49 477.86 204.186 476.483 204.186 474.198 cv
204.186 471.928 205.475 470.522 207.335 470.522 cv
208.288 470.522 209.137 470.99 209.709 471.767 cv
209.709 470.697 li
210.807 470.697 li
210.807 477.567 li
210.807 479.911 209.167 480.643 207.438 480.643 cv
206.237 480.643 205.417 480.409 204.582 479.589 cv
cp
f
217.413 477.772 mo
217.413 473.143 li
217.413 471.899 216.783 471.503 215.831 471.503 cv
214.967 471.503 214.147 472.03 213.737 472.602 cv
213.737 477.772 li
212.638 477.772 li
212.638 470.697 li
213.737 470.697 li
213.737 471.723 li
214.235 471.137 215.201 470.522 216.256 470.522 cv
217.735 470.522 218.512 471.269 218.512 472.807 cv
218.512 477.772 li
217.413 477.772 li
cp
f
223.404 471.43 mo
221.895 471.43 221.148 472.704 221.09 473.788 cv
225.733 473.788 li
225.718 472.733 225.015 471.43 223.404 471.43 cv
cp
219.932 474.228 mo
219.932 472.177 221.397 470.522 223.419 470.522 cv
225.557 470.522 226.817 472.192 226.817 474.315 cv
226.817 474.594 li
221.09 474.594 li
221.178 475.927 222.115 477.04 223.638 477.04 cv
224.444 477.04 225.264 476.717 225.821 476.146 cv
226.348 476.864 li
225.645 477.567 224.693 477.948 223.536 477.948 cv
221.441 477.948 219.932 476.439 219.932 474.228 cv
cp
f
233.35 475.853 mo
233.35 472.646 li
232.954 472.03 232.105 471.503 231.226 471.503 cv
229.805 471.503 228.956 472.675 228.956 474.242 cv
228.956 475.81 229.805 476.967 231.226 476.967 cv
232.105 476.967 232.954 476.469 233.35 475.853 cv
cp
233.35 477.772 mo
233.35 476.717 li
232.823 477.435 231.958 477.948 230.962 477.948 cv
229.117 477.948 227.813 476.542 227.813 474.242 cv
227.813 471.986 229.102 470.522 230.962 470.522 cv
231.914 470.522 232.779 470.99 233.35 471.767 cv
233.35 468.002 li
234.448 468.002 li
234.448 477.772 li
233.35 477.772 li
cp
f
242.9 476.967 mo
244.335 476.967 245.185 475.81 245.185 474.242 cv
245.185 472.675 244.335 471.503 242.9 471.503 cv
242.036 471.503 241.171 472.03 240.79 472.646 cv
240.79 475.853 li
241.171 476.469 242.036 476.967 242.9 476.967 cv
cp
239.692 477.772 mo
239.692 468.002 li
240.79 468.002 li
240.79 471.767 li
241.362 470.99 242.211 470.522 243.178 470.522 cv
245.024 470.522 246.328 471.986 246.328 474.242 cv
246.328 476.542 245.024 477.948 243.178 477.948 cv
242.182 477.948 241.318 477.435 240.79 476.717 cv
240.79 477.772 li
239.692 477.772 li
cp
f
247.528 479.545 mo
247.69 479.618 247.953 479.662 248.129 479.662 cv
248.612 479.662 248.935 479.501 249.184 478.915 cv
249.652 477.846 li
246.694 470.697 li
247.88 470.697 li
250.238 476.498 li
252.582 470.697 li
253.783 470.697 li
250.238 479.208 li
249.814 480.233 249.096 480.629 248.158 480.643 cv
247.924 480.643 247.558 480.599 247.353 480.541 cv
247.528 479.545 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 ]]
] del_res
/MNBOCG+FiraSans-Light*1 uf/MNBOCG+FiraSans-Light uf/FiraSans-Light uf/MNBOCF+BPreplay-Bold*1 uf/MNBOCF+BPreplay-Bold uf/BPreplay-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 20.1.0%%For: (Ayib) ()%%Title: (Abstract liquid banners 2 up-01.eps)%%CreationDate: 2/6/19 3:20 PM%%Canvassize: 16383%AI9_DataStream%Gb",KH!fRBp[IbYqAqo@*U(5I[k-s!K)8`E5c%:.0QUn+pq?Ca,[DgS:hK,qn;I+@V+j^*P-^c;6m@NABpA6Z75=hq#Z79Dc]KB2%UdJ":,DetP5ekZL]ldd(.56oh'7XQKl:J>7WG@K:ehW.eX-G@JdqW`Q'#2pckZ"\"'/am4)2@t9=#k+Ug/(A_>$BBOImk+$.)FrO%:g1?XSD%XF:\78em;%jM1n06&PleFZ&%Ul1DJ3b5WiPLu7E7r@PG4\7Nc(*,3q\):!H%ssDDTU`i0Q#40ao+/UYEZW@3+ds[!!B8%"8YG'-VeT@rRf!CR(u;q9u-ud8<h'P$PMmDKg\fi-\RfS0=6VnC0PFW2]If.:9Tu:XK,C(jifJAE0=)C]N,8jgDXB1OWn:?.*@_:%TDsOB(\#H;U9kJq,ao64"VIC_</a4A)7s'rl*MPDp2_I#TW'6^ZKFukg,]*j9ErH;AG`S/jJ$-ten%3=lbK9"P!+)gAk=eO^=PPc%W-HU,Tt5a@$@11%BPjD"e**GR!Nb&t?u\rk?Q,X``pOtue/EW($BHr7M%';j=dUt,%oErK=!S/T,46Z_#`;rl<;3R**.^G,g`?S!%qM8ZjR5:.8d2O#E$1fc?]M/D'Q<rjZ^HdQBq[^[l-Mi0;pX^HA@,Gj;%;/"XmLlE]3[/(33TrBO-md(u>(dZ=;Lh(P5[&nFZ(H<n%p^&eG1l6R2OlC:"Z`UV8QD'!X5$kMD*u`M9(mdn,B#0[3>diR14AjU#\m_Q-PZmF\[J3lDLgQ'QghK7TdVGQ1<E'AYXql-fkbDs-%s2<H**P9"BJJVVM)K&-b27ojMCT;YSFW7u2f?o"hFK\FAK.#ZU?.ZILR_HA1=4ag7d]oirm&HUo<?g;ilB]pl7C1u"(ndbFM_O&Y%<a2m=KLJNa,5R363ej?9j%\&j1XN5CTg`7(PR7W=P(f;?TU"M*Zh_d267*2d>ga2\`pGL*h8L:E];1_PE[mYp)/?3EGdj,2VcD=f%SSfbJs"CJdYBTh]'CY4ss%TOnec:rkd*Qo@D&#,:qVYCNiP*e<>=WHP,YR:G7U5hgBW-'$$.Pdf<<F.aXieH%HK4rX.NgVYX_tQV%Xk`>nZ=a4A]\Z&D\!h&/Mp(g'a:>I8s&*hMd7C#86],Z%r!sGr9JHb:I^!8?:YkpAc'&&n7g.gGRQ'E=hGr6,m1i?<//+'YF,Dno%r!A!#iaj,AG/sc3N]3XRZ\/SeYB?2X$>N6*#)GK/eTTL0["(Q#\EkHfPj_ea.3mp`/nIi'Tmcsf:TfIZV*hjm`ibQr_/o.lfJP;K%)OGn,QhI0e>,bOqO8E,8$W0u`(8?!aqm`(u`!g(\[*?ud]\7(!<3&qVe4ptXctmC'GYs0<6p?;..<kESDh7o?#bAe!>GGR\Q"h"-%A34U\SpSt/T@1H'8)^e4h@%P#KYssG7sm_;JW6"^?>0tTI^!&mJZ'0_+q[oBE+otsQZ!-Tf!GWj!U%nAXWjI9[qZ$]9EYX1H6'-e%Y@^dM&.Ue;:i%lW>I.!7cEQ*op.r25=$`>X':BjKZ-j/mDWsE</YFY.XkA+F$&'K@5WnP7Xuhu+4JC2-7g5DJ0S=LXF[[%(%GJrm%>Tr)5,+^(>.3b?1iql.A!-j3R*te$Q,(;ks:Pnia&^M$Y/.k)oiYP!F8&Y#7#XnTJLgLhc)^9`(`:!sSH*pc'g@d?;i7c#j\aRd7%;0UM'k`?"97'31tBgc#H5ojVA35PLp#(ScX!4,/5FX$fW`*k\--"m`i^bdpB.B!eC*i9?2'(I&3r$N)3RJI)NCA4pBUU$E9rm<]?%EC'qPMCuKONelHfiTbj.dh;j^]nE0U#hL,JqAfq\V>,u<Rp/:Ab3Do`7'F$B#,iKjO+2OZ)\S/8,.a5!kYjpa2P,Uh3&V/lVl,=l%77Hk6<ME95';"bAH<$EcTAOn_h8X2aLc_K+?NW=<C?lbS<]!3Gdh)&Pp$"cKn</%]a1Lfl6\M4j#Y,Og7`8BWf_Z%:jnmuBdt4tk%EMSb53bD8XO+B7P@+=-E>WZB@1W()]CITNFc#4=%l+YaTM"d>@A;H#ur1.[gJB-[g%jAJo(:="CVA@h:k`#T7#6aJTI21aiokenm%pe^B-SoU?W&1'#M^_*V#pqXrC7MuuPrQAj5UPZr)>kM\Z4%c<1V%7t/elAK@QcjA6Y)X_/nYTl`3^rO*FF`"5*Yj2AV0Jl?<R_RG%8R*7j%V2u"lRTp(-8bM<)20?UPFBm"6SubCVD=P6^U6O"$dgM^.O,8nSGQ;>R)X4&rpTX)2X6eqYKnoK=l;m4Y7bJBoL+)P)BF(0%Djd0Y@A@WObBRVc-U<k=qcO1h>R<"BH[t!Le#L7)_igm?UG4K'DlsKPR0.;2XS)a=mf#6!.hM(jjF:sA:o<^h*tShpi<eU3(BCK)%frHnI*4Yd0M`J/_+5Qsl>:6g6%(k9L^7/m8cj[8F")HL-%52Lq%Ft"rb?^SZn3htaliKQi[J!;pLg^$8OZ*.-DLG#Un3%-*OkQsm%'EaS.bCaY]m#Dum@c&+60;3ti_^\P;L(p];WeU)ABm?ie4SS^B5JrOYb5`5\7,]2&:iF%.]T/N:'@oYh2eZ_?p6rY_af3YEPAIYo%2A=f2f4IiDn8MS-YXQ"WWcsfdG:/;J9$u"+^VJ&&+u>_q:6fo4H64j:coS_0.`gZa]eG[&&X&e-_3GAh3dP#rEhZ]TU0L&6=&k_.%`k\^Eo)Nf%*W%]l1eLS<887i5eiluh?sIT&Q7j0d[14CpinOl<'YcsC^(#CL%Oi^`T%G5Xl@VD946U[99Tj+IU1fFX37-V>V,0`5%7GEl+R\cN@1+=VC-j_:/4=1@i-:p<KLeomm8gRDmP`h2.;G'LM.5&S+"$/kZ5RH"C(k7+WCaekU=>3u87Zs!d&e#K!83BL)cjWA7%4H<(hIA+H`82D6<1))i$O?=XYJ]Yl^WC)gS</ubsru7Vq(*4(*$7H$PZ96+#W\c)b1t)h&@aGX?,P&4gKnIej^*3G4//XS6o]X=A%OJ"Et%jW%(LLPc:qMWd'&me-j-0:Au?"aie$5LGW8#%.A(Cge5MZ?2!,!h?^U-M:2"mC_:dqOPIJ34\f$H'(N_nqj^%*o3hLeo?d%L8&(58ckQ\R5@P<eY<$[Q=W')4;7gRa@`PX.[V!8Cl1q#CmlTB:bXR-e`8]Mk6+P5,&oB9E!\/=V0J0$n?<d\`::Lb5bigV4SQZJ%hp5tdK>7ok#r9BD!/P7q<p7kfoY(m@kjA]/.K7Y&J0Ft:\YR.WhPG8q$Kk5ipBpj&6=ejnRkX70Leqr/`W$8A!`?4(CoU8':q9jE%:m1#q(9\i\q0.PY/$)ehVmt)YVBf#1VGSM".9t4q!Z)#tN/Ig-KH`\?T`E1^JNo77a2:;m%a#uX:4SkTN=uVP814c^MNe[G#RMOZ%k6Q?d#F-Es1mA^H"'$()OVJ1[W!E_@Ki;)U=rN;6;GPCa!eu:L.^CTuZ7$)9068n,Q^.hY6qV/B"[bua'NpSE;%b-\i\5MOa\a@L%*`CknfLi9T,^P@-/$c?L^*7kl+@%a:A^G`->"<c_Ttk=ID`-ADZrbblVXD%L.uW$1<lq>U.-^J[(j*)g&FGE-PeRdC+-Z>PL&%CG%]nLDX\,h;5<s6#)=stpMEO5rP=V_(V8fYS+7$aO.OTDJ<VKd1`2],>9dkP$:KjFlCY9@?O"S;pF+gV2+"/o49kKol>D4?-Q,T^g]%OB@AQ0JK^c_"+^\nR@HSn\,'C;#_$8^U$h*JQ<-,A#2`_aMRTa^8D657"6Am9D:qGEXLl$6;%*3c.$H,A.f^19(EB->7D26#L!UE%)e:;j%<9B:XAc>P6@uI.MRZ2R'I\c'JH'U6RK/6QRH6OW5`q_l<gdfM+[ZW?.\^EJ-'6![MMM;XKe+S(Z'<\h7UfMl!5f)17>X<V%>5"5ap)U4^*BiU83lIZt!eu40,%GC!=a_8B/?0$+7:NSX#m_q5Pp2m>A+UW-9LpH#n-jj:L\Up+S`C'D.*=7pOJ:ga!QmL[fi*48%!T@<2hA)lja??AdlpS;on4,a_QG%ZAnUp:SP%[@HJgNq*dAA?Dj_]ta3gK36eZNAh<@dI8<`#rI]%*uil!EaL\E_TcXrO)_6VG`9%iE[beQ(aZ/,BZ;^lCh9[o.275Gnd#";']j;-6-N#iPg(K+?4qZj@V-b-LrA:/$&[g&sh&fL`OnZo3a9#U(%6mJON>-J:(0=>m1f;%SFEeBr];f`-(AV3)^Ls$mB1P#%#KrR!Lo3&2BZ;c0o_15"L]7dMii(^7GCkM/O^Nj1QNC^OYK;WjrpU0Rskt:ZAqpU@Cf0@OqiN9%=E#[N<$]F>(d86KF\*:?n02%*=p,F)J0[\m0E=DY2"#U]86FUFVJXb6pZOT($?e)-F,?I1?FS@+.$N;86f'(W30'flPtYSBJfMn8%/'/r9&q0sg6r6VcLkMR6*i9+&G9GmZJK^-DMF@g>#X,puO_+e5p4G+s4q_T/K-G\>`"*5VObEZD9%jb&3=`OEf64(4k@\jMB6kO^%gR/i1S!Z%((75d;<"GE1?4^Le,s_b"QN2pq"X?CGPCfWC6l%,ALW('\#a!P7J0:"_O/G:M+sN^HRBa2S5[^nuI[gFsh&i>onF$_Y%Y-@kY(uTqm!t+_(OFrFP-JXm%"7D%1@"/qg@5rAF1SeNq\Y=W[bEJgN1J*6m0>rMP;6EF[rA>]CplJm:'h=E"es53a+<2mTE(He!%VBFLW^m>L_(&I%Kha.'"Yt'WQ`?*h&'ml=V?-5WYNMsE-4$jX@kh2iqUr2+)-=\*\YX?2YnIh44D<aQS$Zp/W.iIE5LjoSi,96]j%XXP/YgQ4jhEbq`Y2@bj\-%TXh>$&cd7"8o]@hIo8/6<`/>NjZJ6$Oq3%HR-T11?:BkRfTD79:8XXG4^.iWt",-T'1'q0VLp%q5SC%<WaoB2JjrG\"A=d2VC=#=!V,b]cq]TpD)$N,I!m'(=3Z^3KXD)^oeBnK!_j!\&?+g1AIPa+kY(?0AZ?,ia5#mG`dPm*+5Xg#)$J>%7glIo,9VnrF.nCEM<:aCDYu"EJ&dTi4-1QC[bjZ`'+f?N`"&.oOV5WiNX255iYj81'B)Pmo2Or\D6ZL$SYC?3qjq%+R&7I5l3+>;%8_'\/gK(3m.m<-4b4dc9XW5s<i@og=R(uRT.1$,-&KiMj7isIol2WrOV#qnGrGWlsO;C@fD^$\VJSA9lnj,/>%mgU`F>WbqfPRp8%4X`01Jcq4@1dN;b1_0$XFlA]OO(8!K@m_QIbN[_XX:qbG"8/6+7:>T52Pg,>aS[-K$$\X\,55td\%:D2D;s7bY'&\A?FEhQAs^:G%SrM]4)7H*p=;oiCTWm.YD%57RkdNKUMZ[c*=5G7:i$!.+d^Fc5`QkU<Nh>VAg.n@-,hd.2i"SSO,*B[GMEZ6cf?`aPWVV"@hFJQB%QM%ac*;D[QXVkGQ-0J!e(i)Wki2N9H6:!+/QMH/lgg@k4mLr8BW(no%,h@Aa-:X_;Pj%k]*7<6[RrsMUk90b!?LbltGm1\Und7/o%NN&/\&W$W#01\'G!:h0J!Sg=U$52uC$J$U+bT[/<Lql,8YRuL$[NnuS-rm;Z:'sD)d2>#$@j`L!36e+(1BJF+?p<4o*sqP;k_4-2%DDSI>qGhpf-#A2>NX^ShBu^\a]>?HmP$W+J2FBn1/)^1;:N<flilN&XTG*k5>QRFOdQ#ZEj.I:q;GdG>P/%u4JC]o,DUSq!U6c&r%b^qAZ5U8uF6l"V\i%b?i(PUP!`U&5E7`&Dn^jM9aS:Kgq[CML@OY7IQ#k,TN+_$fKa&3s\(U+;$"cgD4%^4PJ`]>8U!Jfb_:dmnn%,X=41'kQ,K=Dt`!!';?3V[)"-Q0fa+#mEE.@#$,c/;,T[Cn=E8:'/?4EH3*q?GoFhG!3rRhPWV@;M[,#OG(]p[U0]Sfb?%AQGZ!s%NWq]DJG9'F#3L>Qd7DKU1sM-ajg=2irZ:kYY4_6/oEXpcT7co#hA6B6e3LKiC_bXF(3NPDS<jemdm.G&n`-rc,VR[,k3R'$Nc7Z0%J%S4e`XF%g3sF\uA<K(V)*9+]oU%\QQ9"8u3QNO;(:iYK@L-@<'&,>P2T'eo:`(hoU\*7PXsK3L[L]1)/Ha(c@(]bHJnJ*9G(jF/%q"=j+&)e?Br4Cbb8=A-PP8ChSa"f\>1c^B.Ta<AUj6??701hOSMl5m_mTp5jj3t`u1#4uK=RQnejmP,.>SEccCVe6T8F-no*6AHr%\^P^W$1oi47*He+q51u5q\Lq?f1M^W=N"Gg`T&pDYI_]h;KfRirc8X#`O-+3LhYgccfV7D)4gagrH8,,XVL<6=h)D2W1A)[?0n8*%7,r0D!`?IWLPoqC9:2Z/U^9`DX;>NUK+tcMb@#Z5ft,8M[;B1&M5T#V*%Ptj/iP)2r>G^I0j'(_-%S4O,Z\2bj9oCE:15_jCLRch%@NN-c=<A2Y-/2$pE>U:p0NFI%==hg8/ofE^_R>&[DZ2'OA^q$]Y*F3"ITN?%64=9h"::B9"!oquno9J5]NC"(.3Sn6TCBlmYT'!\%eO2]Ed0Z8J:=pP?*7;9H*0>Y<i\@?M_VB8XAY9tS]9;B56fE$$eKVVk`%GWDZ#(.LndPA=dpkM#R'Sc;L^[SDe?t9AgY>4%YANja%7P>:jNII8oW!a-i"A8r]ict@FG+>C;]?s4^+/!%EDQrd1)]6lO6+@W5_8-48+F%:`ZVI13cH^[O'*,<>a[lSgi*SkJ4'=Ns+V/ca%PV43;CTUN1*kZ9hgH=>.WH/Osb;b`LFP%C6e-+o<>I-mBf62"Ra'-Nl[(TU0_Ef3sNclsf]OSr>Uhu*MF?%k2DA7VFdOm;PhLt(j%dobOJNmfZ9m_4la?lUP$'P.?h]d1&";)WuFEX<`TQ%T5s$%'9Lc\1f%#tZ?*!E2>F+;!_h8.GlESkj$@cF?%]kB_i8itNhZ5%!ln%6M:Mb;"Pa=DMgX>H#_cUiV>kc_\3rkfPh"Lhuo`U-d.([#F(GdN`'gE7<3uX4:4`T=:=.&/h&>V&m2Zb3)JWO/<%n\mYVauRip*M%[sS#)gq@O2(\SubZt.kuO!Ga(38qdU'k``"m$Q-4@G>"Xp!oPNs!W@m\L*rD79lT!8G6DI[JYHKjY,XF4f78s!;S]j2)*Os#^r*Z%S9&[E)P9k/Ado+0Z!PjImP/Mpbh?a&&<_2Zl^YHf9)rTL5puDG[4UZGa)nQi?&tA*dZ$clUCed1'67up^^_2kXXuO.NGbcNAO$Rb%/)?^@f%ZSRP*kW5-GsCT`+p'Z-8:XoR[_>HC!9W7Xr*Y!:dUXke8`W.`3o`UUJCN`!RN'BpB9HjOX!jkU:?LiYUn5$N077u_7=Bc%I$=Y%ARNfRE%ZIFm+V'&`pjeuHLffdr>*mj)lgr967YA^1=0>;*p<6&nOGW`Pq2V2B`hh+3l"+,[hCacI*sI.;m;bYmH.lkSHa>J%!A<f$Sc+i[7"ABegX0uZM23Ol?'BFG,ONFi8Omo$:8FD'P2CFh*(E^`3gFo@kD8lNIZn[9o^@-bmS?,.WA><UR76ZSVVHH6_qfOS%gKT0#:6/ANd=rXP2f\O-;#X3H%a8B<rCQ>VH[!&*^[4j[j>eR2]:9^Y93e@t]-Kd?B$62NU$SnP]=#OF17"m@%N*TR7H%D`2?U3d%O<K3r(e;GbJf"`T/(<=nA*9HMrB'ET,'^_p'Do'/m)[g$`qsno+1C)(Y^PK+ZV:ZM+9B\un'J?"4L,X^YuC@Jk79'ajenVS-S@-3%So9SK2b>u5:>@G$GU)LHrB)1hkS_+<Ve9qo@*pr5RLY\&K7s!6]<fPmfnoTFB+NOZCU5g6hS(%DB9-t<O!G9C5/Hnh;Z8gCr]NEX%]6F1BFF(CT3-/QP\YQ-1'83,k'i-sO7<TrSqdW9!=2rr,f9O+Z1j3Fd8_Co6>9a^?"*XR#/Q1G^`]jXs/U$on"#gpuCnGB_FopZ*%16s8G'3g[UfG]^@nO;#nrlCOD_:^`:D*)^nIWa5rZbkYE)J)!4Ng#`OP5GV6Q4>+Vc/^-7N*q&J[rN]nc3@Wi7&XffTZN3$aWl^#%]_%CF"7q0D"dilhh<$LTn:Gh^U$U/sFT'66*5\R%M'm/SYQ9H*05Co4n:ej/QU0K\?[rtbdK>N:TLerWmV4tg)u01WmkV79`,ACH%cHMH+/sA=['hG`]%=>;s>5kF;1uM51D7;+1ctR9tQ-_Q(QRtktX&5t`7`j'skW'Z@*s*+$cd8<X0D%a+3jB),**ETe0,o3LDWfa;%XIS.I5?+Cff<+%"[t`L(S;Sl7=PW3-PDmsd^!s1h7`hY.knoi`6kS=u\O"Un@sZ$?WWkquVp2-7.N^jt7^K*Y;aGEQ92K[4:8lI9%UCs((8$&U!Oae\rO'dJ.puUKkI(5@a-JKQAcnVms;%#E"G11uJiV)jH=9Z[adTRY9\F=^CIm1-Wcq?(/E'd(IV:!+^kU=0\W:dRp%F:9+#Y-#0k,ICJfb8.7?%djh0"+&[K3eh`Qe/Fm(VV"q!N.ID38Iu4#_>'uQiub@^HqIPb#8AQAE=Z3):L5#_]MPi_0q4W.[S8:A%g2n9-ZmaEC,7)e;GbDX?N_Rgc=@I)a5%uQ->%:t5L!51qF_]m!Sq?OYIk_FL,mPGW4K4T5Rkkk"&ojANJ<T7"Z83;9!$X38n4U\F%513Xmc:ko/Erm`G#n.e:Re_JtklV-UrA,O7jo`nV_"ZL*I))-\(u/J-^S)/t##<Y+"+k$YBKn<u=&hoUcYnmgMpgM%5oKulDsJV#%.L5k=s-^`l<&:o3/g[nI3rYk=0hcD5UJFC_@!"kOYCFC]q]ZDV?gY4(]%TtMi])c!G$qU+"W*)nYE4[Y&IC')94-XtO2EK30%A*c%\YZ](F2mimIg0CBI=,rU>8_hs8J-INpWr+q(WW_1IMotsNDAk:VnKm81Kkg"X;83K;&onBSjkLZnJA^.YLq!>7e"dsKn_$30EK#n%F:?\lrR3SB=sH"Emi-^>QK'0W0H7.&q?KQ7)buTp!q%!)"J)@GJS4*==1FjW(oU-<(JTmq/H<:'rL]H$=]97G:W<^/rAUuR/a%*>%M.:$hT69chdggjA24=+'_jK#mbS^1SGNfXd.?bqh!c*_JLerbC4]'\N2;)`\H,'%fX<2gY7\K*<KUV*>@=f`@HiYFkV73LJXW9M7%4AGZnCfN:U](9tupR`M[C?+aiT;g2b.Wg"7kj]n>e$?mP<3n%mR`XeMM8j,7DnI@qh)K!cO(K>l5/N0QDB"Z9[pD6iR&6QZReAg^%l>:Q#=E/m@EP`s<A&sLF]>(AA)f"kin20r[hf.a\?ppk<EuKF;9#4Tk.tf)]$[f_i3pN[X>]mU-^Wo5*X_-*?bXu7\3&tm"pQ]XR%7](UG(BoH+mk^/A1R[qaB'ZqZs8$SC=Q$R3e-N>L?3D0:ML?)[:[@`1ms7I=(_emmg`Kcq:'pZY_);8ZXFlRQr7\Ie!q2!Gla%'J%QJ89*1JRJ?%3p%qpc)s"G:pVpAW,Kb2=Xm7^6+!V9P)\I@"VrGks5A2E!@Uc<>uClaD$B0*%/i$^>Yt7GnE$poqt?pDtmo/.&j\E%L0E*l>,-MG2Q'=uePuSa31W/@^(M<(9Bb1XeT2TBCO?lPicD.rZCm_0,o/IV2`43D]X'Gm^_0G92l'4OLlY+AHXeVIKX4;?2bg4?%J<[j@q:*K:^_m"TEaVeTY<:CuY-Mp^j(r$X-CG7bQ<=`Y%'KNmaB0@hBnN.UQ:cI-rt4$?lo+Wj=Crd;?H$BOhAO!S_N1+galGoG%gLbCDhY[FC<9'nQCP9CW,Pg)o24!I8l[Q`$3"8Rkr1ZYX22\;DnBL[@#+to&=CBn#a'NZXB,H>q*7im0o=`>_FBLld4r?E(A(U^-%Tb/-6;Xeb_m(-QbRA^S.5).;\O5<a%mc3c1ib[AnK_]o4DmsR13(D@0&t*U+q8eNmRS`Jj'K542rscH^be>I1(X)'t2\Z*?^M2F^%':dsW75ms4`gOWnk]CX2)2#FGIcJX2;R,+sj%OENAfGAp)eWb%B?",Ws+-.ceGm\2R5"j+Uar]g[rE`S7akh':\D_q0pZ=d=lik+%S1/p!NAJC*RMIpQ0;jW'BD^!l90'-`q4a^Uikl,DfT8!qN9NL(A9uhd^Dk5FNoA_4)(?Xk-h1&"cf<!2^=ajamsA<f[lj[OG]`\0%i-:i]Hj_4WpmHN!agW^]Dh2VF-JrG+/S2bXs)%@%6W5\&DGqb8B%G^1\rA/prhkabR<4oFkr,m(B$r98FRuDiT#XKaIkr5a)#8Y-%K0*(9_AO#H_*l0?1(sg\I`=c3-M"o29SU'm)Zaf_0?2WPk\K_Qk1K^b[r#^LIl&BcW5"qEHQVjKa[&S#S"n7_RBA>[oL;D&l]%$6%M<`t+f$r2mEf:h5I4[W'^Y(>!2I9=*9[.cEh5/XikIUl9CRS"B$)kOM8%T2Ll`6%hTn4N]#A:Yr2DQFjP9rX2#Cji,r,0A/r83/4%U&Y%=PV7#\`]hIU;G='.pgoV\lQq&S(>pp]5(6[A(DmCTs3VVe52@6IjeJ^8[JmG`B>S5(dB#:O(:_2Kc3V8Z08R.l&e,-`a6Acq%JV/cd&c!L*HD%:%qa+^C3;;%=K)(&&a9\%/Lenbu+sZdtq%7&L,%b<Km:opB#?NY/VaJMs(FEF?re]3o-;F?o+%Q,9<9a%N5Q5>1%B5\sm_)Q'&k?7e0Q@Bs?Iie(&`EE1cQ@GLfT4du_Z$iTiRXb=Nh_$\-5PO+qb<LJ;1>(AM)/,Jo*6[uEjd[\WL,@T2Q<DLYQ?/YZ%S3JA%@+.eeXQ/>fg3brdrR)+lr#$256a'JDn2slBLQ;X/Z+nuQAoL@g\_Ln5$*s[+G9aW%Gh;BT/W7DR^13GEh].\JHQ,\f8=XXI%m#]A6dop7Uoo6_PGSYn#L#C0X#]:E0Rt]eW@i!jKSAjG6/.VEHI`LoD\36;r9@FfK?sRN:T]>[%\bSTO%B[<XBr+PQ;B)D%m'?]J%B2bK@3+T&gf'An#M!n(1$OjNDVc+f^(amRY%q>e,HnE&`qNKF6=+#Uqrtk-p8_S()M5,m(Nr_L$IJ[^&/=&":Z&D^^.t[G4IE!cL%P=pSS,c(ERK!R=(d-uJ$01`7+MriTbdJ")__44X^B,8^Z"`o!/Rg!kF_44X^B,8_e1Q@,U2g-mqM<s/fc7G>=ftQf(R.E8QS?ELu%hec`K"@]2.Nh8/ATrIL.1rhP%XnWD.2mZW9[sFrs@Ln*YnDcN\,;S5uEs+_X@`"2h#ehLhj#OhMO,gh<E8l$(\,6^R6Z6U;I8kH@%VF"oFFEYOOm"DF-$Cu8TBCaU:\/K!`2!F::X)E-de_&&+44WU,`ppHHpbo$RrGN_TPcLf1oB6/IpC;VhK*qaQj#&p.@'U2ol$h;M%nCN5W7S$PZ^5.9QJAd$a')66bERfp.Pt;d,B"?^Fg5%O9XYc?RSi/$Z_3k3tq$;Ja\DPqAR$>ScS8eH!XNShERrBa8@`V):3j!/W%lsTCaIt"&Y%?An5]em``5H"5</+ij1=8P3A@el4-M,ISd64@bpIta:T%OT"$rElo#`ts(0r%.b#SW;$<LHi`G')i/sa=R6D"Wm6A%8V(%>@i#'2,e6)HJ'>bO;\f<,+*4O<l56#A^1.AZCoPC^C7L]<n4hncj+(q3p@QIO(&tld6_B?0i3:P7*:cJ:!h]$^:g7,Wdb[#g%UDVcpk\KkU#WBn3>Ak<JKMh]Q"B7Id)e6PZhUCWY,KbQr@5g7?$qQa-A"_t&1;W<84%t!ErmJ`T^GL[=/R)gMpi>?9T8q4`3%5fM%.6C:^N!94;UUD&qKJ^FDQ.a8]=;t#_a]N'*MUR#.epi"+e<`Re`]d,]5D^ZI4'&%b!<#T"W,Ztjbga:Q2hmAJ-)'6]GWTaXL)oPd%J&>Q*A)K2uKf44mnud"\*q;Gj'^S3q:5Y7K%kTa^hf]f>4.stZ>mUpmeb9ILPI&?F3Sfht^`0rc3q3/<VX2M3SG@[K-JrHBi)o$,%H%DaTAEF'@]YM;T!X%1t1G<]VnG'Fui-4"up-&Ai^o(_egq_$R!s:47bRL)QJMT6(jp',d^d!%2\8UR8Ne,['%@fO>nCf]l'h]"=%BdVC9N)JQP$QKD8DsIXWbO:2lCi.KnV3hZ%GHB6qVW:tYVYc%+f`@kc&=K)nnX%8QkF]!K,oD(iRJ*hT(\68,D?K6Dq^]H@$AM`c%D2.C]AlC;Hm9^fBKNMIG?UjN=\5W:rpIpY>Fm%5j<+@(//Nf:fKK+B2of[r)IrdZtUrQ6Nj.;YBn\rAJKhjEtHq0;X`SYSnjqhXk%MWu%u6;O(H-b,f!0jaT5S1fDR#*:;u%/ZNBINUeX4(s*WCr1"qg?PUiIe3GkrTufKD:cRhCr\$+7;Y.*m;4]OK)Yn=0u%OL=qoSu%hkBsrc\8'[^q?WFf'Ak]dWSsq:L@Eln6&5L!?];gXnu:L3aPoGIH>04s,!_?e?KoQ)(3]-+.X1/[,o/]@ff>rmIrhR+O.!C.Bsrn%i-Ucf`I\AE>b4"`WIL@K6Q<p:J)>3c>nM:^A,@J=)pYO_RJ$40=\gj6ks$tqEXjTqYP%NN'*d?7Qh;Gf(,KajbJ282MPKHfQ""Su%RbkLpW9WQ\WYHA5i%gu!'d=d)EEX;YduObld47!3PU8U=bSMCr>'deaf>dReL2#)2is(Jj?AF!QNR`d?cDp^h%s4[8B.EO01s^iU%d,6E0i@6\ZMTf&`(TPhHo%GErNK1&ZAfC==B[GuM<R8BYEe5m<s'14Nc]\3Mj-W$9poYteID]uk%skb0oOYUH-iE[H3IOCZIH#JJ%I?C7lk-LWD.Y%kR[`C;HG:H!AA^H]d-Rd.4.QB`*eYbY;9Y+9ZLSh3$]B?'E(GnhO1]RVQU>Yg$B%4:R(?JJ%"oKR!RdMChU>P*,%O_A-tIF8W@q36uk-f^Her)\Nc801IjE?*kW/)[&Kh;kJB`jSkp>tCVN"^7r(B:Ke;%<=1%YWS+EE`DPsS=`7QgqRBN?_a,LQC;\!%r*)e`S$HY&F__Va.$Ls^D7'q&NMdr^8V[?PfeMnrirq;eg3h^B@%BdW@etc#[j/>K&0aLA)s"Fl,Iaj(2sPl]\1(dt;$Hhak[j4q%V)DN=i88]43Rn'l,:A!9Y/I+@:&`'lSHb#,?EOU>\S%%gh?Cd.nRTP)J>JZu.JYcgSS\K-K5l;+)#iSHX<R3Y76[Uf-1@n9cn,a`%Gs4#'=TF$!@uB!L's42hr""Ui-@-li:U3FpratYD)\L86aXh*K`Tjh1Ti8@m<\u=kYt?^iiQjja_h;bAHH"Hm:<gFc)KGQ,.96[9%Nj"+Fp0_;#4[]%3;>O[20_CE\[UO/[U=g)HP5#h.g>8t(Y7=dBT?(%pLX'4E&b4n9q6PW:!"U^*%C6Y@(et3#3<O"]%%>Z29ga!&%OJ**1h-#HSNCn:O=l'"-%nCU/$FbHc/tpb@r?E10_<m^">k+[Z`:9F?+>E8rdX$[g%sM"bV2sXH"+#dnP":epVT*k3AU,%s0Hs;5%E$6nJbFh?>,L@FA6dZUg9DF*KV9k2A*#IlB>jsSf\o]<Fj@Wu`6Yj.gN)@"`3!cT2ckOJcU*P\M5f,[oO@Y8j"D<P6pD;2je[BF)%)l=!=n8G'$5*7G2T<@9kHtF=Hp33j?U1Cf<XC541BGk`+$LM&0V\oP6U-dN?l97[9&l4C(_+D:-M.ek'$#U(5Sfe&5e.!pa/7Xb1%@N.?6m;LH!*E'<pRW^EBnZ5!LTl;ha1SVS-0?1li83FJV)31"F&0-4NTct&DkTW\V/8l%"Y"4kpQ__^O!eMr.!m+$i$O7B*#".n\%$3'c*6SkYn8MWCqgLuEfMueurV%BY?L.S7(-5qpO6)"M0K-YIkZY3fVGj#2p!j$&l9"R6Zbb-$o&;pMp(_5Sb-q7&B`?8j,`/CR4%W%X#$#Y>fhnaN=@fnP&u\0D50i!<^>";WVh5q>U=.iT-j8\js@O?b:i9kZ90`LMMZ!l@R60AM[W&#+T#J>!G=JbIKO_!r[gUG"?\%1WM0mBPJBNL)?D7gc6_/*0V3G,Zk:o_0\^,,0+)_'7#.!j8d]SEYOFE%>IF.<9MOF4@4[/3DpK\%OiG2RR#l?O9YBtHG0:39B>f$%dhlCEJ'6B!D%M$_HOIU/BG+V5&U9GWi$a`,eB*QCJ1$?<GRf_)k$5L:1PG`09<\N68fgr$A2sdFj'X<LS%Es/`DZb9cXL'u^bH=D%?k\Z8#(RFoYae7BXFs^g#R0fF%jD^o)(RJ06s4_"@A4V?j+4B<^_JuA1bE0M0LurgKa$_WUF@L7RcEr5OZ^L&!e\LKE:tQl#Ks_e%@2o]4g+YW<3N.gki;kPn_1Vf`#Pj.Q*JV\i&f%[eHaoRRQf0B?$>GW3m1fX6C.ghK>qDR;'4DO_7h#I=]&77h6];p0JV:n(.Ies(%Mi#WN.D]:B!TYss#U&./Uj1#4E"l$(GV+IG.)?stk\:UT>q"*,W:p:+(Ea"mK\)cJ)5h`BJe`+TiNA,-,.b]/G_lWe]aGBBS]9t\%e"E#s"Xd0-P]dU\`O4d3C>X?IS=6lCXf9o=L067C6AQ9Y1^>j/dIq)N%_OC]4Q.M]B_g&09a6(26\u3a#a27N8;^n3EI'C!,[jlI%6+^YQ\Rad"/QY838DS8V`.5_A&@77,cF?ou3#:Z`(aXY.m[^b=/,Y6<$]YRCPl"H6Qj*W`s*Xf=n')An4(D!R`D0]S[$,6/,pLZT%pG82-k`amOLX07MrVaVE]j@Z&qRunlLjoI)#7bJ/H!"l+o";WfBKcAlXk)XW#lbV(UAM&'lFELc2j.4fV^\/WE43+R'4[EKRPsF]%Dt,72Rd4===$^btmk(C<i!.,^e(SFOM:)+oC]@&Ns-GMr/0kmS%YVTWE_o%-J)mV)';KLD#gDS4l5*AU6Ef$U[E\R"9!\JW%Q@Q@%MQ\.n#:pXT*<1)oaPe`+P;8Bk^nn1(cO&1B?d&^+6SD3H/ETJY'Yi!oj'spHRWE68aOPEKI]`MWJC76,K[2V"M31a,CD!:M*%A+e%E;Cpns*ZaW;4\`;3kp8So'<>2!U6;Fjq'?VAfFEo'<U'8=F(,u5t>DW^<HeZHS"@H['*q^)Po+=pRmecH3eYqXd6d#q:fm[IlWPb%OqVa>6=%=JkRQkLSZp>8Ch]mXbk"2KYCcY]8mk'@Q:M&adU?b5RX1`g#/#?20f7'L]P]Ao^""sh?`0o(F2fh:m=M<@-'\)ecSTk%%2TcaN=o#oLn;]p'$5;4pKkBDj$bL=>Q7Ua8![G`]koO7OV8d1@ol9n<b8n/-RQ>f1ghmQ`Nt0&$Vcl[\e3b$Ub;;7T'!<<tq2h=;%?5*_4aA+OU2Lt8(L1Z.FQIaL<+lDp6jf*VUKhf$V20>P#g7"l<`q_`(DfuMCltMUH[%!W[Lc4ZF%N=,Zg8K,CMAF@'btc_*(!h\p%f>_Zh:`DXK<_i\N01%BqN10E,$g"dGg7_J;DlX&td+c>3._FbffJnEW9peu'ObGp<0q?jp'N/65_VY>.U-]SfF89]a?-<\:E&:4G%+4m=#2+PM7G^S8l;]]sl;9EBMQk_'WO-X'gCSAqhA1NmYKRg9n#sc7<EU;dd$r&86c/r#-5kI7P5k^W7.H`nN2p?kg>\MBBdIQ3*%:o@X,';!.i2uZp(;lnaUU21ic^B./5G9WsrWsp*P_n/9RWhiT8A[In<=1$Yil>!B^,CA3IWN!r7Wi:a@&/"5-Jh^BAPmGL&[coN'%f%1njY:EjF3q*V_0pidtg3Qh'$8p?\0QTmjGDtC4*!EIr0T.e%GdN(NJcVe%8*dOc?5mb6D5n@4`!Yen,oD:G*F(7u=m,ufU^Zsj%`\TA?ZA.)[Y4S#tZXg5@[R[\kho9P^ge8DM.O7p?3sF%Ca._1@hQ"Ftid/L(p1^2;7S3J)X]mBTM261`,5Y\^%I=c>?GRDFY?R.M%!<tp]UL8>qQI$$bohX>k]7EK26$P>ETXa0lU=gsj\fITP5=Q])M6BiDUk:6:)Y]m>$TnJ$n_O<Ao`Z3_HV1R-C(BijAi3GO`aNJA%@tUm`(ZkY8'"S^hVb[\YK'3^F!rN8>;oJtk%3&p,d$qhC.!#"lBT3AgIEPpAW9:Pu)5N"?`=EE!elWpN@5j8_rSnVZ\P<g_B.JWo%r.HinPWEhTPXK8BS5;>icHlVG%$M,:Y25td-;8p.!u%K4ff8I)(+AUGb%U#Pi1RSIr=CIH51<JhSoMUC7&4=/+_0lOUS>:+SS15E%A,,&8HoCVO(2C6/ZfZOGrGeDMD_7k)#AP2W.WhdqT\b+*iWh>:bbAhpj3M)a?QkK[1$[:D3@QjU`^l_C:m2F=*Q)h2q%ZR4$kT#E%=$aJ04gi\g6SKBmbLNK-<ZsCu71Pch2V<?SQ2j?<k<P6cLL-ApD:ET8GI_?D59pib$#-fGac2/iJ5C7arN7XKGS%AscR;7<5aPP3%E@>jVGr1c+]+FqLkeO3(me`YXhA>Dn.BpLh+ml`uD9_0$3BotJO3<S7qf1FB?2Fs#Ck&XY.sM.H<[@TJkAL(%JofN2cKGhUf:>^/%VV!%,IFRmDSYD!iABJqen.Ao!:-QH<,bK/1c26%s't:YQS*48m*%\5a?CZ`/B4ed=1$)0i$0Xk1s#j$cn5Cbs"=EfUV3Z46i2Vd"%j1#S?<UE7'8897h#W9Jj@Xk00Su>I8RiAsi]@H,Z`q>8gifNIaaQie=#-:g-Es;;oWHS/uGN48E=0iGgkj>s=e9Cp@D9Vq.S!A:O%<^<^'QHM!EnE<^FLXk^j<GV8/VZr*V(O2jS!NMO(>&Gb,[qWH-!9/b9hMe/eM<IDk#3"ET`>VoKmDc=2i*ZPipP#"25U(@$!)pt4%OMUl64gr2")?h-5j2Zd*2qkN;Vr0Tb!JYK7c(PY[".>RuML.jmmsnl&Z(P:&i<(VK9ri)VQM$nc7B7,<K5p/IG_Zi"@++DEdt[pm%^h.nfClUj417KMg=MC?q+"qB0D8]%)!FskdF0$aH*/G,o(joLXX?)#2R[+?1d:OpmE,qVC5LDA#'rYX25k*bq"';Pf6og%+Bc6i7%WbMDQZ=9c$BiToHB2:k!dH]=Gn)/`:@AqH'O5ZjK'q7\_f>mjC6sKEP`t'!j1gr&,#@P=?0J`L&))IaNLD2b*qe-FeWC9Pn5,tI2%J[GCR/s:j`Pui0oBSQ%#7s"kUBFX#n3)$nG>Y*V^KupHu^G>rsOi`[BE'^P4p%D4\^#Gbf2@_+>lEGT%dEFnbd^s6YK2q5IgQ-l-%$%r4Bc"!GGE,oq?1'n#:j*f3hK?=@MVA(NX$7.:NPQP7]lR/ZLqM5c>PF]`-,A#dE^.,Vt[$G$4p]^/CSqlV:7.+XhODT2Ibn&L9%eG4@GTgHp/NVl2,&J*cmS_E%Q&`'mM<3St1(a>M?EC?'uL(0A]l5N7RIELsU5TC$c'p^(((q3?]%6#iq%7@e/j]>LceOMb\>a@_\%2\'N0X.Dd%?F*c6<?&M/..2Z(*hHB\bp2j\[JJ-cm"c(M=m<+MLu)O(aKk:te.GW=9G2[^S'BB#%`?`4lk.d#9h;55(fJD,V7(3T%j..RJYA:1R8[Gd3["G#q8Q$C9_SB.E"C@EJA%>_*=t>7=VV25GpTU1"c=A"t69b[EE:Jr6HrCYcZ=0165oP_[Nep%F@pBJWN/gK_%_iI/Zcs[<"X'F`_WZs&X_]$L&:r=#`9lm6\!&_GlHi_"KC"J?lKC'hX_#YJh'(i0<&$;$2HMJei7Gt/B9eXs(_[=M'rD5FZ3\&!$%PR@o;c,-kP?8mB,iN-UA@qi>-'>M[2P[iJ\JD.2c@,4jXDo13bC;XR<*\Mc8IPa1JX*Zj\hPi[o$]!Z3q'Of3#g'&1Zr8)W]kM.t%e>OZ47SZ=R^Xf%<br+#5FVQkN`>h%?r;Q5cq#d3P"63Bc+4WqdlHdj#>$;(uBj0sp:6WR^36P9CJCOAphi$q#qD1l+jCMtpj&^E(%8a/l*oi03.-,BH3$="a*E_m&i#BeF`KCVP3;8sQ/r8f!Uf=PGnKucH4pONe5gZF(m1i-r#s55\.dNI`!Z&g'Xb5:Qh+)5KA_f:l,%%C;Ns%-\4k[<%A5km(nJ_u!4-b@oKF^5a98m(mi:SD&sX:MT?sqFN$:kcX]EF,@e%O\9GFJC28R31T8)fd#T=I(Q`&,ib9pBeuk\%XDK7b5+OoH2UB6Kl^A58Z3M1m)k"CJUo.!1IZ'WK:,T_pJ("8nqfb$4nraE:=-r'diT6gp+sM%TWQai!&+gL3pT3sR$8*)FoJ&!,%NthaL,3SH.:>AqE[!b'.`@?2Zm9MlhXh_p(')n8E.39P(O.5p>_MF\nk[VW8SA-RlTT;P>;&7KG-<r+J+kU#)R!gR(e]KfHQmX*T%9/1]4Y#eJs\VpDWm>QUsoeY)YQ-`b23;SF9asCO6d2#tT.Ju#nd&]1unIg8/VI"H&QI1BnIj@d_Ws&l\`4/>l17kOjT;N@aa6hd^%*T*rq$@-YE]p7s*1$3"jPu6PgXIOcU7FEVrQ%lhUIS:Il2XZdjV1V>0\ALGf.Dq@k&.q&#C[uk_8gb.;;`_I.^HoS=;&?us0/aWJ%4e=md.ssO,HUk!N;'fPNn#X(c5t'(,]YnLR0$DQ"Xk)q,S%bd.(/3!N*1H&uB7(@r_sJ[6F6WH+DV'!>mbA"MS]ilP3P=R9<l!4Z%SEG&ak2@j\m45Yi(\1"/G>UrNk?0X5j]LX3Be?kogJ0>h2llhu"95+F2G3:^Dn!=;,Gd$B%+#lDlU/Fo=F67tAu1^J8fqYirj[3<%d'jNDel&CneDAqt;-6J^UsF9tTi:mf4'k!0%^59,/]!jK`mKO2>Mj3AoLc)W7"kES:+WBPG(nFO3N_XbSA!M5a5o0ZW8CO?IA8gY%4DZ$K;?_*S,9PggQXM1If9E4UI\/_R*A.p9`Rls``S_pD6&<"mN,04>WO82eLtH5*r!7U41$)Xf>[:9+FEq5jXQ\AE@]:K.dF_^0%*.;4Xb3A.cs,u)Oq&@fPn*p5^'b/KAoc'JQ*P@-Ea_MZ*ek1V5]16]pc8fO><`U=*_CK7XDrK4UBbf)V?<=)aE:!-?qD=gN2F[0q%IiUDtp0&s]&Nu!qg(#cjk8#-u_Xm*8Zg\%0<X;1u@,8fh$jX/SZpF,8QZnGdn4G0CL0'EpA)Xie3@2=eolLq/5,;N&YsNOY*3\S\%@BuIf%oY&G$T%DAKeUudjMTd4ekqfAT771Ue?]l*pJ.-\P\(HC)jfN]n7E7QJJ6mH]GA@G4%G_.maZJ,][rh-_TKl517YkHIh&@l%XbC^TqmI;)Lbp3jLRI:Ppc-ui_^B3[3IJ9I[M$k<nqZ2qJuj`KLSnt`P.\=6?Zf]<_DgV'.X_!'?%lT+DD$Y4e%+u[I`ZZsiPO,6%/mPu%/qhEESWe"-4Hj`$OZWp$2f@NiAgXr.IOea>L"kqc_-Hb3mEEg6Q.*94AU\W:\U&<W\!GYmkG#*"b8bf-DU'udBq:((EN^<O%F5km$o%`@sj'ch<8_oiiZYn[_'%Moq>l*]PSND3]2!.OS%Pi*ndO@8%@@T:=0&'J'\Q]^)4NPOtgiG+G4BJIKcfND=H;;3X!;60M%j'4Aj*^VOIV+Z8d/nZc[0=&4?q%^S^4Whr=#P/XN/'`3obhB^3='P9#0:V)!]o1LSq;g4+B)WoCVWUaXCYSI6LN@W&s105A^R\_7%RX^QjF7X-I[H=khY!2kX+28GNq8Pjt3o=,*.gpEdh=AG2HD7^Lp9\14+?,?g(V&sGI6i1(ITtGbDMAr?8SVtuJ<?T7Veao>_Sph:%Hf7#oZ+oc>^WJ1-)tWe3jjW8T6LCW"=_P8<A!-7mB:F]F(2qJn,&<aGLBr%"2BmNQ?AiWj/ac"@ZCHj>=3mq0e)Th\85>!.7;h;B%2j#J_p(f*jl?q[cq'?toQAbFTE(OUWQYNAg`RnY5\]>,!Ru84gl@*_KQ^<QMi]_j7]Qea$CFnTaf=)RbcM%^).]Kb4'ofh4Ca?2o%Mk0(Sp!R=83k?$Ui\sNseRNE0o6g.<8NA]^V8H!0[$6!kfj22?Q^^WDSa,H;RD3$3Wh17p0=>SB]-.->G.,<3Z*JJXbY.lRo(K-:%?;@=UDjF0b.PBm'\]*Zc#IV'H3bk6;)[a\?\!?!aPpJjLY/CuhfbNK,A7oKJW>/XjInR4NZE[SIjlRt2^%,WeO&ttE4S5rMAr,5W%,l+mW)I'kH?f`AnDl^JTCi/iq=jU3q(JT&Ff$p9l_2EP?Xm(o@X)7J(IViYmo!h/Ik4@<h_-CD#q*LD!cIS3!g@a]i[AM6W,&=B[%@Vi/0G9IN[p#Y@^AXuR<Sulp"c2705/$6!fMQQ^IgW(kO?@60Zlh*U33]bm6f:p[6c<=3"LrrTjm-Qi[Cm<3.(&,L3?QQ@GUUA`C%2;5%bOg-e*r\VVJ(6$mP[0aObNj"bP@ok$^$Sh>LnfVNa22q=c&[N45?<e3(@VMEl-TVK.n]XIlM;MS[4iMs`\bKD&WB`'hb?H65%3F="T3AjMP[BoJc<@)ob(=!eXCd>a7jDapJLeuUS8t=V\X]28ePrtlq9nB/K<5PFL#MCUgntsSe]tLdBn!GPV5#+5rdPn53I2^lC%JUT\K?Xd'!\H]sX.kaSJHb![mJo\dl8dg!ilUaNUkH6Td&Rj_e`#?8$,qQ>l[qg'Oc0@WbeSZ1,Cl;G0EGMu42CDc<F523g&`GA&%R2)kAXcV>mqPq?7Xt%&r8A-#4BdKA2o,"rM^0iK2r0qf?.',V:]HF>@d\+q[T8miCWu\buPUplUBU+Zs3R(fe>6bC-nMm5Hin_oB%RA_4r]h7ma4^+Sfj/f%-?8\SN<-:i[d2%8i`NAfm<W2W=@j=,Q#+;m2^N$;SRi?[&4%Vgu(QJrGP>1DA2j;@[en.,AGd:J`5$HZV%X5rph\NJ2Tm3Q*3X_bCi\>>&n.pHrR]9hpKmVQE[B=5+PIAU&'gWrq/a4ni`NnIRm5IPaDPD.&JZfBTRS`dU`=T+efhH\iq7ME2c%SMTSO2q'n2m],OEjK@$4V7h+c5JAKQbgKg83>11!eS@l>r:F*T)>.=&;l/6+HsO98bHFQR<E\%U]dhHUVlh!u8P=>,p?.^<<Epam%M:gK2PE>$mSOBX:5"_%IqcCmnRnbC]ABnB#UJ*5)I(ZW)al^c\/eqaKd8Pq4\rsXP#g4ZF[=4TO\peLm2rdmeIAYOIdtLK-[3+7-%g"tndim[ncar0iWrtm2Vm_>m+=9kXDS2a&OXkLTc277L%?Ss<glhTS36[<8)p$hOdQoKJYp8t*T%XiN-UWot_jmpsBU[",QF1e$R%D]NcR4^B(8BW;4+;K&0YMq7:;p+rf^Od"R`]R!Jh\plkKTu'm/41^S7c!Tc.l)V*-5$J[MeMEUhh4Itoo4M_/XbUF6G+.:3,bIUg%F$J8Zcb-)h93Jj+c=[Z3+$/*<p/CiNr)iBWMeR8#4<lFJLrajeNF04uNb?Il?05.s\.[i6(\P,XUKh&.]Zfc`0+,7fbXsZ5SpOS_%Mtu22I!0![PHV@:L!/$+ebl7aJ%TcHQeOU:[.9]o/+.,@\iQt]S6hHs;m4e'8rb2Af5d^8H$q&0k,tiW:?mQuG^R3HX=\AI<,/>M%gU3@OiAULV=h&mmVo?9PWgE04W[GE&q=P3gY+AfW\YmTPeb`jRnoS5b.dT:!C_su"M26WTn5*fd4GFqfMaZWGo5(2kG^5lBGr5,I%nAM@)r)4qi=+8SOe][..j^m`QE1%?1M`91oQPK4uo9*c`[?mfgG#;O)/3KlCHWShah-N";Fq1kAL!>Nl[W#6Xaqh)/_F7<aCL7[9%@]i/U(X:u-[D]7M?;'HMdONeNmT27=Lubr0p77oqM9Ur6F7<3]B<H/6j]ZqjWA$/M=NTV>T.@=8)6PaXNQl2r?GEKY29XG$LQtU4%r,Uh(Dk*AKp%caCMheLHLUHtoZZ<Q]P89-Um4'Om[FT+l27?EGU2eq][//QPIAafgQ)iN/kk%_^Bj"VSUm@s77PRYUS*NDBD&s]O%f4MFpZdkknb^;49H[][tCZ-K^ng;*;E,X?`lC8T$@[a\@Hb?YU=,$V(8u+$:hi8LBU4$Gc4%^GaichSF\=$f/Ih^sLea@%f&^e;R%qa89bi9W]'kC:33A^EmYjDJUol/r0Z"m^Ri[X;0t*RL'.Il?Zfm>lC60/kaB$/r>8FUI(!Vp.^.!X4"C*!=6BkQlV*F7.l=!.D7h%<;WttiP8cK`,6)%\eC.Gqd)GlJ@kF89>9,Z(E0;kF;+:6d7AAg^2tahK@(._i]7LAX<"$*0=1KK8U`d3GVa+:#L?V!kFnT]F"hRN%J_Q=#="eEYFkLO01p,JgQgGb)%<d)Ac?B-9V9aZ$_3]$)Fs?X.ph3%t5CNXFZen-&.4Y/&UjS7XE2P(%l#j?=f=oHi4#$'a[Q$,`%As]8&;$L/UQp6>#7sR`eO;YT[8Vho#j,K\3mGf\g%KMO[F]W8oM`?q\J4Bh,.gM!,GFL2i[g`!,_k0fI@0raB?Ims!aEW)SiHq>-%N7i7.#]N0]4X_g@Gf';+N?(<[`@?gH)n\p5"d>M0QA_&3:tmA_0?kEDZ0B1%ah(-NiCNYs76d)JXXnc-U="/6Ftf'=<'G+46#lY@%SH'oqn>2*TQsf^D$cBA&Su#cd3o4U",;s[mT`9>:on0o)i-0^,p"Q=q%g?K?&dm8C?N+26D3S"8fNqIb(N4g#:oGqrA'SEBd<6'<%1sP0=MHq2:Dj0RmWU+ujC04IT-bV6F$]Co5?tlgP!d\_#iQQZa,XhutYu&'4Kq,7J+Wrjg`*k1gZ`5lL/JTQs_(lAn/RrTsX"AGJ%5/\F%nD73*KtoZ9+Q75lY[:uie23g1d$BDS3']r=gYaQ]hE[Je?UsE*kfdhr!*hm.'7hQH+W[KBe<$C'6>sl\1'$@hFPB.FVShm5%)bI]-X:*&9XT9]qJ^KnIDYJH-e7mFZZ/W%(`_k.3Rj7XZpFK9ONFT:JE;o'4"lg)\5HUSgnB6sA[I_<0\U#/!,lZcL^"<5&g2JAU%V@`[bIIKG%@01-_J`c5p+$$37RSB_Tqcj3Y<>Yi4-3\m)'RX0Ld5KqrSibUeSc/$IfLL)B=#riaD;!ahir.T^p%Hh2HF&(=/7tX!%T!_q/DH%P5UNCa/Gq#GfZ.8u+H'%%K2teluG>?iINK]-odlja1'[eH,</c@"4\q6CjD2',:+kmM5/gRs[apqM^"+nY-R*o,-Xk3#%FOX>@#NmI]>HF,`khA2<A1Y/gH.US<kna+/P3L&BE4=_"^-4%5?$'ATRjTf`0\<J1mI9_<FHTq><aLc^CEeomP=L=X^_R'P/6nb'%5KNXgm-<V+rUi&ipU4i$a1[I5XM1!*O*&gnqkZ%[_3:.5!A[?7+0Pj4N4[ak/(Jg;.bmlae+'`2/5dj6HX"*Tf/=TcE\$ZZGr">n%nI=UO_FddT?''-Tq1_%e)n"0=,1>fJ=ts%<cBf2Ep3C^PN\HB,b1ZV!9&s9T'3]$kkNZ`p\lgSa20>[uV91/c]4["[X+I0$]PQe-%7jZ-1ln1`/[>0ciP$<<$j'UKo4K:/)K\sFggli\rV>Ap>l"42!5A]XK3Q2HMK31eg[B<okKI'@&B#rDTSqsGO^=;E@EcbSc$mAia%0t9B'lm3.Nk-%_L'%__X3P=P<GD(YF['k*W]&0.go8aaT:*TfGmI71JBM%XfC]:ttk%R>bXmf2C1p9M!,kX-HRZ+:OMs9`bSV;CK%d=WeT"]likA7=nf`Relekq2(5lT00)=&5oq?>O$A/U[o#HUFt'm%i4sjDJP`JTJN<[97f=Hbq;t%2e#7'[GqH.OdmE!$8`STU*&?%:aM+?pUIGjI)]*Ed_78^a1iDOI.DD3=cOT=V,VSO6/`3<k>F3YF"(`78iBhtl#1oeNuJfXU9M-&B6uE&psNI5R9I4#fGci7:;1%!%-hLJ(^0.U/.d9?HQ%B=tGnG^fP1f4ube;Pfjikj3EB:X.3k"4kSS4Md@J/C"f_O7hQ25);[)7gehIaJb-g-QESbK)Uc)bh)gkE8C%_Chc,E)%b--6fG$;PZXoD!`RkoYV`&8RUjq/"Hh.=C#949^/O+Xa4X2^Td,mfT`^HD0>>!!A=@s3]br\T8tBo0jAG<c'S'Cq)B^b%>PU@,A`7@H*_>aAn=9qY9.qqV<t\O4U6\tEM5@hK$4Llh+pjH+Pn8Z;!E7Mb!O_`g7&?>e$(JoW$X(!7YPZooHXL+O^n0:V7Fqpq%TI#_8g2V_#aSF<5)G$59.B/imecq*LfC[VJ^D4o,1b"lhpY"$iPgdpT=0fhX3m$4*CHMDH;'OH-$a;+He#=T?."!jmK`t513k/A6%SL3AMbuNl5?)fDEj3!VXeXH^BEP1E7BVsA*1HN2d(%11AEch\W4YA5^g.Bh\Q7HY+#nNdgX0r^9?/6L1+riX'I`sV4]up$X'(@Qr%!aE@(0-eG:DnSU8,(FNeY=<UA9=1iGJ6oh5bp.7%W@^(%o[Z46m$$g\(TXQc:-b0@KJc163iV6.\*L2ol$Ec%]\F8P0K^r]m^`+u%[X$LTK>]CfEsgGPmcE6I;8RT.aY/!F#Dj9sH+<u*E3cE=GF`A,f?(ATVmnM'0t:*<Z\f][p1jF!1OcsDRn5GiMfNBs.Qh"Zb[Pf?%KkNM5m3b[&d+&VOZqkP&>%(p->$k%kHM;To/Vls,-GGC%.S(7#E'sPcc^iGGkioP3g?g#6mO:%JGq5=!\7kGbI_KTp:mEV;)1>0k%&T;n$WcZgGA+tTOlNOQV%=Z?5Z&,NSd:Dd/4EP-s&0c_RZk5c['!_b?H$!s<"7,Z461ds8466B9nOF*rcKW;`NSA9Dk8937mSr32%G^/p52Cb3ZhA#&?I!WJBodq2cId]T4=P>uALq[G>HEl4tam-a_B]+1$SW7QG<VI^Bk4QAO?jqAaES25C,kd>iPm>_)[.g=i(*NE;%,)d&S!`_GSYj.Co^raG(J<Jecf!^PgjrAS+[_"Mob*bPZg;g2L"E)sMeqYTDPDrl[]=jt2GWje<h:F*YguUSijR-dUXQiQIC2nAQ%'Cl-(g%7b$on8)pV"fMYq\\\p;a$XWn<Ds9`/kuX)^GD<C*%/N7u$`#GW]M090C3%?DLUWpr]1WKE`J[qK(8(qQ7p9X5cZqDb8-)%V-g+u$:BsqTIVN?l'KlRNHBD&#$MGo-+_eo\cA$hZF4s?Ip#A,:X?DoLS?'`/<1Ho#u%:_F.]_"5O,=u<::HY:9FRTbTOsHDkLq(%-',.XQTiFp+gd!+J)gd9K<KF,eYAeZq7Wi*AL1J7:*,5tem3^;#b-#cBpm_6?R?;L)tWXjD6D:X<.3],o7PiT<`GGZ*j*\.4jG,D%Q,k]Il>U8]pZZ+_:e>E&W=t5kMs3YkrO`cGg)(gdkMP@eiQB&G7BR>@cZa5=Ie29u/[6hF[2Kj=D(5H#Aht%`1S"IYZ^HXA)9s'V%a'#&F*g18Jru.DbUKT]IJJ4F2-(:XR78g)0CG7+u^Zmhu4*$on=1\"Q"U,ZXk(Hga>H*CFk?5cYHWEH2.Ki?T/g%K2A<!4jEcF6h%YE28R[tK_u6dOR!G813?MV#%jB9-=fC5u:2fX((n;mI$AfsM.IS9ZpPj6N0<@%Xj9m^*Q<B+:Gs;`+Fs8KAU>ksVM"MeV#k:>\=D%9JS1I235@&SCPFHH+b6c1-jGk!3U_4<;6[/Y8DZK^?[.g*W1mA3kF)O(2R-[SBtJ$T.EM$6$UZs*hY!&8&@eSRCl=\`8VGU<)X=k%Qd+&3H;8@Bl3<++l4Fe:_tY]7ltmg$cL!RRWaTi=2j!^)!?0/KQX56_[Olgo1+_)eZG$mbhd5`tRW=Ks/DC[t@Mb#kFb!GQeE\]`%pFN@ka_mVTmp[]7jR2.<Ed#57,Kj!Ed"r]`DLo$]b(7EQ'TuY7CjF=o@gqG\rKAdL*_3mKH1ihebDpe<?e*5mK=O^DmF^-)@A>;o%HR9qhqYmsN-6c`Ym#S?sGI@67oc^sKNns;J&+%rR;EJ.dO"X^LHe71IWR9JZmK9QbClaWPC>nb?`R#;KTni*'5bomm8TLLSVi%mk%7D'PeX!OUk:Z^)(>!>.R!Pa,uCstDhbDVC&^,])q[i@WGG`WMJ"parD)LG771?I)/ppV&A5jgdk@LWT!2O]+A,Aia!E3Fa6^qKWQ%L^"9,^?+_E#BSqXk_FtG#C].#.sdq9T)_(<:LDt2mIg$g+'5!_4)]6]<N(SuRgY[sN(Y0o/2SlcWt0<6#I^Sd-HiYJB@#c7OjtWd%n+X<(aA-L181hd8fYn^7?00ZJ[NAW+4E7,'oYJG.S53[9ak0$2]!lZ[e%6O!96YP-Fn+DL7M[%<pSi<,Zm/4`A$p*i3:T6"SS&jd%*$Kj_<uZidJ6hg#<)-0,6r=lb-$alSDC/\)$4Gu!T1L(>f?W>]SoSWJVu--TV4*Er-b_\jju/]QWC!,V^n3]ZLhrS]2YC#m^\HAq%aC'^B0BO&eEp;c_`JaA0<c4ZdF^adt/!1aOT/;>?8I#5K`@6O\^4qUdoPJ$X]Wp!!^U:^e7AZ#l^7$T'd1*52fBEJcL<n9u\(NZA%:K5G_E3cp#Hr`k*lI(!fB>AG2):ZUa2:,ImFGoO3ZrE#d[AOfWK][UglaIr?Xt2a']d_GXLa-Lq'b/4YIai]/JXsGNQB.)^<]]=!%ig]SP.Rl%RI]`])B((d%;T7H\/pVg]c:Q^1CO31,FRk=TGnT7&'d`L_"l<\*N>.=;Bs.3ZL6J6c=8/l?QO6pWVVaFV5csE<$7hdg%AFACGYh)?e(1,K*2>*320BMfMl\NjmFr!qY:*-gK.)X-Hp*9GFcZ3Oq;XKH6fq=G`a$^^om7Gh5f`3?oT#qlF]f3^fm>NS+`p:aH%/3I_qp,9)2FQ&Zs1c[4YmmrK$C2XHg_V`IpK@Mp-qci;ob==*FgH=MH7FbZG'7YDnTp"6L_$%X$cbUI*arYIRgaM=tP:%R%`d6Jt%Vne/3?gZG<[W\*Pnn%`D.of^2plDF[JKe31+`/WSiWr9?_0e9e5??]<oJrJdT$i7;Bs$ildJO#!c"=AU/O%,&b6Rg9ga=2ZU>X=9%c=3^*>ptfVa8&,gCM2IBBO1AM^><Hf6X6urCTDj9Dk+_;B_,APg:LO%[sQd#"_Dtb7sC"XKTQgX,/lV#SSHneGGaDZP]Q5=4]u)R%0LX4?]Z-A,:$jB6*C)8?;I>2I"@UQ#@QL2RX2n7%"1q=:;X2I(Z@>/uH_"\Yro"X+/Qb[]q3<P"gc;D/&aZB<8JdR\VjB=b9+Ra^%e+`a,I2oE.`W:&0rISlq'lVC?0^eltfTnHLaeN^-:-E.qO3)FV&aP&)3_2I'@cn@<_8_V$pB"F4k5[R=QQ?&oOu$^T.@kJ)8$F7u%$SXG:H!-4]._WLiC7@M.<V6bO1lLr_R;&iOjbq,m10#_eD\)+:.^@/p#':/sSgn(8M>]P+[asnd:`0\0V40ahJtG]./tt3o,`ffR%nq18Y]2%Ku&3H4p9'1<?-gBaQIECY4%H18NffSNj&`KpD+nJ$tMX$aud'n3f(t*EJT<*p)CL6+&0HjWIjP_8fJ)Z?Je@(t2jQu[_%n-`>eb,Jb48TGi1KBi]]Q#Q;UGB0k5/>n[9V3(>XVYDk<Kcmnm4+:fe_t?%Z4rX$lD1K<+On8Ci[;V24Y-]9U^*9b%[=c+\+I0Xl%POrpC^>-,\\teub(YfC[l,*n95%k#.^FAW1NI7l5o>E83k]s,'T?K)?<J\d>>6+RrZZH:O*J.WYe>C;-b[9^m@-a'nLXsWn2Pa0b%TWoS1C9bLEOn\/7/S2)Q)aqe^cN`h?G5i`C@2;>6@UOlk1@jqYYJk>S?0jC*m%KM2i.Q]?8*W8E>$i%>`JC?!jn1LCQTQgi\!'>*%bA"olLO3+u6T$G7.OLV7<."-hm.PhV_,_he`m7t,]e#6M*c!$k]QRB7>4\T(X^-)jf&aH0:)*#Y?h>C^g5]0k>Bi_4)jcO^WL2R&%HRa-c02H[1%/O6V!<(oUOZa3eZ?D;AKOp7oc$@$Ogtkdj)mOW`0/des>H>W\dom5#K`0uNX>Cb*+06ru91u-M>p%*uEPL&4G77a;%e]-1Sd=<[LPtH[t+WKRp<(14SEI^So%ONth\$pM*49=,Oc$<ISXq9Fja/un4&lVjs#NT9Dl9n1OH2`eddR45ijEKH]O-7J8>"c$`%n`%RQ)KQEo\`c'AY'fe.P:)P8H8Yk9mtCV^]S2k4@&,1@Kmt=O@#ZO?pL6<09[_V5[;@p(i^(9"f?"Bs=9JD:n+i]'G*U;"@k,V/%TJajA3SQLH5.Wh]h&5*Z5Ba%tn!=NNO@/^ARcnp$W?mm;;g63th#N8.XTR[CYiY5FkQ)'OgMoEj]!?g=XnM0]LW27P5C;k0eiL,g%#[`/O!<WO=.gM6R))+'`9N[2mCm^X^B<M36W`EfTOt;C]S_<VYZd2dXBh9>FX".9Ej20Rq#J7Usa*fod/$7sm9m4u?=V?rpJR<og%f(Rub(\Arf(Y^9/^cE&XD[#[8H#=TCXmLVHDm;MD`B(&[kSFGKB6/CM,59MMNV%O08NYXS.)Fk(b'U7h)Q6Vp)77q[d0_g>SjW)D%"M@XuXF=.C[VAks`JX,,A#K..k"qH:>/OH&&+3ZVI&cP8c"[uipS$jJiR\1\`-p3MfQ^h=^4-)D%H9e;k8.GRI.FnaG<#b1ZXU$'%Ch?HsT]R-=BE#q1T$tjll7\Fjr7^>fT/;UBDElaBog\>/%,6>=goW2Hmed'Zj\Ph+Imr)o.<DOET1Ch<NE4N\=g+n"qKXU%9,X,r%RK#Ac?-;@Of`\9LQ7[_HfeTfAD(<>.<nlV$UMfG->aro7rjR(&8092-qT8?f)'&o(s+N7QHGE"Uce-R<G#BlLCNB0#Xi1kaB3A;$%/N,l&]N=QeMRIh<jO^CrCARi#loUCB2G^=fWWZetS0p,0T:<\uC$Y=o7DX18kp`7&NTsM%&$sq>^qt#>!SRM8;PGXJ^cs/djSDp&%"PLBW!iPVTGP/S<3VMNaD1(27m81`4O%]Ln.];phq#7K*P3KPq#A<dRj9B.mh,m\nMhe,V5M9iO\i"jG6)@RTIkBlfcA,[NG_F5b%cQB?/]q=;tHaeQ3?>9AuFUBcO&#u_\#EYk0s4M^IkV$?X=HLTFVf.0Fc7SD>X3YcLlq2B$JR^o;:dcVe&f@@1>>]>3>l"/t,a<=R%Kj=H<8&eo!ZF%(`3tM%T?h@`'/g('lC4FIi/'(W3*B99r/'_($!W1SL1>V6?,n$Pp5icJ<q(7rWh`RDU;ibBNR?ni:A3R>G:mB^H%&npH0$<*ntBR$AdF1WX'DE#]t3J3$j4E`6ip"WUFKM33Ue(STBe5KS?4TG-oNlt#UCqKDq\NEtGrTrp:>&2g1g3M^dIn_ap%YTVJ%lAnbF5"j?QC9j;];gM>[Mu',5jbb3#+J?KA0,8@DT;;Lt:PIBE@l9D6G#p^Hc*u`"]?9NlhV)04Z]V;\<2WN#]^sCUQ<(.H%a3!D%b[IIU?Z3TpCj2r*TK<QM"A^0sCLE6"\,*"JR04.IGQd#uncJ\t_7SOhG,8LmR6+2_,]h6!Q"9_W-mf<,jl9mf-j[rme&u1*:cVJ,%dT4lRcP<d3I3d,bkL[]Nr"BWn@WkDeBJ7>iYKYF]1Qa=1Ksl@(9OX-bI.k"Zl*934g9XU:IF\;"i$NY$3u86?U@F^WBdW"JGf%03%:$ME=p5X*nq$,bAX7>!up.i5$RG*s';@_.Q`WMIagYB=p/M1Ml1\$)")\%+9Ut'jFdO<\NlCRq-%3+rJHhI>Y'Ja@p:>>4OUqf9C%`eg'RKrqbZR&RLFi'E^,kBca+T3jm:G(4FgZg#*TrC_@]7*6N.[j8B[CUFDtAnI(L\(0D&Q*YP*;:0Og=$#/^0bUJ=%s`.RBWXV]%c[@<ccoFZXX+q/\+>fSD1NuY&Jp%.Lpcak@LNb3B;#0J4ebSqCCXCo5GonNXh;cos%4YuAmcrXl"d-QH<BK'V@5IkoWa$u;`M5ch%TO4g\cp>'V@<':-e9`Y]HhZ?36Tbf!FM"-8q::#(Jd1VeHrV(nK=2DlZLf<3#Hq.LSE1ODNjaQE"]S[NA62R4SY/9&L07l'#DITr%mcs/TEHa-Jd'G6rERibR>j6@*\!VIn*?PCn$7^'Ps19;W<c)IJnaGa<n=WFr&oc7S=WB9Q#N!-`[]HYZ&\L0O1&kG3HKE?hoW4/J%%B:GU?]Wm5ouksAB;Odl6MmL["q@"loqksN4oKM8:SV@sK5P84c_5uo^>;i@63b-E#R:`u4W;hEaZP)4$^[=nO85E`5n@kUMkPc@%?a_jB6%^?t;_G)enbf?u#iOt@bjWC*]*BR"d,VS0)*6tYZdaAt5ng5J[;H>l?h.sQTHJMdTA6RQ%XM$eb6AC_1`;(^\QSei#m'Ol%,$aLTAqC9DhYI%h>$K,R%XReHgnR/t^\"`&I5a*/)E)7r\Cpac$6F;%2:K6@lW&@c_C.6WrM?0@!8(s2:UYs8)mhF"e+=]MEqf=h%6GYs/I>;EIAheB*q[Of7%(k<fYOsfc5AL`)C1]V]W_[]QQGmR6q3?'F4(tnRqn"S8K,36.@2+Vb[#<&L)6EplY4h_%lK+qc"tcb=%Goq9pCQ4m12X&];_M4Bg*p"/Ab91$KYbceHGU+'sp=p#agA(=Og3kSdX?dZrMVaW,N[h$=,oT`8+19i[.#u0q3ci\Imk0FF#lR0K%S=;_@fis4tV*=2"?+]tnb,+0qi27:lB_'hRqf3qNq/7Xk,ckA8IR9XOYDAb+mS(u+fRZLURB"K^n7`GfC#+2NH=L!okC%#"h0SqG%53=^_jQT09hmmL$^8K9E[sic7ETLF9rd&uF\[li[h[=`+ZadQ[1"-MZ\g^l1;XI^ar=+%Th/'9tr6C'[h>FUkTH=sOT,QJI@O>Bp%\AG0>!/S%:=_BAqrD0i3UWu;V-04;gqRF+YZKcf%5ce85T$2AM.j89/ni'S9n1se'elq*F3?r0gT5O*"7t0^Ye8leZ:LDu??:bKL%qYpFrG^VE#T:T?Ug9S%a#_:Q-p;4Z6ri^7SO)91[n?d6d/PkR&7Ms&b:U_9-dlWW,?iL_@T&sD2VZWQg:A,`he&gutd*llVq.;:B%P#qD+Bma7RIkFaPGP3NTpp?(fFk:NfHc`>aRetU4JJ";Q0jCt;QN"a#`G-R.%ofO1L[!]^L7R.*'U/@HrWuV@4@&lA0U]Yrr8Onc%:ods(ahm2"l=t5sb4=^Gbi`B!`hTg'=)#kQQj6X\oG8s&)T^s2-"kSmde!$8#%Y+*HI(4qGq!*E>+/gT/MPQfoc0#T[PB)RP86i.%">u`OQf.Fe.[eKL6)P[R"lGu0PWLF13['--BFB.39uru?f+EWnPH#.Wq6cB_is[Da"uTR4rEn922W)1*^#B8s%V?A'*l*-'qqRhT%F)s/*THsJk%&uLbo`#XgW,d&Ng+,Ch#JbhCcp:8"%iJ?960\Ep*>I)a)7C25BN&"=*L()lcp=qlkDXQu#2jmY9%W6RHRe/D>+jj=%QaI:W^CPb)+8k9Hb[[1;VK\>i619pu`kU4*]m3=loE&+]Z&8&V(V\.l3O9.lWhKX*:11=MHa%6^Qkcs<ZO]mhb$4n1KlpI&\#a%2%I\/i!]5p6qjtEac*'3s3R-)9Kb#eGucpsI2'UV.^o^l6YiBK-D!8/L$)pIH=->"b]%=CV<fUdWWXfU#Ngcn%?X.72=BA!^Lf6?Dl%m?]@*k>#14:fAh>#Ecit.X3Od0`P<oj\B\rQE*3j2ii.@cT1&M^KGbY@8lG[:C5AHbX.p#@1[!.(S<^P!PSFN"EZ<<l(<B1X!Toe%It_HRZTVuMoM=YW(;53<q=p&qGd;1s$J`JqQA%%eV[6Vc@Q)7*-0"<"oAF+<@!TAif4&lG*/O%#,J3GXrqk3!43B6%A(IR1R@S7*%3]R1a/AsOSntiTe%QjOnXLm?1_"*VZZi#T>oT3(HqSa!'XFJ=I\?:b_X'X9>JFdt1Ge160gmk^(Z2iP-06_jhB1%nHO8iJSB%)9/%=[t&gdmpnm:LtkpC%CWMAt(lIE\MYF=PDl\?pN&c)7"Kucr>\=cHXbP<Ft<+<Pcb*QN&-e_=W0UD@NkD>1%uc%f,]n(u]JD39QRX%q/';L?@Kou9IO!s!Fd4#*Wh_"4U5h//tEB*nXjRd,,d"Oqf+[gS\$uJe'ISHe*ZW^-W3=%]2$7h-"JCpofW,lg+2<[fLr%:&E?NW%Nj5;MO$s/m$lsj;S`q_g\fuF$YHu[+B5Y80AddM4#^[qI99jR>,C#@H8t,Ag^D%Hk-*P=TDbK$CUM_?RS\`h@&E;`hkp?J/&L%bp%Or/I_!keNZo[;9=`Y>_nI8G;KIbihf,Zrt'`g*-'nor2h@,^rSM:B=4RF@kBd[a,)P`Y@?8Nk=O9kr3AZZ5[l5bN10IO)6Y^[i$m%^M!ROOY4ZQd<Q&U_61\W`^0l7$[24thl0BSZarGK#?c@Cl>.;r*sAi7EnsP'o?u?t+QfM66UT)'CKZH?<DLjI?H'=+8#77pKSYNq%,9?fcr5KLc_s#b1<a5Ye9N#R"2=WCrjklAGoip+.X!f?#07*\@b,O?nj-pM*#YlE[#s->epDBn3nk+F-fM;/F&VW1X3Hhd*_-0Lq%6j?Khpa7e@.ULeKUkr1bMZjc';0R%-OD@llDj4't8YcE16fs\VN8/eWf)iLnpNaZ"](Rr$6K0*&0l)#B[uLf5EsSNMIluNM%[p?[%SAtl;3IFF?!YD$na!Ld>lZ!5]/&R#O!*J.6f^!&Dr]3);[mgM3%hF7;"YYAq@;UfO04"7B`1b`eEcUpb2UB*lZ"JaSj=fhtnVP_-%P6"_J!Vb;#@KB+B*Z6qchg<;.J,528\FCM*8IMgVq(3j2rZaV>/HOqn=l4%c.(*KK$@-dqbliY-!@cbi&k+9.r"Aou91pX1EV/3<%o>X6A>OGiu@^(FDI7&8G]q11h+N-"MSPUhB>e?%ZCORe-@,\ZK5eu/sLTru(6=if?:70!IKG8Y^%:2mM_m'@XV)bULVI,]31dHjF%%HMqLd!6K;]?MIj<&>O&[4$K@H5U,s7W9uT0J^5D2hCS+l0!QtJ5-M8\dNjV0Dc[hcP%b<I$Bf7?]^oAL"Z;H$,G/iTA'fB!,TB1%J/MlMN$ldmD"Lhs*)DmFUiT</L:sV9K:l0+ebJ.(YX!ksU3qgs,RRf,A*9^#N=g0@*HkG?G?tL.>HotmI%":DGcq%+BT%*/L%]?p%di4,5e;MpWaE^40lmLcq#5.!N`;TXnmAZab/AC:\8OII2rm&1U_(b*tUbeWG]Qs#*QT)0$L5-q7MIlP!cGj6N*kd_K)r^Dqo^RWe%o$@R%J:6D4geeb;)aMf2>`*,lb7Q$,4<$"'>%.Ju6a<pR2FXr'nCX-g.>l]'Q,]/TWh:IS9TO\sO![3@Na.H"!65<<'8rS2;?Qe6%T;!><Nno@LcW5b?T;.R'7DZ9[GJb2M+:[&A0otWS=A#i[_4&G-.)7?9?Vjg;fYd25=/X*VX3gs^=4kk3*P$`,+d!f3h]FE"@qT]O%6Vpj@35RLAl@^[I0b-"o(YlK'DHr<oH3k;GCcXIB5B0"4I(f=B0\"DK+rkY^grTlrn4&;r^<Y_?r=X,3qg8B&4Gg+=-W1&WiT9gd%Q47G'*5K@!bP0@`T^p`r@kkJ:F>hqEiUhPI=$+llZfBL2':0Mq`PkT(jSKP!fZEXRI8DT8`Q%(q-dfR<US3G$L7RQ\.J+I3nj6Z0%ol3>-$IAUZ@:/@o]HG!T8a/'h)tK\$DAYk,l="#N^Ks\[5;S@.i?$&OMZp*fIYk@+7ui)1(XfPuV"\\\=;@Jb2+D45n-'s.OU?lr%:s.m6[*78@V%uCbDn8fClTr@/5"dP'.f>CJ&2elPWG#u]?H.(F+`f<:PV-/IL`O`AdXraqpsl!6/:B?'qkDTWOem*p)QastO1*$Q%^14C5^ju:\Y's7^ZB1TqZmUY)#/#:#/,7]\atI5VI/d!M=RnpSKjmG!cBPtR@5m$uB&K_$!HKL/$L("\j)NamM,Z7D5HA;1PQT-h%CLd=-S)JGPU,2"0J!i\7*H0p%c_0;IbW%V)d2@$ONDC[P/ppL>T]8f/=?1KN)0C87i&E`=d2@%tI'GDHkb9ls4P><rjNp>.cp_RT%`m:?:IZNJ@-BLS2SO$msEaQo,YW6e8M$f2spA-:0c_9q6,l@@ZJ/r6GmOO%GbKG%eGsJFf?7m"3;?9_]7Sa>q.Et;\KkF)=*P^l-%&FIc^M$]0*/!+&kouE6m]f\%.1d<,.N8Wb`.F]_o;=cU?r]%6#bTsi+,#35n4FC>VLN^YUoqc0VJM2'smeXRV][im96NK>Z9"$7j%Z1F"boKWM!bk!SDBl7n4*/C[BO+ebD=hZu#eZV`DeWX9#3#EoO&$G6G^:D/nB&g3aXAkpEV/^._*^b15OmEht$5*mV3@NQtJE&kS%V7/Vp;\eGm7EPJt!>FF2kZ:,bPV>N/4,_>0)PGP=+]t&\)KaPBc7;:>#3k2'a[9_;1r?+H5je5^B-TIV1m&,a5_fNMFrG?6(k%j$%TV]+0)&Nq*E99"sjt$l"0p=^V-^R*Jo48;iOp>T3JR/1A97k(BnTiA2_h=NRjm`eE]s^+1UK,6sI``U9Do*(-L&NNTa1sc@B17"Q%bi>05`,g^Tj84YX*f55-RmB%hIBqrGSIMNL^ieb@e/HumJ1:hEk/G!-c,!9M_^r)H@qH^:KtBZ@JCoBM#gr7L3O4'rokn-8e'H0e%qBGH?ftT,?X"YZMd6?o*>msD2`(C`k>mqu<LEcV.@-6KFH,/[)X6dBo?/HuLE>PeM*%6\9Q*]_cR&YUk%2KV^@V[R3oI_UjcB4:q%DR/.U'!CbX77=LlSGbbC4M;&F1%sjsU#6cF^%m$g*//+G39N$W86Uaie[m?C;P]jn'p]XT/4YG-qKrFC^^"=hFSaWdArB?]n+C7?%6KuTGV,W+12Va/(qFM2WY,lq:$olKB&#Z)qjHoN_br\:'`W]m;788Z/dP)FS>YE#2jDj,=:8u"*b33dO:PoOe>^7[X[E+TONLnH?%,L;fcd:)?i*",Ec&N<3;>B"5)A,,\dO?IjG#dVMSfIgX/kD5W!6S0ldYM9uP,(iI#Y!ls`H:jQZ(*:c[>7g)siFut8>@]Gf9Un;)%[)0ca9T8$P-g*WJ4U7XTN=f(ZjgFa;Y5\.VTe>[X#=ZcE'UG^2`Rj8I3JliB1#/R7AO+2`=uJmP)]$AS^G_isBB(R\3TDa:;^3JM%L43tL<AuJ)-7&#)7-Hu("f2p*F>762?*%_Qkib=VX,E*,1,(fncO2)OKc<;_-J/%pojHjKH(Q1DX?Gh34G7snZD`/\q"=L'abT3R%,uI.eV"<Qb_QhbhE!%:`-^5-3&ZW)[B#i#KMjohi?9Xl4>B&XsnE>80E,%DTHoQ%Fg2O#0nak]DefgGP4rh$bLQOcRZ1?k`;3(S>%ph4Oc[&!IGd>7U-NT`7sjTqS7JW`F/YK64s0p*1)j,K6>/TWI@IWmqUOfh%o6K=:RFn?L8B?[XsX;@N"*0MZjURtt9m"7((Yb)6P%,,O=>f*edZ213>`Y2>@s.;Wr/#=K0B3ejjN"#?S`Z&[c[Kn0+;7I9A#`lX'Y%&'`.l*7()JG1a4FBF6?i8PEK##)_G+WOF-V1&K+%Ts'f6[6%JTUR/Q2,Zs>E&u*(iQ++P&J*k&q9$H5iE]tEX[LLGPN9>]-*2H/:UgALG/0bn@RTr>IjnD.u;T7l[8N-`-;EN?3q/Q7N%H3pC:_e,]259j^%p1L0f5N)c7L7&K`+SX^n&MKL*G<gb;VYYn'I$WX1A%7WGpDq/*oDf(22qiEVWGjs9UL^laOp]gM0E3:4/eKba%Fj*fE+2gAB9e+p@]eY7[%@IRD7Z!Yb"B+46L^5LKDTGeeG_.+8P,cLjh!-%5_IHoC-U>Q3)&YWAD?u:4gQsUd%AoXiio19MNFQTU%$5pk,?LnpV&+q6fTZ#Ai.4D,Q\?!tmFGr<fB/2h0#FH.fa8n7TA.5JL!SV%-`W`"k+)sf;>j?ekrogc]`\Ceb?>8$'f?6+rLUC3g%=t+<Ye7Ka\%Vk+\_;XtJD,,^jc!>R4^=kQ[Cck8[/(6AqN6'f?YpUUu,eIo[q.qThZJ3Unfe.3Wng&af/6":JHs()WL7OJf%F%!#%rn]8`Tn<[]+hJIEW&?H4mq8di1[NC21[Mj:n3NO"k=<6Pq$an2ot05@Y\^C77'bRM.WL)e'>SqcqHPs9_bPWs9.o*go$0!&)0XJg%:=2#!pHH=9V;75![@*8b?+UP=G.WUB/oF^Jb-5[Lc('OtC:$l#cWcsE62)Vmj4iEQ%Ni&a5AGFeFdA:CY^]fDGe_qnP4(O<Z2Q]D%WXtpqiAS<P(?7Q.fYZfIh.<1^l8-C4ME3A[!-VP*MRdr+D.An1#GA(7YE,Ut2nUTZ4]]`\8i;B2qSd/?[6_dMA#K$""62s?A$/;8%8M3R1%BePAc:r=cL</eFMnCJl2OqEKcN_Bo7GNeJ"On"oO6__:pMIQ9j?-`<DD3ETN0mfE))kIFXuIFVW<%2P`0h6,G0PFF(JG]$%V;P1m&^JS_TR-G4_6/#h-C[^G1dacbSQIdUOL4E1R52$`\fcW,R&,$!CcZHJNla;eo&N?pF?opMb[3BPCq@?oC7]jmWHC"%2Vi%I%lX@-aJi#=pP:)ShQOCm2@qU:SflR>]-r)1[/kBmjc/9X'RkAA\j@u"T2I4(*ps;Dnnmo)kJtm01SP9p-]7KhX=P7d^\TEu.-&n-`%(R.SUgatLjCq?;<o>Zkc,+C25QS)B<)CM",W%40@3QZ*K!?U)(A^^hEdZ"^@5r.Cq&<!/T(B\+[aJQ9S%A-;VE3Y72dfi>,^74[?%OA-P@Ja;9c<&S#Y/mV#<dMUYZ6+L@=g?U`OF@!HZ@J>Y>SkU$.6UA!.j(6[CjjFUb.n@[X$N`eJkC(Qj3mWEU2=61@VXmMrYQ>Z'%Om5Tr8_:QQMg)@NIg:cH^@\Y6kk&s[3=N_1:OF@$&RW,*HXC'?^_9e\Ljrc;;##_D5/%'le]!6+mq1=I37sU;)CS__lB"D=jVDqO%mI4&[,)CujbO?s7EM*5(iB_E$,QS$BWLq&SQ$;2\'Z3Z0nL$5KfalPf!^+ft)d\gAjKFMR"rlNi])[Z[?Z\6$8FBf*2oIj(@pF(6%ppM_n1HhlqAqSCPfJsFoY.9H,T02O!G?2pfoL3tD!>CpW&:W(r=I?rRfA(XrAMrPC4(ku(YITQq(JZS)j^uM#L9JjYj]Rfap0o>_%Z8e[oTc9<+O</a_Ge7411rdn!F9=-GL_FR;3He;_Q,OUcqDZF-IA%f(n[$XT0V]u0qBI.B@j]%1bU;+m-Ul^4O4EZF&??b=d:'Ui%dH;;b0gTVrd81(3N.sA1s&rKWG3I<m0(Ue2f+m<2`M;m35@`m+Z<k0p07[6GlmFoOC7'>\1R#@_P.C]HBnD2L!<n@SD7Ma%Wdr`)%2*?/<bHHkgE<;\&Z0iIgbXK5b5^6\N4D&)SP#EVN>YB=28aeOsO.h<:!LGX^9Op+,d=(B*PiL(,M%"BB0Kf?)i!kF]T48ZC5\U$J%)B(@%EA9P>\/TJ/:g]dQO\uFWQbik\\GHXJLIS0Pm)PSt&aLX4@*O958;pN&pk]FNhc][b3]BdWIh11fR)^oML:cF9.n@///gC%,%6MFNe."^uMiSY[CiatB7GJbGF;r6.](?%4-NGqhQ7.QMRGME?>0;J,+]Np@X$8Yq"_qf8J(3L9LYu[BT"2KJ0/1b1=-o&ceICk>U%\SA4ag<T>]hdA.T?-an9f;Au$I%3T6/bWXXZc7g3_L>soeqqnLI`>'_V-]n^_@;jhIPN$8EVTJ*6GP<<%CKtkEIIA;iBfS;apOcZ%'["C4\hR,a@Y""`3V%h1cN1u$e92(+YtLQrB>Z&N76iDii@II<cpG=2E$l_TN@B[&!BcF\#r?!X+r*I%F=/qT&sH&1r1[W-=QmqJ%XVM/uq&LXrqX<H+S)e^QQ.)XA\7]@)*7np[nGZEo*fHZN=tR`d((Z5Skc]%2SW-R;cN>m`H=IRHjUHCk,R3GAi[&lF?h`cf6$,#Q%**;n,$Dka:+ZP4p:,I=!G.V<?`KKj'bPGB/]Q&*s40Nj0f36ne7^Z.,Y?!0M9ap&Epp(c5lHMCN-ed-q&)5L`gI6'Fgf!\eigRKm%Kj>a^4S`qMb2W@p=;me-PYE_U5JrZR_DD4<duB-G=*sW%rZ,&563btP4BZ.m6#T*q9r**ac%='>eUJ+a6E]J[l;(,Q:7p6u+dmi/%gb"-%C<^>.Fan<uIi9APc/$h-Hh`SATm,fK;Rk;9W8,/^n:X0&nTf?r3p9iGn`dkQ0E*f@a+u:emCh!<60m8Ac(I?9.0?a:nj<AL%H[WL58(/BJIT^p0&GhtePFXWKA+cd*[c>&ffqnG5g]XUY"[jqEL>eE;n!fqlU7F9.*;R*Mi/IqIBf4LL?Z()UF/Z=bLg/(-Ku3U:%,iRE@hh,f$MgNWKF<G1)Lt&;QTiH)NB"=k"'3aLKdl\Fs2CK1n)G\#nW_eIYN3'D]TiH`NdK[[(`lG"'+OhAS[\l$"Pa;:`VHMiQ%i^O4bRaOnh]OKWW=a-!*>/QjH4&.;68ulbdrHaL=6:gXQO'J7;^F!B!^97A%9GtYN)l%.Qm(8nTj7oa)']utj[WraVFud9bm(,Bn%>q<]S#(&PBbM$T3%^&)30+0I_&_^&fM-5?B.bTWF*#5@dqata1W4nHZrAh3Tl1XioDfmT<F!po]8k0rC)!na'2^1lr%qc0`,%OT)%-S\BX+g4Uo<JKuG&2a:Or*s9H7EB=cC.*$E^D]>s,a.\HjM(J#j.o+hKK%d/Fog1HnEdU(coME:UiCi]5'fHI[<c@(I;!rkr>;N(%At[rHXU,k,(%A^e'J`KYDg5msDpXA#0?Sf)%em(9]uWJ=i2@4YhsW?:`!.Om%0NkdQi+d/U_3^5^3&=_q9V;YUYMf7(b5tJD@Re[%b)s"1h)Rl9AL5@=!Z]mb4B*)(g`4-!)qa1]!Cgk=@F7ohAcW,':f%Xp2c=5>/ASdbo^L"sZN0%J!(Q4oK<kR<WMAG/\*,A.CGpUA%njuX&V0j8CrPM;(_D+&+CMV!aq*HrsM-e=`a9i_FEB*Me50(k<:G:i$l,`ng;SG+k\FD66)jE-6R7m@3MrCK2l(rddou<cbe5e3>%AET_4[@p(%f.UHIW,_;!ZSK'<<Z<O`?GC0;F'.#bYkRtt/o:ZtTtL-r79bHiC-rGQY@$q(IUguaZL7CD2ODD(YDdV-?`_?-Z1%AW%#jcuKqH::p9u<PBEN@tnR9U?uqF0-YqD5Z/P)-L)^"%&nq^]ASqMf0t*:dFN@/RBMoc&9?6bIdE`emTPIBVP$r5o=OrXjFVT,3\]%^Xk.8<kfc&Cm9;FL<E1.oj0k4[$15b^F20nN9^M7Hi:sBJrY2]?Z_atA9-Pkd^k5;gnF/r)u1sfhgKl^T>9Ahr;o,_,M_T$*Te,V%Do,'>qF,17j@u#W]me?I(?*mKme(Wd)0i2hi4b.hYFdUCi2qH:G*p@$lc9!OrM%9Id&aStn+@'0'X1g?ilIFjnfAunoo"7l#MeW(%b^Fm!k</t*l8RFFI)D6a#eQ.9r4E:6<kfb!h^J6qL&.sn_s-r&a1U"W@c;83^%[AEI]m,6XL.Ncp%.6_p"emlOH.;mf5F&kI)p[5%64hDQeSc)pnO45B)<O,s0e7T1p[O5m%/Xu9Et4m&1M-3*rM$]QLl+5\h<PlZ:^9u[*9CMAT_pBCbR)a)LV;:m>0KRV&Ti&Gn+DT=%[;"uSrTnXEi*6.L\;tP2\f#`7h['%a!PJd/FKo9Bp%+TXIECu8<2`[;4Wn5^_t2`<EUNLX[VN,t1umKZk=Hc]]@Du&@Un6[(Tk,-%q_I<IIaMoBF"55Cf?XQ(^0CP*eLUUmq@1k'6O;;*p\G?Eig`E^P9UnKhWi-*<CSD0eqYPK\,)ft15UAVU(_"Rjg!e4onuM"7>O[\%J/iR0hs`Bpn@a:uc@qAF5XXGp(O/-7>Q&$L>K48+0,c(*$G(4mV6lLs+*2*G&R!r`IBS9\R*Nm]k%i(Og5Y`5q?-1H9Fa["oUE5#%2QSpbYtr.+"tq1E/f/#3!d4p8_4/'M\gV0D-.<ZuhdiE;^K$NQk,eMR]@ZFB]sVDEDg/Ba81i'--X5l)Wo\P&l_Vqb:*MRQH8Ni^%q-s&F3k>6R8ZjrE9@IP*g;<3ma\4;ZqJjlRIsh)BBF!qn)u]H'rHIr-G5H"Fn\?uj03d>S#NF@tT7a&TkI73uC$YNgVO:$5gf/?_%QS\;GkC#:upa;4#b+5a8FAiG/q/09*9hp1%I[3mKm*fG+]R>:"1NQdbQ1*E#[d]CTW-,`6L#$;5Wk"CZ.Q_RZ`Hu/rBF*]7TlG>*%&=PDIgHosoql/=u/f2+6:Fl%Mq>Bql,)&ZcZ;eWYQ1'$:g"=$S/P/joRnu?#Dn<Ws)`'fpk:r(,>Pgb?V(96Og3I21h,muf^3?c2%U^T?X.5P?,h@BhAS#@;h*R0%W=$O(ZjN7+-/psM1\&I%e>j?ETel[=#Uim9;)tUNDlcX8@c+,DXk9Pi"2I4lAH@,&`cm%**9fLW2%amSb##no;mJ[Oid]r.jP+.q<;S&_gl_??MYj-:@'EA%:M+]6hR(Zmn-V1)><5$fi>A8=2(\LU\F;JR$$[Ph1d*$&q#[C"]US>e--%)s6Md6hP2(VF<#S\o;;m3d&X6_HU`GUs[)CcIMKbhaY2b^+S!?(RD)ISW\euo238PrAKAXl"`SrBg(O2;WkZB4FS%j+q")s0[/Y)%=1N]8>pO'B>BP+$Ss1ClUad8Y'-Oa[$%FSgkYF1`qqpo+C4Z>/eU,Nh06q_Tl*bSq\_%Vq>d+-4?#1n#0^Hu*Y'tcP>2)/"\O(&!%:+o]_?!57O]mmJ;oS?kjb%fd]!,S^L@R"N?\Hg_Xq1cm&o3YLA4:s!#$^bPf)i_>]=ha8OI:p=/S`_*m<?@Y877rRS>I1@3_+ne]%)DXJf$$JRB>310Kf]2kCqjTr]A1p_3M>+@QJqZ*J!"!#NqnfXpYEUa<l!:qTY8d87BRR.07%IdjlI$+.b=iD0P#H0%1Bds*IiK6Z%6)@8#FV.,H`-SoiQ+,c1m+Un+T6>'m4aGuNqgr)gYj+(c=ZPrRjg?:D>)f@uHL0s9YJ&.*=R*/crp7oo2QtDc^M=(hZd8=9LKsp^%,s'+f$X3;tWjVA0f5dW=D'>DZ'lN!<Z@6_1fL`p5(TFiE/R_#'.FR\nqS'Sai%NJen*14!Vbd4:422Kp6E2]Q,Oma+4\@[-[.3<*%qqH2.nVX@0+uc,ul2'))cah7aW4gJ[Vt0LL[F]G:A`a>f=[S;-%T;u4RCQX0'TQfXC?`#b`X(7Lgj^lEK>k#qe>o<*W'$F"6(hQ#%5A)?Xr$=D=,knu?8tOf6X'ht@0V?%umI=>eQ8::U7XaUTYZUSE].,r"/SIOHS?m^j$P"QrGcCltJ%6_"'pl#@Vjj]l"M^6\<_L-0%1(hjdDeF:7V43=+90)qe%pL!]n]l52i+s9SYWL;Q7-\gd/'$P'fL:HJ!pd.I:J214?IGgk:iKE.'2>?^7,^p)b=H5XqEUag;(;FO%2BGC9AZ2@PFq40&\4\.Spd\\#4Qk&<_F98T#tX?XJ+rJaR%JjpADbUM6n!!QTW*;pa1&Ht82iFE:5eq_bGEq4d\hVe&J&/9$1G"e%2Z;#7$a].p%R&#IDD2^SCekkD>2^YQPa\X5gpJ`F9\SJ@bm#nXN5[<9D=kTAGFM,[[KSR?QI^6VQ<;ntFfH!?raQQcmY`U33gr$@%gjHX6C3a*K1(TY0>ZiO*;Yok]Wn;]ff+9s'XDXBN%_1!K)W8brF-8Yp[(#3[B&;bDT^glCVE?68G"^/n%i^i"@U5_/"Ah`H\JIob%l:t&[lR'"F$To6\GalYQRMQp[`m1D'Ct=bLH#7nHc\aB:2]eK;B>h=?aV@0L'/k==<ht&iXBVqH;<'D1ia:Z;n`of?ddu/bVEB)#%^'lFa%W#Z_h@,+9hig#OY@S(\@V`Af=pCJsFcKB.19)h\[6%)kF5^EErS&kdcVtic;"g:?L4s,H[dm7)8(VNM/8[<bjWKKg_j;<e%=TI!RQIP!+Cj$Q/gOPPq(XK4Q^?M-/O1.!Y"m9;hKs`bVos34"$F*@Eb049h]\bYl5QSUCq(;(u*t$(`YT%rrekF+f"m*YsA\-Na%qT3*,9l8A0[;#DPrs)mpp(YAO*Fq]jEOs4Uf6prcWj?8K$_eU-V6kLp]6Hh_e'fi/VPQX3IqEsS!_3<gTolYIan31633AKo?(@MS%XuTcMV`j+@q8T4R,'ES%`I^4]GTd-lW9&$FR<hYG..a&P(Kp'(mm\X5B1i[m5;'iaS;iePOoFcomUA,Q/S4@!B+*7ABmam^XUeq!%i6=mXXI`raG,:R;TZQKMLNDk['hhS@qFen3jZR9aIZpo=R8eJKF/1orI@(EYi%\lGq7I_boD0/,QqJ!kA2YI!X`[X6IQ8Tp%J;jE%?+Za-QdAr\J&8oR+Ok]B%M17<+T,R43'ctu"3PU+\EM(Z2@('d%Kt>RLMJk&((c@Wrj8m8+MaZ'=UkSrlLuZ%K]pQ,VU7#Pf%K5p%A2"R^=b[-Gopo.l"OaIjM?e603$=Gj`'-nEQKekah9+E)$\\0.m/CQ%*`t-P:+`>IX4!+@Pp3i]NJNLqS8;1Rp!$s53>=eATRD[G%7<+hB`Osa<R(JJ&JCCqI#-g2lVt9_G0&hI<?f\1tkVD5L]l_unU/Tq=Fs4km6R!76TCS0$Kf7uZ7W5lK=nTF/b.@%M!N9:2odUHl%dc9=hApbRKNACfoA)b!XQ5LdbZI)qdm\%AS=?)1_]'q?t%O`!i84X"r@RQ%n<srK2OGN6I2W]"jR(nQrR(H49.:4Tf)@<B8_]^r.%(Om7<\BFB6%$^RC>_Y*5*.3'D8KN7C>KZM;293;lY,JY(""B<:&B*Qp6HY?K#FAUdj!'af%)n%4e5D/Kgk>5AU6a6;7pH\?InJQ^%A`)oKMW[bmn,:]C,1Sc>>4VYApsu0cVkSL8ikls?ENON'_q]!&.&kC8O/lpn\T(_X33RNlEF!?ogMlkeS\H*sBG+4>b5"of1?5B7%oJZ&:F'`duVmG^`Ko0?Plb`#TFj<s8e:jrog?6m^roPH%CtJB*?W(5I[^(h'nX\u!>rp:?Ib?T2E`=g&_/K(sZ3d,:k1D3/b-qSl%q;340Z0a*rNs+G3osBFM_5qM;>'Ca(r69[Fl_nicAq?>X"*,R?!U8fWW6$NsB:9"skad)>PkEM:fPI/q>`T@#rpN('O=lhMpAjXh%E6RZm09nJ+`^nG`B2Dt',kEr*L[`XgH#cY_(Qrj;*>:<o+4o+[D,^%Jc\f5Rs)BoGWGP7mMsN<H@\h`VNb$rH_-$t5pO2DA)Qr`L%j$+9fqNI;K?CZ'@A?U@6l\GA[Z!*^lmb`UoXR2V,G2oa:Fc-M2W:[R]8aDCT*Fp)c_&#st[HR!tO#G$7r38QU[f-LhM-O\iXb.]a%Wb9LL;HH07^F@<Hotrpjgph\DVZFgRQDL(+q7;9MG?:M`^L(De8N9FbMnjmE3+MLDrFU\gEs%BK(9N)ECc]eQaq/S^8Ma_:%lt/H%P:9J,Mh\(YWpoei?US,G\l@E#[f(9705$ck+7ZNcr&K'8`-h5+0@co6R[!Vrd'<H&_DN<uT10TFSJK1lqk>4qDrrq9cU(E[[\F3&%,L8!n2l,2EV,_iUHe=E8g4BO]IBb'+<oje'6Zc1AIQ]N@5;uc8G">r_0"&X1fZpbCY"Pdq+PuG+ZFomY]8)dYMXW"L=H_:E><p%]%-!ea.XtE8Qom%Dj['U!(SZ^Wm]p@uR]S(2roBtncQk*uCCNo(7gr\q=JWLmlG,?ibk(=KP*qYp?RD#Va9[B;SP*t`^2j$_XIi[t:%mm8dn?%^^lRr1"[:cbrL?Dk!<'2Pn#[9IZ;%%bh"XZ:Ri(g1',9/Gnt/.esAnfDF\g'<Cf^!p<.\<_N8Ebe#+H)=FN2Ua*1:a("W%=-U?W8C?'Cqmaf1UNX9LL0SWH(2^D/63m'iXu'co`Ro"85-3H(4D#I"RpS?%Y=aP??7&snCmVJ+D=8K'IbS]#aH9,M[H?(-ahml!%GM[I.$@$'K].`s/L^'kj;ds,\8"enI@XcXgk+@7XX<(f+bH>M?)_ZP9B""(JI-Wcmq.%C@#FQ$2cSV)M[Cti/3E%BlB"8)8Du$P:%c5dnUb3=\&iV#)W82HlnG96Gnjp(It$[_fM*K'H"].^eI@:CXh+E?4G;6!81O\"T9/l%*<k6le(D`8NM+/A%NW#]r6^BBU>60$W9%&GSo0qH;J/.MmGfeW.*434hMK7,/4^.Fbggj^effI%H0^*q&cRL?)(nApq+IPj6P_;BXXV-=5C$52dNV\"?CIX4(D4KC%_=LA5A2%_!S>HC\>8664sij*Va]&e$+"T:jck(>C+T(.q8K]0<orI^d1o!kb:0-T?<SD93d_.%`atIY3!%.*MPfW+L&N&[oPWh`L<R4%cCFk%R[oma!Nf(Q5f^X.<ZKiX/!.g-cQmf:28$6q-?AkZMh)WN'4(_6'oO<iLVi/o>9B^)ZVClKS]eY^%hhGamrA14W,l8MK"G>Vp[aQ8%s4^`mn#e_e,2;Tp@9'maYFm7[ZX%nRP?t+S#*R$R"R^KCeMg+HWkOEP1E%sJm(1it"nZls6.:)/(Sj_ZBoB7\rA,4g!Xs.AK*\]7%/98?B7X(rVlS_j*^GQgQ8cUbRB>7HPL6S9R0,h^Il!8TH13i8;Tm`=6ZF<Y]oj8D<It>e/5rO;.++I#h,*-n[F`Q6,Gu"b/!O_J.%0e6B"AEMjZ*Q"^r]I\I$U9h@:=JG:4(9Y;mQnn^Z63H`8eLWke1s3>tAIm(\UkFFfYB)4,+28ZP+p1_;"59:$HiY;\'K/h'&DXd`%#OZoDko>$cGXWJd7(0cq_Br.'=&!!_0e4AASK&iZaQVi?^&2$Z!KT2*k]YcK8'4O3WbcR<Sj)hI>a_'g!OS5rM"dt4%TWunTpO;M%+sg;_^B\R=+=k+Z*df9o!QS=DY\bn/SK&c?S;\@8("eY1SB!6)-kU!@^WF^ej*`[-2batl*g<#Tf,sp3cHGSWPmV!4jF<R3j!D-l%Jg&LQj"/5od?>EmGbpqN&`tK"S7lgq*mWT-]UH$,!<b<][O=B6Qq,bISHN8X`m"_k[1-NVTkkNaCiYInM!^@;aOTGqM=FJ#0p,N/%eoJuJGP]P6+FRFVPQrHd@XLd()rUR1!8;q*i#-:I3H%tR&F)HJ9bR!#V7sHUP#H@^;Ru']QnDiJ4E..e_.7I*'t5`(M,"="MdFNO%5@s]CU)%F#S]It%V7G#qo9;e9$EEhh'9nl9iLRk89,>*WmDs>5G?mVKJUeJO<'\@.JdE#8*%qOR,#tE=(TF"jW.8BV/<QrcrEPG_%,2HMJYKCq@=%?B^ck&+S,@HO)S,9]_bAul6J2o/C?rY9H$b>(+`\O,G<:3f>Gce,?g#U6Ul:Z)&5h_WEMll!eJok534TLo[%tK8K%aR,b.Y]88I#?*XD\k5rI;-*oCPtRpIl.c7g#J/4kP-l?o\sm6AE-n4I?Md><^&+#;c;22#e(S;u`@&^"GiR.4VBbsehQVmW7PZ+'%KNkd4/UguB17FXFES%CpH)9j.[]([u<;PF^)dU$h]pE0oGDWe'@<rY4V`!qLSY@VoBh->Se[;0_`=G&gn_f<V[-HE%_]2rQPV\S0%=0.dd!ZX4srlg-dT$DW]nO/t?+!`GV^'!WanP7IoJOaRB&kiRD/K67g8:-'M(N.>6FhrLT%l'Qon`fI*Gflg8;'$g&Z*7=%7m>UO%W;Z!r'U93'nK]RNk$eQT%Ar\^1d4/t)I43f<J<tqSWklDWX9nDSsV8IWX?$&&tf[/2Q*ha+22Q#]XK*@Sm6h-PL=V.M-g;O;eZ9N%^=J\mXaIdpBnslSWq'DsZ\VYlRp#OBIGP3.Wp.C?Y.+o<kG?2*i*,*9,1S;>4g%6gU^s^=Le2>L62H\f?RDZ_"mJD@<)-=9$IX\@%P:*+;H+$r$J'/;#p:f3LZfs6a^q[()QF+=oJcJX1Q_q"7>gBll;bPb&Bl2hJ[&Q64gY)YTTsBZf\-+<6JpadqikDj]r+/m\Gkj=A%c)->^CH1F!!tD0rDN&EjFY/KpE;GmEe.:E"l13SOEjfSYaisJ3-]/3PittGVb5!9gi2-o4A\*i2!l[uGBd+;W%uH*smrrM$42+L:%plfTs8XV>7e7%bnMAQNV;Oe.'p+]stI%2;e55sWRS]u[V*fJ9pdgcaL$8NTURLNsF$tSuJ%bJluW@jgMEIS.;mCD)nKB??2:!2Da%qd_2Ra4pP&UC^cF#!B>7S@6fpmn9$*+N!BW=@^,`_NQ$9/uPKK.:^K]<)oYg(OQ-u@:uHSXZcY'Md\Z()ic,-!%-NcD:!B^&jHb5%R*@.GG+Jj;d4Io5^J]r1s/\%Qi(36A!G_&Z_bo*8etDD2_mY/^W!loC8'-k72Rt!eSG,YH>]L.)QA$e<5-gE`&D!Z26[]nt8-B!\%>6;sWh<+O-02-iRI8.p--X3ek>:T"-;AF$bht&5uA<<-/<2J?FW<Vo^O5cW$.'CC06C5J6Jfb.aC0N'iU[0P'Dr1.&bGF)8D7_iY%T+ZhQPgNYsr3Nbp5BtSI0?tNLPFJl*#8pK1c&(EN57h;kBi3*f/q`5N5(^](XQJ?'%u[0Q??H#')BeH;3p`911kNoB3UBgrILBU.%Q*$aRXq^0*G@Z0aTK!f>Q$'(c*,%[bGnGIl$Uos:G-"ZH:Z$.tp-Uk,/M8rob<F9]s/0%*$?FeZ.'[(O`D>6"+7uqdrBj=J/ioP%%Rk-*_fCSF+-oJjf<soQ%jYLO.4;-HGr$&9da6t+^B-]79`QIZZZ=]d;e5,nLJlk>`75?S;WjRdU;Ar=_ngR#qfq53HjAUpiHLN#T%76[ORGMhs'=lfVVj:.p8UsK*4XKJ3o+TV>A1ke.QKl*3KW2%QEg.$.W)FXS,h0n*L:Xf1jOal*`66-p.i;k7C!(GWI1&()s[\G7*%Rg?\6ERZ2`D;ON#dtattccN)O=+KCDX028cX/!aSSfL"(c#I^t#[U_4$F?*l62"j4Af?3-$E+rX)URC4U/s2sMeO3WGn-XJ]8n%-%GXh=N'O?+FF5@.1%+Zs!p_:F:!ijGmTC`bn<pERp2%,UPfW!e@l]h@T?PDo$K$$TI=An#gb]1H!:sYHHk23pJ(/<3kWtjm]I7Zq+%A-4OOW/f!Ef=?EF&j#;[VtV:376[OrOnpG?;/Y/+P#uI]:FSoS9+i:H/b1>ZQ61D#C6;:@8u2HC>3&V>ge)mDC/KFJ[7F\^9jV`q%W$LqG6d1H)/R)]8iHV2[MJgr!3&,Ka07?]=/aPgn7Epf*1PaQ/GYrPB`6879M&A00AB`iWaUYPkiX53=bhmp,h?GIeg-sc@,*:Zr%QtQ:s`iRU7kuhj[1%"\kE>3[2:QnGug"l=U]QWnPM!@n@)!_gs^[-P[pp7[YAWu;4p:WRu3/V1TM>Xbu7rT0]E"i&BD("B]pUQ,3%DtQ)MU)7blWc[lo6MaqG;'Im+UF:kdaGLu:GN@CPP=Ka0`GcJN?Cj?:(#h93@^q99$9+QO#c57ea%[g2JXFnO;K0@',#erN2!:4K%=Pi+^6q>Wi2j(XG*8)_>:<;F%E\78qFW`%9$KLG^>PrtO9$]$2<@hOOoiq>I/jUrO:*\jRYH%ZXDk1T6c,t5Bb:dRqH)iUr'[S@[%,%ETqii:4Ed>(rp_O&2:<k(.-"Q&JL#i.W][qm#5Mk(cZoDSf]o+s[YGL2MO."m[7T(h]WY^rKJFYj4<dd?a?:"ZPlDrF;gT^5hq%q9+q%SPV/-%g>3Gc]Y=6UH>V3$5VOnFA%"R]#?o**3M&C[sKk@/9/!b2nW7g2/qk6F"EY*_n5YjGj2W'@V0e^BRko9#)NQPD-9!P%8stH$6Ymh:[f'AIM?[bh,rHV1i-oPJlV>Q46jgmLWbNT.0e_jd(dhK0S9dGs=8KN3lE@iMh9'>nPT>u5>+bj12I$\0F_"/#!!5uD%=U([JYC`u)DkXCD@V6/6U97^`7"2[]hj"tY&I%Dd</"p`NJJm6GR>''UbV"Q*i\,+?"F3r;OoR%2f><<5bPS1'D&::m^$f8o)u"g%rC]ftCU%i2/,ZaQKkjPP=]%"2K!N<Blbc36Y2dkAq!pQ=:\M>&d5,$5Ztr`I[*,'nkM-;QLT)o\O/`Ad1)cL"[Bf4Z\&j]o/+(4W%Q1f=?Bk+<n7*;NgG$T1sD/C*aP%e82Ql3C#eAfB%5$6AEa<R,^\C*Q9hg7BWb2&D?9Ot?BAIX03[?=#TBs2388(4Kjc^qqtidGTt%rj98M5JIc3]fKr%^@7"_PD:\W#;\uBH>\L,Y@jZGg/`0o?f+:!DQI1oW4t`8N#i.o"dN\G9=^h:Y-rAHCp3))%r#*A8YdnJ3P1BC%NPBU/n=`bMl;U6ro-MjhbD=Up/6GfMSZdrFWWhss>//pS,YPS1C;1S:N(DJTSK$m]oN0!a<3&.8q'u)_?6lk]FS"'q"nSOZhgMQo%gWZXLD<DO=(N&^$"X.J@;Og[2a0"Is,Zu/!(nI^KVu64P.N#2[BFfF.9O@:[FMqp;@H=Y-rMk"1H>_rmUA']*fDMu.W?,A'C2_Sq%5[j?s0B_YFL"-j$/s_U\Q`ROno;/^ua>c`N7NG4l+O-YNqaT*U;:cSb^t4cra0J`hDMjDPiYb&d2fG*8E@;C18lkU;TMl=\.Su*k%,$%goR8ms56*;*+a:hCRi'P6E]$TV_TEda3O_GV[Kcb$*<:_i,EiVB%X(B$N_I]&BgFVoKnuF6:iA,Xh7s&_Mg8Bi0s*RsXFGsp]%<oGf,k:(AM)5CO7EN=E_](QCpI/muh\^0pXbVAoDP]g-7p?`d3s1OTBAOE!9F]4e[mJjm`G'CODJ"Js&nqk=RBl.,iO$4UK)r8QT%_oMfM;u=6-I=M1iR9Gt-XW:Bmf+#.]GlRU/30e-m9tF+`i)G7=*J(bZC4FIiCMRO3\PrAMS?2qXbhpP?dgM!$akV;!KheG%A6s!j%,h&l%*re?4"`"AbS_58Z.+JP6(2f;cgraD6"#4A$,OD]>s$RL!n>TsZehWQDh1r7AQ]e=<E>)u.J:BKD3II\$Q&!'P9fFJNGF#CF%WTl,bJrch;R>9[Gor>QPWbkfZVX7iD%uUm<k&n.^Z7937T!ppbRW$6EQYS0)Go*9QP3e9$q4rdq,!1mj^e535aUU7)q,:W@5fRmP%a8G$!*JV;M1\CUQmZ>H5P5!mS795%5XEk8X:85gE:l/1O'II$p<<t"X8e@J*Ok$*;X'A6G#o-SP.^9=SBu3;>K1`5.>Bll2<eF#G%U,k'_,-+!r)TV\$<+Ikb`%%;U#o?_R.^A8D8iEpuX$J%4=lB3'Ml[6d-!#HDEWS[1K1`4kG(1])<eF#G-;p$[Z5Q\OeJ55W.^J?_%5Oo\?RG^,U;0>29#cX+_0=f.RM,_R6Y*.G^nNg"$_,C)ZlX9ZH?fWm0Uf&]n7lT,4;\ARKTH`G*?Ou^4g@3XF'^A=QD?kO&ZA@#L%YG[<0>`1PI.L5R*;%\UjITqDP=[<q:Kl3!;U=3.`g0e:Y#N$pJFDV2ARH-I7rm>N*&.-5X=Toq3:0GNSpO0Xb+dIQdX2TnK_U,\-%q2:)KRG"8@&UMV3L)1!QMu?&o$W=\Z+C&th)R/e"('r32&AW*EiPmB4/)Pu0cro(GJKS=4M1uB>1oM4cCN@9?;*a'^BT5tZM_70M%s2!42n:Hme2*!*^e:Q[+%n.P%=9gaEolY9Jjho(]ENsfRmc:5-HA[5UKQM4_NOoU3?i43bou:7Ve$#r7W!0I$]<Q_Y2*=W\/m)?2%]a6\7EC%/4fFn=$S:Y&b\&p/25mGXY&<q?H$$<<%?(AU?>mRR7Z[5JBfh2R"ca\rN)HSNZ/]kWnA)l4Xa4NBFpbPkcr>iNsa2YCE%O0N]kluO/p$Q\#FK0"OjGT^uI[>_"\60[C]lgK)1JI+MKE(HeaF`I.=c5\7WkV3X9nTX$[.Ib7d<SI7k9Z0-lpn]\6EL,#FT8fM-%_9RM^/:OM;S&>'Gb[?G^oe,&QP4Q^i#CI>3GHlFD_i]AR\9n,p"Gm/#GiDQB9.f0jipO350"&@hp_gT8OaQB\gOI!@jl@i&]_ge8%G?4-EVEKFSc.IJ:1r5qLM(WA/_U*,*Ak>MaX+<aeG-Xq);jcnI:UTE=a'*@sNomCcLP8>/&l)^o[Duk1R=2h\rfd0>1X!+7k9(Jo%@T?+f[WM)+UVPp&0ob.spR:cd%`jiA#<1UXMq1:u%lkA2/g#RCD"GB(FqrrFf0F<cgPCc\3#gF@>N""IDYW?\L4sG`,D0#k0=+'d%COU(rY$J75!0=]b_m[F^Fp,0DjB1rk;Y*GRn113_q(\u]G,mWN-#Yf"GLm5*Nr5BSFNE9]O^>=;A9R\Ne/^s#"gNEs\s:Ho+S%>3%jD6P\]0"X9XN1_2+?nO/>,/;ma2dMiTB_WkfWe=G>fE6h<%peYGHHPmSdah&^D,0>g+Gk^nONokmCKD`l'l$qLMItZDLMq#1@o)6%T/m1k6eO>'o)!dcG4,k*#S1uFOR)?.R;!^a[T\Fal:`:`eKiI&djRJGJqsDlQIb;e[C(4.<B;d6OO3;j&L1LJ-QT2E"Q'r=GPl6s%ouc-R45Osu^&D"ObG<:k43L,'FF-q+eTmihl7C13r;E!IC+Ro#Q[q"S/Opcs#e\)cj3L/N9SbCk[4M2T^YHo8?ei;DrlW`&LL'MX%dE^WRDm_g/hI.V9\l:jnm%fdp%#iq6>9;8Ve=70T=0X:FN,f(89/%C34ug2t0Td:14ug2td&+q&fE[2@%^M26iTu1/f"nco]olJ#%g:/bm2t`4:hMmpoV4cr.n`TWS?VkYjO+3cdg7A7ilmBY"ECuo(BE.8ZPUIDJP,cA@.^leS''[PBFgJWnF0o5r9XR(tWLM=>pS[_4%s7?0adHUY^e,hP!DRGPVCJtU>T%=dVdP*'-#!RR8)>'TY^cZOCjL'XpFo">]T/HQ,$\%FfKIOa+$i]V%PHZD>YPo@9YlR'qT]pr$%M8IcneA[\,omklb-WEA_We.BI'f;<PH\26[:%i5SrDTLVh7*?4Ze,51/CO9:](<S=YlAtJe+re9p6_6t*IU&FU\NcFqu#u.MB97!%s2X09;s3Id@A26IG^+T%DKjqZ)'o.Yl'a0.H'J"E4)\'SrYH?MYapj2;tdI>OuGK#]efAR&GFObpZ&Njhg'JGm4Bjplt'0&HbK+I%r:fGgQnG4D?C'9fl1L,;d<U(f#_jZ"p&=.C`reF`r%E`)0]^i%D"d6mdhLKY!;O_"B>D]/TD,Pho==TT`dEMp"TPS`()5kD8?=Nk%+*hnEDN]3aei(WKV=fnA^3A0nSq!=nDgT6iLMl;8B+Qhj4?ra+NAV^adYiO/I(.Sl]_@#MEqHP@@Dj!R1QgZ`+cn[A%WRes35bdl%B_+u1UL$)GLdd]%G=/@8?rQ/oqOc]mjeACROsEi>%nSNFPCBGW9s/.ZWaHb;_\=BZ^Vc.O75g(8VJ&m3=ji4k+GiA$APk(KU;/^r%4cPodaF>8`k^<@WEC='ooHBo&V))&J-a_1HQcP.1)F[#X]G%d.4S'>2X,[-;W6P>8T2&Q<.M@-mS[I#3RC6MWNSN]JNUH!0EoqsQ%'EE%-RG3_XR>Z55s*8"IoD(V@\R`iO9bB8/balb^Vbs`=q9K-^S^7>tbRLs.WEp:JgH>'c'W[5n2Q4n"p0UQuf8>;0)W"WONLjkM%WnkaG*n]\(r\%oe)+@!gTt&S8RCT3LNVqsjNR$_eFQW(H+f`8E>E,5BX/=^oI3.&)If;!5Y)5ZmoFXKhd5uEcDWF"mCihl@QSV_(%,#C-=T%f6rR4FHVaF>8`k^<@_B.b\g1I"14)a-!DA\4*)4L!6/r*R_h`!o`;j14"0RCT-INVqsjNR$_eEonKMLbM!\bj@mGbX".l%)Yq\])kG:WAq"9Y)^JW-oK6^M5:8'U##[+<M%d0=UI6Mu+Bb)1a%IaEc;^Sg=V6RLbiYl?AIU&WCrf&e&4LCjMlI3Sh^9+0.2mqW%+FJ`?)DFefIOKrR+ututikU?afFUJ*FC\)mXC"uk;nXSP-;I"Vi?52TPbJFP<AdWa5Wk5f"[7W(<;9=PiOGAG6)+d-;26#SUBVu<%!-(al@D]7`pn!LELC*8J8:%k#9a8C2`(ss;,bcI0Vm*_/4GB:r(JGiRFI4%+o`=;@;7QcoViO#*3q&+?;h)EP\mdM.#jRst>nN_O%*G/^XfDD1lXFO7t!l:>R%?8qQ_Ddap#n_,C='u*b%p61>\5dKs+gEgLlA)/ac'UP?:T+Oedh%HepK,/N"]Y]N.]BjQW\23#79uOc%glFR>-2,]kVA;$p"6bVs!VccO!TX.[Uo[OI<N@r!UMOZlW2:kFBrk:bmdGY_pHO-gphG>MB<&?;q#bs)BD2G8LD90MGD!9VXU^<c%^Yo!gFEMH6C$kNNT?lpeHfQTKCCd%]O#Lk?->Io55QCEMGiR)jU]-*p,QWIl!=7bT$jDA("=<4^O%>g0rqss>;A=6UcBBNhIRl6!%A2m"sra\.FE/YJENiWSc_U,OoG0knnTh0n>X0>NrMm2)X&f$M\$j%i)+GlNk-W(%HU\@_Q.S2DR,\j7X.-rNk2s;CLJ;/Zu%]ghk%Bh!g)d.#]PJ8l\;:8&l-.0dL2'd]%R^P!u*Tq`#?]836hk^anUfE@uVaM8L!Wm$9a$"QNWOlFF`5Xj4kn-O#H;^h:="qk&NAuu*a%R0ir@I@0+O>nE,RMh3\i<s]IL"ZfU?,*oG;>u:n$$G]-)7KpjUS3bd-J:i_R3ZtCN?kZF7$)%O`e^R!]TKk,(9gs)Zihlu7Ob(6(%!&\T@MPcCA!\u/26t_WaJoX-'#<g>95V4)ZQXNL`Jn/(To`8_LJQ7Kma"Mus-mfF]b(V=lTF-SG&eG<K0e`Wfm>0$fX2-ue.ROs\%ej2A&QiS%SCqtQG#BWs$[%aG>,(hdq@SR(lBi5o.iInKFW2S]B,QVVD6H0Uf$SW@HRZ@d!5`l(u1^0@*&DKkZQkCt!7'6V+&U:W/%&j*u_:h5<]RYL;6[+?R4B@*adLC$g`'+Bkk%6,7=mY)(b0Qc,36O)rr)?:Jr@W725^C]cYeER&%-IQWK<75>cIl&QOF]=oNIq6RW%7)/d'pBN[eW>^#I9jlS'rNqW9qD,:$@ahn<l+dT?>`=635t7qPVZMA_c3gC3<Z"M_FV@mYZ=q/dBS<_<3$E+JB&M6]^YhL!Yef*J%=]('tFJ&q"[Z7_OnNrVM%*2N.IKk1+:^%m5b+)?UKXV8c$<c?/@onC%>Cf]ZZs.+)&G@o9)ofneGjI-`Nr8Wj6RaWH"NU\s5l:f:%!@"7)N!p2Q9Opj`Wir)F$HGVK9Ec+1+u$7eRV<m]dS\fM2*-CU,pa72i%sFDYgjAB\V=gTPd1d+a<W+SaN-W#",83;>6,Y8'$\CZ%N)2p"-q_QKYS.S?<@1WO,fkR"&%#E5o*`K6-?Lr$,*6i<S1:7uBX2[cEf`TM(S6i5$Xsjl@W[(X.%BiMLpVn.k8`]FN,+]/6ti<R%Ot=mL-CrU6asnuC!$J738V">Pblo-sneQ0KP^$'Y!3Tan(_6aOA9t\`._&H>0n;/,KtuYA"Gn<P!+8:\%?T8:V13,%`TI:02O\$J%##ddM$05k/\.Xa7oHSpg!G#'+(BG9QC(2:g_HtUG_5=.RD$#8X>t$-LU*(&tO?rqO#=8\W$k/o*A?RIK*u@=E&i:_R+=aG%b6jih%;$X8B*`t^30,!2B+Pip2bKB<3Caj6?TXMZF'%dC:BsL36#B'2=N;ua[YSoA$`fbH)ATj8N!aN!%1l0P1#Ud_>P=`=q1I4#n,'a96%+&-c*ZYn]I"Hi=&2!34J+EA)M_O6OC%q26/kr8YqO#6rYiIN1jAJ2>)-50oRqG[Ms8(ac5"JDtpF\T;@>=UO^#Lt)'5%6T''_j*_%)#t#pBVM%5=2;&&9L^EW@Zpi`4_k[P6:Y9EJ4=*?"hl[g:t@BiHQG3RKa:83(Cer+,4t=1k)>WVW-Z;uIj897Qu!3SIgN^+GckLX%[OVBlcZiu.V$]:]^rm0[S-"NP`rLr];%QDd.:<:30Mj5bJ>o;u%akE=$K<K?XA#/$F!aP];+&0Q,V5JhGsG85PU1&Gm'7`8FG^iB%igu?eWK7+7T;&P[k8d-`Nr+@%)N)Y*,f"bqY`?:!CD15G+c4*u(`!0)ci>;0WIX4olX)J;Rpq4&k7\V_0FmD8_!-T5eY\@KdZ<Pn%M$K\3J/="Ha=;/OVGPhFMUG9^cibVhNBfhJTnXp3E's`l%,;gF%<qsl"#D=<#Df..Or$q)>sg)s8om9gI&.YU^+B?DKSLI^KIRZ.%`:H(ETU!$>,3&Z+JtS!I\hR<]:f+LI%5F0m9Mm'mW2!OPC^Q2UY+oQgCBHal$6kQiOKFTZ#^A,`49>rmC`s85D?<E;W!5(bj;MT;%?(fI[>]5"R2(3k;2?N0ZB`Z2lkm`K&U([d;7s18NG<*!NhfG)kGLjOUa^H8H&5bj3S5,SL5>73X'b(ibfMtna1r9ih$qr4UJCk*!%(`Lg6_gng*Fsl-b&c5sifVXONXPfmWChrfC.re'Z5ZlU*jFD97+KC(`0/21Zrq?'`eXJh.O!cj%l4p'&(g_:"(5;gBL3>Q?KCDtb%kEXlda83gYf44#[#="dI&,2eGcG^gP)s&8a+W8QeJH6X-PU2(Pi@D1-Rq*+6Q5KB@+,\"nP60Y%U-(o*dm/3-&.%;Q$)@l]S=a%2%@$b89FLEd`V'/tq1pV)!3ZWFV$-<6&3LtT`]E]J#lr1MTY/qRs5BRlEOH;muTAk/a"q8Wd5H<PXka9UumJ#Bn35,!gF`K;B\:C7[%`"t]"6aeQ*!N$Ws7*q5"$PYGPhaReN7T2R7(""RcVd!(JCsW-``R.Xm0.Pn5Y,F`e7N8`JG>oG^ROOE0$8R`um\^!uRKE)W*WFB_%.DQ5qi<RdF&5j4e#UV_t9qh=*i!q,#;^e^Sc'b:oQ=eL_9pCQdY`P01=t;J)D>Gi8-<&:ZX[X=r/MrlIp-X]f#e?m3UZ#-[2?;Z[%N*p<+8e:P0S9b>UU^RK4-cm/&<g!RfTQ`sd=9HnpSSYHZhkF_rAOpJb7sgn(Af'Z;!)\Q@7!qIfckM1^$;](!MLGr[NKClRBUqVb%)O_iY3&iUhaAeQ/>,_Wn+GZ;<E[OIQfI5a9,EoHA))3rcSmdQ!9Gha*Fc\lQ9?km;aVuX[<eEXNaVIM?J<N[hAO.IAMh6*XZ4N1!%=]\^pM/a+-E*]nG?eCnt6SE+f0f;7-_h-C!2H+]/&<IU5_iXOm7]fEq1IgCYOr"g3BM22EPgEuuAo!r_$3>?.o%F]3<`SHK;!47Z%-n,kH"<*#FqOMFH\9*_T_gpPhlE12u;#J.h&4MdC)$QNC1l5m+0kjTi1T`"Nm[04G3hjPV'bOjC.4C\f$*IeQ0gNiMK+r-g_DWL%%bEe%^Z`Gph"JH6t";;P=65%'VKpqkbHlu2cA/?r@;)BhJ&\=\5(^e'X-tCTUJhC>g(mr1q!2*:(XFYqQ:4gatK`WXh<t,`nC<YdS%]aBuc?D!LE4qXhI5EX^^`"a9E']="B,"IA8@+5=Jq/qtAJH84`i:/s),XpJgr[smk!.ta-h*i)CK4kDa$ktb@A<Ts=[gd\^WFW(q%r>s3hke@/Khf=W*,2#<t"he^t<1ksEKMt;-C#iepM$$M?Jqca8PbUZSekM\>7IimUH4t^H#!+5a<\`\Lhc#)n"KXH6\IBBoU'jRY%_\a@b6t3qR6W)7N/YG0Ih2R:7P?HT<0/\Xlg1V`<cBp"'iX;J-=h6TbKFlT$*!>K$it5gmW<04m;fV4b1g8UQU@>^RBI=Z!ft>f`%*KMl5>2P[>7Dnq_"f/248&F0c1:3)tAgQ<$LarIQ63@s>[.8^MbQ=98C;IJUW%oXu?QcfpBO"VJLb1Z6^BR=_oU>b4KU-]\3NWLu%GtcQ088%G,0@h;0Sj`I'O<U-Z,\%sFH`&2f'eS!RU)b26XrpR!0a]@e7(,h-+Q'/WnOFk]+Hb0ApKY_J8@4SM3gt>r-I>@q19]qs%BaI'Z-lHkrFKZOE,se5kR,6;ZHWERFYY76"Z=cOgAd_ULTbYYgO/)n).'hk?L<SN'ckPkSkC4;%`ioJG">XL"4_r+sJE"ZfV18tN%Obba01_kX3,Q[Q_S$b#J/,4^H6AGM=d-EN1`Z].`&!Sc$7(*BnO@*&X%Z);CA.g%WX;:iBkVMWWLqDAj5(V8bh*>Y66_MO?171<W%\=*AX5l[HATM[=!<:W;<a]K`9)?aW2>bVEl#74(O20=tT+@PiX)C-Af8$G6b2c+BC=]dB"+),-RMhJC?<0U,J>N1!mVGi[eaOU?C%9E@lqL03c)2%pS(<V2kp=@j/5)@:B`?.F&?T8`uGKiMiQ>6)$[FPGgAJ2gc*JoG?roe6!QKh-ij8TD>;^qt+h4[qXlXBEBT2H3IG%_bf#CAP"%@32iAbXTVQFVh&4UL%Kj$;R?W8JrZNm\qWMaU;F!]_[fn,2^GCtW_@Z2UK:LrcQ^ehNa@2-rrsoU!a-mQlLiM;?qR:6%$m;-28%eQqB_;>^2#<QhB#e?bJE25i=J6`c[DN.20,SU*j5KNX_;@9Tos=O&p><)br,1m(ETXg\6Z?PCGCS=4r"6:J7lX,.>jB>_%(D,G,E3TM(qA"+Xl:NJJ$Tb6r5[VUsi&"=7((21I./hTPRq/3@;7%.sL0cX^27_#*8OFj32lPQNif=OCo"Kl*&nI9nNGl*-jkB(3%ELkc5#ZrNR:VKuK(c9\H!3;4eJBWu"hBkTJ,qfBT@TfS<'=Tp-_P0ts)qA]o5eqfo?(0:_hrKa]D.KMaXuC,*!Gb+8T_*0,E+C!m%!--9QJcNauZ<t0ci0t\t\;^t(gto-/nY8,fTKH.Qn@j\JI:UQFHZP[d;>E[sG&D6D)Z&%M#6B#WgdsTJ^g3CM%%J[4(q=G.0lT1[%d@2*)4U0]3h=mG)\\5OJm[u04S@Q01E)t>p;K`I&:e(0,!DGYnF9hdVO`Q^6"'cL`,2G0?i7`UiVqW)PVZJ4A7_D^9/-7#?WIWaa%Np3p];fb!@(XTWds72^*^b+G(5jn36A&^Gfa3eaGNigcuF10mZ3?$gNfm1nLR+%JX`!sjJ>*F#SF-b1^;E=fHNp.O<pAekF)TXcW%I5H&WM`d67-5RK/2B-5`c5acG#NZGGAtU*bq]:IkMOr\[-?i:ac(1?QRCe'bQ21O>&j[!-2?Db:@$;I(P>.(I7[n46^"L>`)q?6d%gn^M8gnd$E\P:kXI%rP\[l7q/I;:,?@-!ZUqY1$p/h,Z'FnCd<*^8LrZ7!OIg6:ZFZ^8[kl@OQI8^7,RVSDF<5/9$qU[jDqm+gHf%2>"#95euA3I!bqS0I[%H73ZE>OA?A:ga3g^\MbCHh9I#4FpI,h!G^T!iAh*s'h?19ju0c&3c4<?SBfn)oW?UR!#Gl"!8-f$!+81I%dq%nOf4aUkf:0I_go)h8E0GJ%F-l%]ju.4Snr;5egtnPYoW?Yn$sXe1&D)XZLYaqZh'R>-\2J]cgs2G'FU.#I^r9OP4U8UThV9H%%;"kM\F)qkCZ\#oVhGY2t)5'L(i]OW2'.kLr.[hj1a3ucmJhRRB;8%s+Y#,fXN.=p,;2T,L5+d'$]4`Z2poepS/lHq`Vm4K(Eg(T0%%rD0A1H2\8W2m4Jk3.Ei2R^.cIZi">JW9\Ok.2$.WT`3,!t+oDgKYsf8a#]\`d^$jbq.!Op;bK!R'<d!br,'UF?U4Or3nI0MW2Np%/-OmJCibT-8W$B)s)dCj<%=%r_p'/OTQhF1>U)I)kOZL/Il_XE$B\jP<>70]`7rr,)YlrcT*I:Re!\B/-J8+_*+S`UNGYh\T;;((%@,jJB\V+iTfn\aRk&5'WNVk&mcN>-dl-)R0WsAEu+pN17)r"UB5=t&0^rCjcF.oOHOq5mDJ:Y27br'eo.7?&me!YiI+mG.#cNV_R%f]F+J8NNIK2ZCmf;d>+A-&NO6iGEABD;5PjDhHc<-QSuEc6R.I82;OWZ>([0"rLiHU*L%66_HhYd(`#c:o?]R-"lu^R'&^+U+R0l%?)?ambjj4;L'2e'^hVq<<ZVGiMQ"Ek*[D5hRdco)_9=*]Mntck8lS:./-@4oYmPu8WD$`B$d7uqaTR6]<.LMF3qMW7HJs9=22[,T%\=oTh8Y+9aMM<ksZ.9Lf%i4,Z5hX5G@6c+Nhuudl[8I??<XPs"_r)B380hT5-'fef,YESTiEg!hV!sSEnUgUu`Bulu_E&;b9>%&c%*)Ntl,Z)W<GoBD2jcbRhg.7(Z\4B>F:DF1/,#Hk!c>oQZFsXdbKg[dAjFO^TaR=b6R6'`1?ndoblo0W=;r!7^."lY3+cct)LePoW%U"iTqrZ(*::sBWk$HZ8LQuO!s.mOdWLLEYFkQ>\s+tR(TR?\)Z5=kDqU5'jh!@18sPbphL"(-2JJa'+1_2%O7;CtUqP1!?8J4Ofb%;"uurl!@>2NV4GJ!E4ZVI#DBi$mS`6bnY#RC#h$M.;]tML68p3MFM/B1dl8H-HT=BU2u]rgJQ'(29M1!0q8ReBrW$07K.)(<<`f;%TE%Gc3B7Es73\J`OA\b+0H1[)0n%KCpi09j74auBYTZkJD9ALSX2A!_5stm)_^^#0MGubJB<Rb7fN-7k%OX_4;l</T"`t)e6FW`p%BWRDpK!A5mgN\Q$FAn#H)%0WA?D,Ck$skSZ)"WdNahYOu<f0;@6sC6j,U>]%i:`Pm1BiQ'N<tYrfZ6uPOq,VrO>0@%_F'+?9f,o=%!$gQ5)Aq8,aB#D`8VKNh!Q_c$=Of[64kDC]6=j;T1ocB)#ZU-RMO=5_lBjHGC=HZ`'Jc/6(k/BegiWXMM;V#?b:KkSC.nWF$u>r9%)^U&E9!Q/UpCNrcMReKeY3BV+_*VoaKcp_X?W]1ZIm_)*4%.=F=b6!Mb*GQ-A$eDrO52?Z=9M8U@DbJUJhgqR>&bMc=t(4e_UO'?%$"cp\!&mcL$umD6Gg:E49-V86L/Y(W3.(`_]QFW.6lMn9JDbk5lL[WVE]c'?;PuoW(`$^,)`0,6@,RuX5Un'W%oZu#qJeu)O;+`B%_^8)X#?NuQoMZ3%Rt*GIk^E6pn`KH,1EcNoUmanV3?]8!PE?0>MUu9=,8Nqh&re$O&3aT0-F=0_29#n+.l0G#l1cHg"2L[^4uD*6%\5NED#AI5][>J)mGd'GlZP"<9JPrI99sKjaW!!4NG7j$s'o\fsO`4c\_VdfbU9VdVFcAAm#gfG@(eBolXE]=sLJ4^N+=XCHO_G\#%WT"O:/)Z0iL3,1j!sjH;AK^/Fbf7H(FNC7CUekVQ#ZkZL80S=5P"Ebd=NLsj8I710X3cT[h?4G>XqXJs_O;,BPrh:LMa@`Ae=T;$%^d<@k2P_*kBPIL\KMi1\AB?eR-NQSd?,iBD*U!k8\m^\*ImOXh$AfAA6<V/2'Q"3+[Iks^WuJpS,#V2\OU=hdOTERUWkuT;E*=_H%%NqmNmmC(WZ%:H<;)KnmWLFg$$,_g+M)?K5%N;AqJQ7UsBlGO4aA:Gu]^fAW!l16qkf&-:1'NIY:<5g\Fc6M`:mAnm<i3i,2(Z_!%!iIYC<eWS7@^rGtE?J9e)bX&dBJP-a>N+<L+e:qt[D_,lk`&>nA7?]=X6tNk!QW)37$=lI)H!@cj\DM<&&?*m"?4o`!Pjmu$MoN-%@Z;k=/O].c!7qcjE@?[c.T(5f9P,umXWYTj/*15f\VS4R"_+ZS!-AMN,8=D1AUl$mAdNKK)GI2P$g\2&(*TR@P*N5P+[6[F"JBKu%7&gH"31aL!:ou2W^e$gY_&@!q:I7p`HqaR+7%OhgftKal9pdht7iu\?0dW%fr("XMhMg'I8B?(<^n[o*.<Sb&)aHXiKV;468tZt]%Ed'J`+I'dQPf*lQ!:WraZ0;(pTO:>4GRa@47lGp_%T%>eJLdu1`[l;$BkgU_&VT3^-RHL(5rij1eS1;:#Rn`^fnnI<bT9mf;LOg%%;':"V0POo]WN:+lpBe3'b:EtFC-t/11_$T8\&BC!^2r&]!iFbE1nA4F]&VHqpBc%EFrRn/X/Gsi%7!'JfC<)HmO;9<'tFA\H;Xh8%mP2Wp%i<e)O\*"n0S'sC$oh(6n[Rnb@MR6h0\6Sge:BfCKdj8<X"%N5*$OP#JmuUeeW9g4QAeIZ>t,a@&pm^m7:rI/$64-K5:5nA%95!3!s2ToO.[nT.I:2QHKS??klBh"f[o)Tg,4Q`ID5LX7M+8>dN[EA4L&dlW=C-m8daBtrn4#Ki+DG'_SSEurBXO:Z1CD>qB6V8$%=G+G&:)dft@tK9dOfC--cQ18J\PK_6Eo(i6D>2Pp\3WMN2,TB##"CJVJ.mGA,m\NU&]#"n'cAEgK,"eu`2^p]3OD%@)3'C&%(jB4%N4$rmHRV"u1jF%@/DLO%QlPU46,>[*"k5qN35Ao)P.*n![1[gc2#K-#Mh]ao#,c8:+%&@K]c9!+5G*T/#:*h%84(Z[C^s3lNHf:Q%"9cY:'<BoMNCQgDP,I&hamZ1@j7tK%#";0Bl=*l)>7tJLjZ\7YQ3db=)k)qhR(Lh2gL?46G&"Vuok4oVgn)k*LTV&04M0]=iQfSk%b?^+X;uc[uck(F,.h\NuK!l%D<1#u5lp)qlg3M8!Z'$2/bI2o9^oV>V$N)*F&#'>]9!tIiWltA-q\C6I&KD2=X+Flf,[3mg*.#t(%lp6J=(n,$J73f[!$LtpK!QtEG[DXaDNfZ@mmZ/6k?uP=kM$X,WMuHNj:cc4Ob%b$fnO3"7=\W#tjt-U;^PKjHkpd7Uncn.*2#D/&%!=Nr51=g=sfQR\R<!.k(Tc>X=q\88",&/lj8@C.`rW4V<l2imJ=XDT:<C]@)loBS/WF7Z.CB>FNW1ZEha93l!j]0H.`&:YW9JW$F%#0e_\AO4I@#R![!Q%L>X)rdD^Tl`8:AikP3$nST7AQ0CV=Mp^=>-COfEqG]TPd:X4._D,OX7)gKSEd^)->O2.36DM#<^'PN;[!as%%)8PE1t\\#_#tm^"+1f`9u3[#G=cG/qZ!SmefHu<j18U5s"Id_3!MqGrK;*]g&Vo7879AdN$&[rnNp9^PRT()Tmr[uVn0L?TD+o8%%%$"nmUDO#1];DsosOWoVtaT2!bj)Oah9_JWStEBnL7DPbt\O(/.jXs!=ZRdnK=h.H.CN_Q9IJO)9d_#0IgS=3f5G.+c+&9;6r7F%Fa_7Wal%dd1R"E(@fqr\U^lN0@>=D6Yo\;r="%@WZuN@d9<&0t+^Q^GO9k?iZNiF-W&!GQ%4E8KZF!SUDnsW\loiR^,eHuE>`IT`%hrg=2]k\H3<op%KfVlpl([)7jg)FpYaG,Ai>E0A:\Vm6@:=g?oOr]Wr4;:cip]L7qXOG7X$?F2F4)DYig7e)S!&m62&&Xe6`WCsf%1q&JOm37<$Y:oD*b6hcfOZ)NopC8k7"i:A-DfNDY\siXjDAI%qH2_9(9[r]P``3LoN^"2!_U&Ds`*GS9&FVi.)2(ZH%OR\Q/e#I^%^kFrh[QGW5OSH]QUp]bA*OOrkR`Ert78.5c.p4&@7ehVZTipN'4)QUTgdtsa9+6l3.tEX]$]#>1Tnici2MXgq]\*KLTrV'<0/4kF%`u$>t/j`>4"'E2d%thpjCjHGAT%Z=%&&Q7*pjqTCC.tF<A#,&S2*GjZ!_L,%a>$t^%4VRej1r,]KI)6VUqkY*DJ4*QC@!$_-a>F2%_<%)f'U#>=L@WN>NK%'"PqUBJ\SK0!i'BI?qc'7I5%`^^Q_.(#4"f<.rnGTdFn$Lh+h5I+]KX4!O1LVBePJe:L24C&FqYZ;p*="A%2t3QOLb,Fso/7X[_G5J74RZ9hV$'Os3QX\Z;$n>SAq<i-gY,bP5K(.)*/&tGe8T$=-UaOZ%&dj?neqVr6'-Bp=1Zm7m^@*SbQoQm%C5>l3e&B(H8+Ub1h[1u@#VZl\&n)/l'Md:A*f/b99p4[!E`Oe4SCtfHT'l:;54.p7&9'ZMB-JPGJ9V(m<@**A;2N-Z?%%j1kCi%)%hjA<kdCtLN0d*NBk%h;\F-\AM8,/DmpeEI&Z?e`;fD-Oa]Ki_-2[9sK4:dR*M2Mkt?ALhbX,2?G\I^(&'q^Zib'5Ii)oYjsP6c6>%]TF*QX-'1ui2Aq\I21OPbgDjlAiPiZEi`Q-YR5F6"-AXtd/1lOLF&2Ek1!BC*=[VNjCT2L2NZ^2_IG=eq$cXL+MNA6B(U\*mPWR`%InarPa]i"7h^<D1_qePf;mnEM-JjZ(H*W+e\(OV`/CNBL[2diI:urS"*eJnS&%0%PYHuG=%C/K15ull.in_@34)oWrY\&=-N1IEp%:"17c+!6K%#r"o=(2<a+#uBDV2_N\nQ-&nP6jCaZ*q1a/[:(0n3P>fg&&r%j6U2:O7PF?PAmU6h$f_)8\3"D]=_jJ!A$RA(h4,sC%^`+K1/9?9cW(khGLKj"#hilLE43V`N9K5<5iD/ijEhZ.I#0[r#1+p1"?IHNZInnMRl.oI'E;%XDrJ5&i7fXPlo/MNcK.Y=6F:0Q@%/B$'BXpX;[;Fbq#+:Mf43SRTiHj3).rqbl+T4-1lE*d7gmY$iY7f]_Eo](i;j`S6EF6W)j-%(b`N8sF-Mt>726fbng%=Sr-c?>[1%(j<RSCI2IGlY-SBaj1`T:'1Ui=UV#cK=Q\'i%^\[JNU[,_(Z,d:5(qD_T9-*;Il*6+[.X>?`O^+'+%?\1?C)uI(,s+WOCkLV]5TK%h$H5,lS(cB:UIJa\nS>W2CfV&EN@CZ0qns13/t=J:?\rD'jgKpbcU_'hr9;1gP2t4^f+u!n$7lIWa\3,\6)LW_L.+TX>hU'R2iQl%5mj+VkC:d3W&3`+00!V)hVu]`D,2MU('e][@?&BIc5Mo'S2CLW<3>cJ2;Znl>:BJOY4ZVH@C[LEh[G;(5d,T&/b<P\"[UUqrNF>F%aob(:l@^4t9oHB8-6:qCKm;[UO=A_3;``0?lYrULV?=L,c`o$9CRfKpjpU,t>H7o/Eg=u50g+u4qLi%SI6K8i+CYLEq/k_Qkmur)%VUPpSpJ!gml&o-R2E-=`W>;#PBl7.1)dP*s@![A2]k^GEg\#qZX$$m$g<J]e>1]"=]g.;&FB^WI9d*H8"fHI2gXb=Qf5!%<+1NU\%Hbfi%lgbV[lkh]NjY=0F!^&97*a/_p$%B8%K$Gjuku>']Rl7c*<P^8Xp4BEaNNT>a*?V-cFS,"IFc>cU%&Cb-\R5_\k(9Fu)3nA/%B(YM53lZA])mZ:i\>@rjW=CkuZ3gs*VU3W!+CdLG=<1oli>lJoV?2[W0r`eD\gFI8^eKqP&]!'X[j.;20]HOt1Q[oJJ0LFo[`#p\%o;]Lg!%RQB]WKegiJj4Z=I?PKc>'hg(26s%$`qIY<]`+4W0V/5-(8S``4o=DU:jh><TLiPCq]OGA!"ALD/?C\Ramk[9T_@<WqJNB%C;2M[OHt0B,+<,P`4o=D3quFqf>54K^5hjAoe!QJ^4NugCMp1SRo6ZcS)Ls-l(HnD.:c&Yi06uXgH+-RMCSCbXTX;D`M)m##n&T4%iB[XmE_`P:Ft*mn%jcsF.fg([[Vf%/JrWIMFB^cM9d*H8"fHH(2q?kVf1S=n`/thPV$\P_<V+'^DkZYD?7Q";BcL<G]Psr6/]:ZO%KT6DdFK4!=9qbji6<c4iCWh4&kJ[i`lKc=#5M,"F(Lj$`MLh)/-Ej83.9"dKAR!XN`EdO`BU>^FQ;$o(o&&YV<F5u]&UAL?UY+j@%#IM(:!EYW<gig`h;U#2<Tf&C@[W>BgP\S#`SQ<SXiC;GB1199q4a65e=VJFX15"qu\?S2-G?.p$/^ijtB5UGPVtZaMJ[EW''[_)9%>Pq\_YM,K)YM/I(Zh<$^Ca49LDIef/c"M67;kS;_'mD$(SQ9>,=sY)#M5=?,d;N$\jrV1[%#SHH*U!F=E4%2+DVTWPY-iUAWtc&Q%>"`qkD5sG$VMF2M.7Y35>7CB!BPn0F;Csl)gUX9n2nE=r5TAT[_5]erg8\`eXi<'AC,2")C04E3[_EE"Vc1QXD@5bd(#"gb?<dCJ%4fLX%meD6.+1Ejd*D6Xo4r"CH[0eY8'#d+/@$B2?bET!kiu0;\J]sp*o\2?G;eVMsd$@Asg@F.b8bF=@Z7b_i$o%2[hgHjrJ?h6`%f)o2>d=A:<C2UXjmm9bC-a>_i:h[/?*P6N-$CO443/-+tW<u^$0D]JM)uWk*)80&k)ecX4JQ@,c]N2(JOkTS"hOR?Jg6jCsMc=?t%VKm%KY?G8E^,E^iY,g\YVdB%C5cYn6\CsSsgT@KPRb$(#X6Huqn(\U4V-7h1VqljgE22`a/+8nde4lP/,M5d'Gp/8J,/\Oc,j_l5%l3Hbi2YP7%F^b"(]AW\bS(#a:;B/"B[SuUN=h,-d:GDD1>u8:b9=`0XP5HKt_@F-4_X,<e_>X%2arR^a8bnHp@9.8.itBRbHl(RF%^ST_)]>_*S/,-o^gcd@7IXDse?b`Gm%W>St>k=8$@9.94(M5nG$gt4U;!ugPBM=;KHXi[!<Yo@4^'jA4hbn@%F7ur4Cs:$r5)W(#%GQQZ-^T$!rq+:+@HX_ccDIN8!]AW\b/`j,@m1JY-pVO#eE3U&"IXDse?b`GmKo@^@fFtPg_m_Imlf*>/IJT6RB0MJ?AR:`=3p24M%O7.\tlaN+*=;NR.@u9*1Prk7bfoPTRqs1_U)[&e/>iI\Sjc41dp>`dCrqb.jH%5[QH6!,l$2b*>;B)YC*(SqfpmJrBHCuY?!^@]5%=J5Wj0"=.Gp<BA/J0t`;IYZtl4=%+EJbJ]Ii;WX+,qjLeadnP+Ee0#,,qmVoIM^e3^SU#LKCcdKOtZ<d4P'bjcgQJ_o/DpSIU=^6%,bO!<3Tt/[1nWY/p%,YW*$dQ7g05>;9(!I.5JITocehXkL_n+0g]AKoK/4sKin]7LLMnUp>W"cfF@a'[6Y=7O&C>lT(YkXtV;ul@%?[=j]?f3(fhTH:?5JITocehW@#>[bE&K;l0GY%8f!q#/p_>X0K8tJ;Jf_X:92u)V;gB-d*GJX7RRnE*5KRR(q2g@s_(2,qI$gu?u%;Y"76FKj+5OtZ<d*:_\c[%H4ZpZHHD3?7_i[C7^VOIYa.f8ahmgn4UgSBHbuYjeU6+Q<Oa+@=`S%uhVq)-et:rD)k.JUct^!iIue%nAU,@lC!^:rJ0Yf*fuJ`P:hi_I(Z.8i6A`dRn@SV,90W[7$J;sj5gKN*qC*+8]rgE&gRKT9p!_P*mAGgDN#)K[L2Z*aP``lce@Ek%O:eLX-"d#1V2(.6\.P<9^aTF<MRer2$nQq"05U-4^NR7-kL"hk6aXdnXFN&NB_N["(qW.?)(-Dh$R]_1E/(Gs_!5BS8?RJ<\]Mk$%iikH=0YMmSV?3C`nYNE2@MWP]-bednAXqEEghn1HghE,<W-D[h,0H7scti!^ecBj`0F&9dZ3$PpE^`[qS/r<![l[bUUN8L]=r``4%_L3<UNS_aO&j^X*^ltB&`"qft@M8rQB'.GBZ4IQU!#3jp2Xh1la/AfnD*CEC]k7Bde2#hPi$/t?`=5"'"Sm+I4<"iHq"ZAK_BM<s%NLk`+(**(5ga+MA&9"FCHE=arO:.3;kOH\sf-/.9i:/+b8sM0-#CU*4""k]Ws+C&#^pAt2,H[#E0[thI@4Iq5*U-F2SID'V@s_c/%9;-b&KpCVl&18fDLB]435JJq_DO]]+2>4RtbbS01EY@^WUK)4R;qrQbpmse2(4)'>7T\I-5h8"kDD1'N$)&_<?@jip9,fr`,YF@\%D.3>TQ!*$o_R?J(eVO[)'&dm7dj8D(LG)p$@[s+q$NhSr]$6t8nr>!I8brE3+f!IO]>X=,d1.FC*Wm0'9lsZ9TWg^,U$4j55UVc>%+>",6odSsB8g-it^"D:]#=#<nB/rbnB+3E\ME-2s?GX,UQ[>>P+l7kH)gi$aEt2k:C6us/+&ZAB14[>$TiBW'&J`YXpkRUIH.&H8%PY/f_J5ksqI0?=Eq!*14`@Z(:5m>08%HP$tEd.ePPlk)sD=hNtH\u<D"oDdQF'hMofWd@?poB$=o_.>>"eM3R\&Y]Q!KPOhHsO9)%?X.J<&;-!I`&+?I>jE3*F'^eEn8'q3BS;!<0p$[@e8]*MA5Z1\8IKLtJtjjn2l#pe-EDf/cOP%G,[u`%+(tAOKF&Ea!qbkR4Rj@(%"4i#_7Xt&861A4'O`rY!q4Bk@#u;Gf=E)<2KmRKq*Z5u1CTK!+U>](u3MBN.4(GA@cu'T7j"i4eP+![$Ii(ff?/abtS&$D2pJMja%j[5<\LFD&.XE9:/TlD^3@o\Lu+V0cX*u.\#kMX?K(`$,A(VndrK^OP8%-&WDjL06(mddcibK&[E!,.H^NTh2U#IjWI+=m^i]D_dP%j8o^"rr?u5/Fs-\$RSLr(k"+b"BNM@nb2S6:_fas`nXI3<^treY:]S1.nV/+h3\p3m_DJf^[/(_B2<#N[[.j:OY"25F%LVABasnL%Ock!YKeNrIEe*j,<]Ag--Y`b"E"O"Br&W67IeGWoFgMR?h"-Q?L=6t2+gP]iD5fOR/N>dDT4X)_K7J0)%FEZ^*)B&*OtpePTAG\G%JTQSL&`sW]!JIO/Z"kLb!1&1#dpd8nb`<#bJ+3<#`9s2[e14r4a4-aCr.8c2@0\=?Y2OW@a6jgSDlajK[b)V@0T8DU'2sqd%RqKG%hE)-Jg4#]95bqEk$=U(_*MGSb@;t?MG&\7d_'f*"@sG@]K@hedI2nl>H:W.dLUdGP:8j3_;/SM7*f:Eu%0gGF"j;6pF>]"kq9NOO%CO#[)AZ"G91sD#CT$o'3hd@gkFUAXG:hV#7)](3Hf8-,W,dPdn1#FqTO,;0"o"F9F*6l[Km,Pk9pJ,:-GOJ!:JTNY%Jui[Fit$,\%iU%K:%Xe+]fUu?qi;,YfNPB^FiM[dDO)S(98[4uOK`PWmNT<Ca9euoG$-okeHh&=k!>C'er'806o\'G,\0:pdO,J&VJd<VJd+3CQ%,Y$H_\oi,h%!"m6[s_9m_MH]$%n.*Z^bL+Y`a?e<.em^Ojm$HhcA99,FBCtPlY(XthlUiri8Fc5]*:I:R9t7C9GoVEbL'tb+],uV%O@X%_k-7gBZ4he.Oo$[$A<>]ad&XJUcnrScjXkYD`nE7aYr[t(!ek5Si'Y1HqD2%[FplAc-6#2k5u\o%-!%>0LA%Cf0ti_(#[i=^%R677N'IgG7!j0P!0N>*FG53P#m\SR%fO"jn-l>lo(nrk3SEF^?W1^(oZ-,e8VHATok:gjtAM5iF_Q&8T0iq0_3!b3T#$[6N*6MXk%8]spGZr&[eN#aI7S6B&V$Wgjo?dH1^*%?aB4l#pC/O<1Pefle++?NYp>7bTh\;_PH?X[ZSg1ZkJWtmg+^=1E#?<D:._WlAf!*3V=%4bWO@@n48RR4cJn&F9f;k5r%I/EneMUo\?$k\)r;6j;8^/\jZ+9ER@6<m;Fmr:.mf0e11t^7P.L6O"@H8KhR]QDi3O-'UC/F'SGF%IWVS3(ghZLZ61)HG%o=NN#ga0@#]/g,euAk7W)MA)o`SU32n6@[V83_L;aC#U*?=dchLR(s,Rf(#^5<s/umQrlonponKCMKkOuD2%*i(d$(ZA:/a:&\BU'&@a"U)J0$(+C!fD7mE(-+?'R55[^_F'L%j;;`M+.0.fD*\cp*WZ>>",O4*INW']n&C`]K-anJerQWik+GA'%;2'WKe5)i73,j_%e];Fi\PtQqa>e/76!C.ie/W#"$E/7$;W`Rm#`W1;Yu5Yb;WBH5AP_&lNg:m!N#0joEEe;ZiiF@-du]b$m,K+!%(m):.0'q65YcSJCC"*aJ;"D18*;^DPlWA;?7mm@mr.gqQEJ8HfSgkAhVV=lM^o7:SNCRPFJh6=>JK*_sLEJRTEb!dR@#5+g9U/2:%_h_?8H-(FV)C<s^j-H*g.NhHqe&@rO2o^/,(:+ntB9%kB8OI$Y&`S0H-XtW05Mi#^AH\GI>X&]aOVed,aSJ@`@b8L?NV$AmE=G$:%^ulA5cZ4sI)m&gK[I[@11j$_<KL^!fl\EAKJqDcfGOS77I#tK![3^9L@>V3U]@a0Z?\e+P=t-PZUV-T$BjG%Lq*,1fb6to/$eScn%NAm<A3*u2!P5fo[UY-IaY@=uaR0S;l&83;=6]^l4)o;n[+7nN\DOA<o[r-7Ccn#p(.d18/jTh!=j4gqM93i*\HZ/.*Sa*G"]@HS4%Mu,1s)G&[pE??28'S\Q)qj8USaV/*%,RGcg)<ICODgh&9lWA0r$Cc9r]H2Cfe-rJNZA_"3R5#p1`TGKoIh(6c=R5nVJIR&Tgar\V%:NY8CEjml>ZnHF.4Ho,9E46r\=7KN#a\L&mR21Gf!1$.!l%/^hck.L.?rT1*+W6ibbPCL"#PKO;Nnb>;V;bDWYm"Stbq4Nf4WU@o%kjb4/DPpDRG&B7MI\Sn(B@<R\)uhZ1A7o=]lf0-O.mg*9SEE6FPBP.U<QO&T0kQ**Ac)"sC_8a+[V.#:T>bn;L=#Q4dJ2%"3lo`R%?U3_k2Z#7pe!%n&jE0lmf\YV[([^g#_tb#(SF\2B3Tj<dom0sl.Y8Lb-9)Fd@R('ZbAlq1$;[B)"FaM,V&UV$MDd7%<a^Dh$Cqar%$uf?"Hek5&-S!s,bUg'B1uOPAA@=>)eJ,>ZbS$[nbhn6,9.u>G-b]*U!P-!_@HDr!*Y9rq'5o`=Yi.:ij9>s<KGE<S/jQSV,oDD/%Kbjau<N(1GBU>^VQ>Pf^)I2nsQ,dlMo,$L9BU$@YGs&7;&?59MWI2Nr(O#L!2_7k:%GkYki)!`YD5B'BKhRmADV6kUXhdHP6[95a%K%finIXss;3#@04g-W<bi!lqk*nu.1&*7ec&[E!Z!iPTNPq'35g5mmb_(FEe9f9HEGq'nT?%:7-0WQRMC)<ZmhXFVYOc*/DRT#ee%1ge%l\Y`8aG$YND1+aoKBkC$9;am^W(j@_TMDHr62'8"35F];;YU!%]$**ePD+nZDFlJuJ*U+Df3?=M:ABM9P8>_e,iNF/+p"&!&%!jAc$9!/)gLj$CimG>Bpg0Ieg1gOC`eT>"AbtPN%ALb2Y;r+q\2el[+2m^0>]V`cPf:GJIdHT4k1+Vg`p=-2JROMS)eT>"Gc-/Md%9Ehn=>*iIm)`=hQlSPg!Y;oKbF\SZhk^9G`R[,h/20YMkFcJEOmW@1V4#;RaR0miZ1q,(:NLC[NQW[b)hknEECKVPk=GDQ>bKeIn%QC21(gLc0P=4;#_1c'hZR2-LY1p\e4NKV=-D`$(6H%2pepF>,eQ66B:!h7E">.[=*?>!kE[ARrf9-I62"[t8mCs.=UP,bRjB0*_0%KtGs8mC<%ZJ[>q+E:m4pgZm1`<:0Kr!:P#E-1BUtUnnuK9;f=;*H#u4<.UJ/<TlS[WbQlq23:SLV@(mRD5pu<kXHD[pl3WNSPa7c%VN<7WJ6TUUS*Fsfla7)nEc5]#/t#2`\Z?jn>($ji<b[cL>0BX&]&jrg=$!,.b0<1Tl2cc]Rb:TsWoeF0kc/9!Cb6U+f3V\jUl3S#%b$q3Xm3PJ"2+sR!][Nid41>;qV&F;GVnHg1E20I5!FhFoEje1\e&tU:Lh+Mpd9X^,g$Q!$DL]oH\%`\mg)h.$iNS+-*3#dPC,V/&%eUf!8B!rD`Wd.Iu:4ZVYSNaJg3lrd\VEb=Z'WAS0.8WYp;rAEodqucT2har)$?#)b\#mQ-Y*UUl9:uWo#7XnFIF)AaIF+YF5%r<e%p-F<HWf*OmXQd0*R[ZX@<""S&Rb?9M7al,p0QVcQg)`I_1EC$6R5r'7Et6j5ko?p#[<',!>17?51cGg0;AJ!8Bcktggus'T"3`O!%"*ZCA3kY2RUQAU_FVsIV:b-W@K.;g_#$'lX::p8G9h2iF<P^8Xc3%:+)dTXh7X*LC^=%cbd+*]rE'rhVqJl*V4Bh*8`U^n4a*5Au%of)X/18WKTGG"\mHXTtC=r1d8^'jA4hbrmi^Pb3?;Ag9_ji2oX_<f3d_>X%rb)J)fQ[Z6E6Z0@eqsds2J,P[R,><9Ts0g([0Io)1%Gf6H5I!cac?b`Gmn>\OG(<"@cU*00944*on/Z"GG'^P:NG@=P3Qks@!^'jA4hbrmXVpb7"HXTrm]J^MKIXDse?b`GmGU7^^+bEga%nSJ+Y<SW5hGAer_T%VPuhaf[\.kr*R$"cB8$gQ>^.C[2E9i#UNj2;G<rPIpAGJX7N)p4]_U<[t$jkeW;MoCD'O7.\tlaN)thAY?X%dl1n#DJ<PQj1F7KqCUeuXOVRhPDr_UCK[&'pb'(krongR"5imV[p);6kOI1?O4i^u;u"3H%OF6d9EjQqNXl/o.-Z<jW7Jhp1h.Y0%3_f`,%C%u,Ihejon@=LNnFF9<kH:f$hc-?"_WR)Bj9QT'iV2[.'K<tld>Jj$,e/KI6,FO2pE/`J80\SA(O?n5JS.gl?m@UHea`$S%jBnC0XU%L-WUl7p:noeYAL_\gq@!rH-LtRto)&X<2.u!)$K>fH``I.R7VlD&#B0d`o)fNT,'g*q>JbB4&b$pVn:WjR%j'$O@JnIZ%*M5TD*Zf3'j>fHb?:Q.lHTDalBmhUK6O[uDiO-'UJT^Sd7SITN72MPK;1j*[$b:>VB2dpHAj2#mf^];@K#^5uZn1&!]su[,HG.1,%.Pe4J6G3mL<="XjqY@Q*VkGN(ho&_8?B)?9hKl3Mek)A\*oGq4V9h4Q"aV+N^b+3d[2:_+#[NIWR!q&#KJ"P+IWR2##2[hgSJHVO%q0]kBD1ln_7p2Id)J]\d;g*HD%rQuLaII@b&mb^Z946so:aNVCH-kO(L"_+P4aga:(*6jO'DII:aY&-6^XFOeW3m/>ndlE)H<rhS%`)VEm$sa-\)M>a7ok%1R7.6qV42l#9Uo!!m/^Nti4aQ=+58q$)dI.0N!Q9*rcM_kZ8%_aG<3=XBH&eH&BC.GG`Xj*O8n&)5k=eWQ%MEA<5@n)/R*^4]$3<sQ%p!rjC*-_+jM"aBJ5arP051JNJOOcC(\6FohaI(G$oGN=W.3dPa,"&VF:dZ:I2(tL7T"4(WTO9#9"Bb4n%>K<*G:UC^d]<uc0SrbTL8)mO_*)BDi_8D%HTAkiuoAR,XSrOH:,lVj&omk)ljGubYD%F2QFF<]i0.qR@mcP[DNr$V`<6&t%E5tN8%289Bq)-@k>>nu?dJX;otaPI-0L<e`#'!\kf%!!4+"V1qJ]"b:VNe"SYVYHX!7uo(fC%E=K6"W6n3W>IV5JFMW36%tnY@@Q*8bq?J%`4s0"dR*old/)b.rn"Tq:\(UeMnS?_O8;eqX6Cg$HGO,Bm-DK/Sfb#2k@d.PBLHZ_%gECm+!"/E3MgAQa92&hISpb2f7k^E%jN[$%qMG`5Kc@@IjST@_qTemONl\WR$hE@%1a6/U4T1S`0SpkM6DF-:O(.(cbkQ!V<lpF)#:^:#r-:t0!H\%K40G-4H@rOWMkK)Cg'q@p%@6VKJnDh>Y5F0Z$kF3;!2f-F0++8Q`<VnbO$`!+Pd9f:lHh%Ak4<[9.R"=0n!#@]FU;OI6p!M0l*r!d,K8UJ13Ms3X65;s!k8@Yk%I@u(2_P:WER2Xe?KpdM"\BoDd=*GSOcVH_oG57Q1^'JbO>nolEpBY@p<^Zle-SI7<-iDKXDHO_U1rQM_[-qcMR<Y.<,rKor?C:9'%V_\gU!<q)+c1cM0Sd9A-dH+[M0YSe=rXCrl,oH_+l:ej?_g$cWXbUDX\5U7K16*D1`X'f#-6)WBl#JfnV7h/5L]S-%ES!VM\reIR%9Sj0ANA/j!:GpUVgCJ(r7%-N:Y=K^/S>U]cIE@97b^fcn-`-uC'?kekgIP'FJLb!;iJ%jq&18_<.+aFZM'hfAM(n[anUfhm]s!(V%Je-QCQ:?1Z^uG)ufN6G7Ld*Zs<X1p$=MV:t!Aqe\C4W8R0Z5!#$?SM;/DA9,"p6-mEjLU!%A"=tD!=FDX<CV,Q8FtJiWk<3,W1U5%fS7!05E<'-DHlSo+lJh"JMCdqa7.iOY.sf\iF)s$!O/:/'*Il0YUj=M:%/W_ru=Vp^CNCSNc2bu#*U?lDX-JdMJY=5Haq3ZYkg1O%O6GkkZrbk?$a'16=sQ"SaKim99rT4A>Ui&uHSC/8DQL`sr<;V1UY\MEr/p=3=#@ikj$.1'ch!'pX:K]Y`:\[l2I&b*>trn46G$o)%l$]]mi4tLUaj2oBfuk.hWu(LP>eT(pa>H^.5"9l+F"JYg(tZVi,FrTsLN;AqU!0o%Y3SqLp*p%6DKQh^"HG)`bdTbFe5(RC<u*A!%4ef4/c3Tg)A^,"cWOTZt4O;J[,AdG4I!X^Y,6d8s"$sHtZB-p$FCNbAGON<ijb5@8=BKGLEfdhN:B9uqe-Bh%G'V^_9u8m,;P=I0%/JXd`LcpC8Rb0DBY,/J,V,MOo>[l0e`,[0L@4oNTU%M3e@L'X`lo:>SCa<Rp:G>.Hq%mq!.[c*P&EC&.i*^W\=.\8/<9\u&q\+DI%4iVIH43%._(Naut@<X,OTUI()H-AdOnc3l-JX(XBq69TY]9?pj^EW910?K_gXEYBC'V%u_O</jm!?BF:e]Mmr#DV9,+4pnQ<IjmA%`n&)O#U%fJ!q/Ro?BtgdBHcluN*b-kYt^Oim`,%^P/QM&I2D6_YU\`m%GrnSYjKY[:7Atu+1#nj,9m5Mj,JrQ>IYc.!'\j,4Cb#J%.28.#i"QVi1tEAl=7AdmYRbchb_ngaTogq/c;\rQ;BPHlXrn?rN)F&6PUt<=A%LilNT9=eq=3HX-/;sR%Lt7%@gb4H%G.IJUsFEV%%?jU[YjOfX^t#,iaiZtpnA'`+j[C.Gn.&APa+6L,jRDc<UE-G!&;OQ0;^1WHiGgfBIuN=.%2=nSb'\RANhqseD<KPL%4`a,_i$5n%LQtj\^rt3K&Vr4^a-#4Da"R*'i+u0CU@^SB+(Hd;.'MTCi]VPE)UJ=H".D4fA29SG#7c*$<ME9@;%4n&H#h]N1%WTAUi16B1rs(R%6oB6&MIG6P7_.+\r9QtoY,sDcmMIO$oN1":X6q#N84:-9SeSi&_4lNU8Ltid+$,F)5qO3lZ^b8j)AqdNMo6s?Jk6M$Z+"'Mb8hsL%Vu[H-GVJ`;I/Kug5JF?m=F$]rbht[d?f';IN^3fgR8G;OZB$c<(sb2+M%;:kM=:`km8Y76=A<@od:5Yc0b=.b8$Bf3d`8!p%`&RJ%9\QS=CfKua0UAt2!*A9VRu5i8Ggo1F8U-$^5I\6a:<m!9DX`.7i<1P42^skF#V,>CbJLq`k*7h8US?d/f$Ga(T%!6M]$:0X7QrY"%R@G7,apqi$kCY-uDS-W"M1DtM,p(9.@6q"hDIq6)b*TEhFg/&X]`ZlB$pAR5AUYLeAl<D(#OV(.=;pJ+UkJ>h<-cK?I#rLWTE)kR%fLRFna<<qoDBJ$.<c(/j$6ODY^<d4h@6Fd,91g^aSAKSK<c\!X`bh-T#7hWn0M`?4I!Yt@FK$^$Rke.`a*P^gbR8Nn6$DGP$R-f3%:,a)e"ZNWO_fCDe$aPYfaP88eUWV*##L9*soL'8)?pBo%h@+5RfEmP?1/Bsqp\i/oMR>(*Z=+%qh:O?V\P\!=Ff1^Yoo*sa^1*d'%[6gmf0qlHN%:sF4!_u'J!K=q,MTC!LBcY@3rH:a!Gr2&SR.+dA0eIrbDX7EjIYq(CLpQ=2QZtXQji.YY&h'Em%.`rYCPr&bZ6F8t%<b19T\1YLOfuOU9[/JW_d-Ib4V`AUAmCIE]2Ia6*Ek)7s7E9(sQrMiF_s%+bE1X+Nr^%!JQZ*7sh"1qe=?\ES%T0+t5g$H#Y_*j`%Re]''J-cMU<g>%\=Lp#C<NlHLM$/Da"FcoUKJ;3qGT2CdX4X9c,jdX7Y3qXk:$0@sbdmPngOj_^hmGd'3=mm^-pib^37i*_f0rXt%lk[mq+D#@,>'aGqc=G^\6(nqVF@^.F8Z^(2XilW)fBT]\JA,9_]$sLlMR,h(GABk,#bFlB2qSMiAI'`41$`nlah3>Fr.oL2o)oK*%9$nDpF6J=L&/ulK.e1$@b<=_L24R7r:<=7HPRO.'Ss\(WSm)I+M&U'N[Nt?3^mPU/cN%8gcArO4=!sUuYZWT&VT`g+S4h&=&*u=#%&0;%3YXs,%5a6Q4gZ3gM=2Qo=g6JKm@7g=2'eZArhFI<g%liq,q's"/8rOKT;\:%XK#mga0E7*?"$O)qWD=j^;WGS)"C4GlW3M4G%i4qL)f+LL7FL!1(55P8:/AXE%IXGk'=G]PQdj`mmRH;2W2+Z^NCugLn$"I@C`aH,\!26'!;T/GcK'X.<*i/?M(^OW#1m)lF9a>jd%RZGZ,RYBa""Wbf"bSN?"N(I-A>3JBDi=]uT;Xns+2emfRcBiOP%TA1$,-XBGaqgn*&+:IIA8t-ImBXs(("@GVG!FdZ@k'f@(n8]t%mpkuS/A[oV(\s%[=89pI5JFX0?M`8;\Sa4u3.EP3-^_*aa?P$;'<K+<n1S00+oflT=\bP^p+8gr$:jIR:Mk>,W=VV8Z0fAIJm3]o%'uX>p,X'=tN6!6h3QK"!D5o=?'^kO8:)fV?nUP=>i:@hU;U#KBBIoBOg&uX-2FX'r;.O9[UY<2H6"!pXaOC)r'LhB0L6YV,gBn!^%)!b^uFR-kk,anrU4?6#SXH7D#Hi'ed*t9dYI--YZ+Sb_sV1*f+WAobO'-JH^RX[6%#;4D-qY<o.#Tq0KrW:(r?\XF;A]D))PC8A2%j#,%Nrlpjlgm^)AiQ[stCMMpEeRsJtKQ2S$h,!U+06Q%t>p3Pl$cR],4OiW3jG*.P+H/7U/dS*/Cb.uD%PQE!nrT3n%&B^@i08-B%VE3MrMV/!G7jKEK`FXjt/dtmcobN:W1V"(8R5F\W%0Du,L8lsF?dncTP7qU2n@DZDS&cgbkd=V'HgfsXbt/L!:U)42k-QDKdI5R'%2`Wk(Z<AnTp#/V64V59Vjk6QJi0p'mdKO:\A$.c09uJNp;f-YX7LEgCMCk5QUF#YoG,NW16l=PIpaPLFN&GqGmE:>c4=3:7-B5"T%)6Yp!#lORnYG=u`Aek_e3>N9BFuERa)ndlX@WrI6WU7W'%m9!if'#AFk!$alN&/k@\qn$^XFDb>7'+Nme^eBrUkk=L0p,(L>*@e,%#H`!'lq0CIDW$^r2C0R/aR/cFs$3Fq#+MoeS>JKI]WH>:[:$FH@q3&3j@*iQ<,7DK<1;:!r'nGZf"5Q6=XU*CXM/d!Zc<qW\ts!a%rDj;14^5mq4aS]bHF<n/ZRmNPW4#@Y)nf!`FiIH*(T)M[\^;OH"uY&'B2)-B/iMhY)-^\.1\TC4ce+-=N31`q8on1!hro9!XY[D"%RYdH`S$SkUp)Ig$R:o;aF"TAim2=Zco9uql&a,+TJBlf)/X\Gj-23CBVp<I2YW=F2[96O^6+2np@'gNi#atC:l#5<C0YML9WmAiP%5\>9G>>jjY[cBCDSMR`iXn1qsFA?0<)apO,R)l9`pX2QEd]KpFDc`r%-h!QVZH?*^8[WWnP2GI.Xc7V'*Sd$%$T,l[l:r,K^!;5X%2f305s4Te`2`DMQVV?:]c:eg%dst(LPM+CB<ms\FkU^W=fEka#k0/*;F+Ufm9Z+:?3)NmOk$2fcSS;'$Q&Qtkg&[(1Afn9g^X_kS%qHgV4l4Z!(XX3Okk"9C)\_u2sk,N5jh2A`WHDfMtBl48lW<Xj"RG=)<\%5nG5Z]ffoE("eCB^ui?>(lLf-?d>>dS=HHYkQ*CV$X:%k,+6+C;;-da_g9]X"16d7D,\$B.o@UD+>$ZL6KsJkQMaU]g0EaDC2jC\u&Ho"aHNKUX%/,FLCC(D@2e0/NBTUgpR\O\mDDP9S+b$%:4c\-SHKZ_PG!MKhD1M$aitO"PG$("l*b1c1IY!*$?"NRZ`V''VO%Y:`QuW,7fusM4W7/<*"?"HNWr0!=@WIj2>.Yr>A^:mWbH>d%g8-:/V;&P[%QCt*Wkcg].^[J(>;_rX'J_IqJns_Agsu`iV<UaI6>O07Rc^K/.9429S`[A'\C't1'Bi>-g2/Ksg:d5YBVE*R.QH$6%1CRf^1];;FKr3JI1to9;2N!mM/3'KS^9hIddIAZSU/)lgrShaER=G0Z^]3Im^\Q(IIsD!"rr2Hbhu<'<7,I`bVC/9gM#<h>?U[Ah%%.r$KIeQonqu%UdpY4STs3D2ts71\]a++!Bs8>_(T76gY@JI&*rmO+2no#WLo>CRqf,t%`lhqj\Y5H^04Bi]FNgD5F1]I:%^KZ"1%]$a(Q.cuZGd.)`a2+\&V4R[8-hY#E#GcJUOX<;iSYC:Q(ft)t=3e$ig"8_ahLC\n7n3?r>Hh_4fp^cg)rOVKTH1?-pf._:`&t;b`%MT6B:h];idV]8B[5Rl&2"!])/c[lWg,LL`(J4X]IJ0#c7TBNfBX6]B3!_4[6o(+.1+?2@oRU78IU%iY@]PVA7<SjsD`_,=ZGc7#5%at<r6MhJkGaS.M[gsm&Gn84'66#m,Sq`^_)-28h&)5!9P<YfCJBbNf]BL%iVb6]IZPoiAjMf5PHUW6=TmRdUTkYc4+\.C:o%oX%2%*[Q(+)?<)<DojWkkakl]a4D\j\]_JG!_EH\#L]TW+VGjU'mM&OWOGj'ASrF_do.mTVB:kkIegIfNoAU9oNk!?lI&tr=AYe(+YKR4%QjEhW-g?9qU_Q^DE5Net@\K_&jD4hC_:.Z__,]HAAJk2^_ZWN/,eV_pWj\QKDf^FtW=:u4L8P+1Q1kSb`(`]TE/CAbW(:$fN-RAg%`Xn/h)=H0+$o<aC^bFbb8s\RVP$hL%o6@-hh"W.UC138-<#M):O@KHEn+^UTAQD`(NU0&X[7)0;J?:LicB(U!qDs9r8'%H_=NuLC%K"W>B"GaN7/amGDfo:l+P-@>-[HS;eRi*<.4\Ha&/4)ON'!9rbK:faD'?X=J%(64(),G=g@gr&LAN[llb"KY3I=%S/+!@6_$*e:B%c:oC-P*+\2qtas;0:_d,T6$.86YOF98Y^mS*'t^t-D422rV.(V6AR!]-jP$$2*_[B>(RfVk9W[NWj<38EBlO^f`H,)P%[-)jZ,dN%b=)9U54],[-:39iN/.EuiohFqKS5*CkQYJ5-\B&ciR$;7+BEo_"aCY[^b*CMOU_oQ&9/-3_<GLpPrOVaFMk9hJJTBu+(MFuae".n%(!h-\FH;LPAGK!c1Aa'`_Sbo-KIq7\da!)@$n0LTJQ"YI]//Bm<"#nj.]3O$SG,[<;J10jPR=H#S(,oS:F6dG#^:"H=7d[1r"KEL%CM"RuBeB3B"aW:S(D'92*:UA;FE!3$9L1VR%6\aUAkX+$?%cSW9#lVg/p+gPJZ@o)4Fe:j*!?WrH9_tq'SJsEP=;7B-!Pskds(_s%bf+/c2Hf)SCbA$`PUo7X@S@Q#i-.Q4C==oSH_J4YcTX.YhDc7(,YhjtG=g?p/@@*Y;Bf-DC5(IX+\G1`/A)?gBM>`f)%djoFTt3F%NKcVnR'UL5hWge!fBRka-f,Nk\I%fF6Y#/?MmjW:FhS'$?S/c27-\g``;]gYo^gNUNJ]Z@0P=dhdIdR+'JV>a.c5D\[`g4P2a`s<%.=_Dd<T;H.9IEddXNVH<I+n,U*:;+KgEc=Jk('O<S)Et!Ya7*f^"@N2XGF,M.#Y`WIWcA;O50fVd'eOreNBt@Lr[JJBV0'%lKtHt%?dXJm\JB:'^'*nk-?WPNWZ]R<`ACgB,JeR_'kh!=[h+p?acg4#)U/d>1Ja>Es'Q1>O;JEiY7<>:_4^&GAu:A5;o('?c:g+*dI\.g%=eD;diP]'?liVs#H\&nS#7)aS1Af3Jo&9\0EUQGXA3hTG=Z/4K20!*S;CD+X`@LJ@\Yd8F3HCtM\J[q22;jYCjL03@dIe7)=Iu'\%rpci<jQEgoEA$MO_/[,Mq<L9DaA$A^R,Z!LhN"2g%4#J"f*@X:+CU][9h6#W0iN^o.s^N(I0Ab,TCtf+R%,'#"j5VaH#R/^:kcOE%R'.2lD^_neUN#I30Yi*g<0686]AP@QA*)m]_*+k`$0p[gVHigjJgurZr#Q,$CV=+0cS5d2;fuN:S8dI+[?uA!a<THXkHtnham_4?%9mb7)PBSqI>i3Pa,;jg^iKnI;6[YUY^+KuSb6QD#>M@KV"'G2#Std9[jC_qUDK*NZr<I#cEg`"g%?2`fTMj`t'D%?F(<S2$0hed%%,%qC];AI\f1hsV@R[sXV+,4M)"9`p[iI;!"$EkV8NjOXn>*@FQJb)VnX3hXa5rDJ"j<GO#Ir3<d@"emZ=^ULI=K9*I;oPs(02M!"%hQ"=QC]C0EFM,6s=feG"e*-B,9EcF@:p/9mWn;8&OqS1)D;DO=3bDPs%JYe<0WVceDB7dR!Q6@F`rL[g)IpYN@?N'V#el&GXlV>Z%G$Ng/%ER!bLMN>/Z[a7d'p-`t9Erpff_uG9^<s8kQ3JiS:9]meq`kWf'^FVWXq3W&p'NRUY&pFc#V@>paOjBp#TN6HqUu"e=2@Ze%X4c>g.V,.3Qqg6iA:LHq[9i!O,Z2mY-@GX+m[r2_]WOVB6c#Y_fbl[J][9%$jqr_[T8:I'AJ_q<Tp;1<>'Ye9ApmWc%#"JmL;J]j%*O]'eY%sl]L]/dEG;$.\VsMA])PI(T_b*\S,@(.5DT<k_5n6dZhDI)[,C)^^]+!,BY&bJU%Hk"q(o%P!V>1sTkdI<0@l2'W]sMOi%kWB,lJf1>68oa)4ULOHCe&[PHU`A-FCrRl\(ea][pu(o`F$BnDkF#11dM5ZuQnbUs%T13r#jq,.NT\s[e*GkL;+O>e$O*@I<hJFq%^!hY<(o0rqc!N7t&[Oc8PVl"b=E=&C#:V>SB38r2ZC,_,D$M.b85d22;UD;:F"lXuCCTDd8?[WX@ZWd]!I1Y2qNR7h$rW2T<hED#%=2nT&+HE#5:XNU7>\mK%%c^F[hRb:.pj^H:P,8>tcSWiR#a_=0i,*-/3?2U=:i.oW7's3b,C!VF;kViIr-YsE>nC)3<BuX3:ZD^2%&7p%*\d#+N-0ZC*=pHRKWMomSSGI3&7UIl^^5\uN3W6gq.cn!J%1&s>KI$\h=IO<fBWk%ib;=&`"QdJh?-dV@Qo&rWIRZHSZd;b0%JiKdiS?KJ_4_SC;do%Rcps'/SPGnbRYHiYfUZos;r7b<d0-6A(Sri=oR4u%mNI(5ULh/7[fOGV@*:'JIL7b/_">rVQpTAdB5=i"W%$qE@?b,lV6R@?N@W-l.[.`>%>1L+n\Zd9"A^9b]DFK34'mAfEo)t)IJ4HL].rTDnhIAYj5pWRfuB0i(rbia2drV9+:HHNO>U]1&T%dFRNBOk3`a%_$uCgJL09EIKMtJL/aH_p_m)3#c%uSP))A@*7]ZP8\&$F1YD^(66kngb5<l#ni)@rHs5W8\lX0j7Bn@dde+hpA_su%j)8oSq<TE0]'&&#L!1ik[T9Nk`3LM!'DZAC@-h;CPAlQl>(O*+iBmnA,ilJ<]t3\\K!;/<,8F\//aG@k"2PZnKM5fagkA31,4OtE%4!F'KD1QS1)agdXecFi*LF'#rK=H-786bqt*\*Pl^9aj"W"0=4T?%%#VSX^r<HFf#<@<)2(2WjuRP!c%e!PE%R@3-?N_5!ZT*,X<%*pdMZ(..WHF#D;h)2dt*_^=ubm9<fBb3E'Le@'s3:6eLb7HjSbR1jmoB4]i^<!*7d!9`%;qQR*B\<tI6#L?E:o=cdZ)Di3<\1[*C%bgBKWd^[qqcgqh;"?<8,QZO@0LhlnE0+b%(*#"oO`pGZfV1WA:h12?(b@M;XP.i==Ac:Ut(0j"4mh#sRN'r(89'p_FF5kHK,?%iL%D;\>a'JI`#*<=.$@a@DXT=h&W>cQ/kq;/_$GU.>?Agfi@Kq?lN.`518*R=\05^M0EO/lW_o&p#/,<S:?I?Tk=C^RJJo%KC0gmQkG%"ef.ib(Y8K<]O.n$Zkc;@hdH_PBNGqXW3C7#O>d.?CeC@`2B^X'X;qTn$s^G$GOEj;W_"NV^Fd6fiX0ma3>XdKYRcPj:YQ\5c(;d%AigCZJPo^E/eAGgi9ouC+Iaa7*q@<&K\PE7j@otj++t1B6\R4t[!1uZ/VZJ[#tjk>A-2nuqd!I1Um(t*OrQQ.fU0=P`bmoBo<D^.%nF.B#K_bC\9GO,keC(p=9qH[1,SLdpWa8UadNM@YS9hTgL/9;>iZk'J&0+tN=K-%qoD$,kSVD^X$n(+1$fp%c:]6be,>!V!fE5D>%L.s%P<OSmRX8M</=kLi6\suNA+Hu(GGMp=jVo8nC?qt5;,]Wd3I7#JS4LH]Y5XI$c6`ER:*5]fZTUhR+=K6b[5ed->%lUmL4K>j>%#mo)4P&@0r*Hl<Z\mfWA-EO@)1p%8rNm?/9I+EkVD&n#[!V^>U-dPSccLJPCNo.G[Lj^V[*q1k\'jh8.&EZV=kd'4Re>!GY/f\H\%'Br)cNsUAl%!9oQBs2V"%ngOjnDY>d;6`5*G:?SRWok&eRVt&R_W^Mj'@&IT?Xb0H0uR`S1]n&\R1M0DF?&>d]q&^5(.ri>-1l$]%@VNf.2rrOV3@5(beP%C$**tS+P0Q-L(fK,3W4G\VK4t^'=6?]7_16U+42J1piN=-=b,c-t^ncIJc*a37iFPe6*U3(QQ<U#<Krg.1%Q_*g)>QKiBGr0a(3*'kMFV&6D>LKT?AbD@k]`uQiEgh+^Z*_F",@Ok_=6Cm@'/E:]@-.P7Ri-JDn2A]/3[&4Z-/;+j)W8u'D0sh3%[-C2p)P"3u59D!l>"!()"m9D<)!Gull(U(RaCDh]&"^qd$X$2jKb[>Jg68sm^'c@\OhCd<#/P@kGrp<o1d+]#^C0&/7;*@i&pa],%@d'>*N2N@R/b-,3,I6Jma:PXM@b1(s3uJY?KNkLo2i%YpHJC?5R3&X(`dL]42Ripg%F-pZqg)ZX`<[(T'HT_?\YO"N^"<S[r;pgT%quiq.NH0*Di<CiMSpA`e%sX6PQC07VqLKgDXAoc#n?0s,kt&m3\%YZ_cBemm"p`fO*^jIi!uuJW0bY5k$hG!.bQJXF;ESc7en8aJ%VUA)/2Y`i_=Z3bm$hDK\&fVguOBe^gA6$m9>LNec<P!!ckRit6G.HfP_R^kd&KZ1@[>_e%^l9J7&KW.i0%GuacNgu+)ZVYca?"0'%E4o5Vfr0R[\7#9:9$H6;G$C6L#a%&AgAj1Zh>pi"*]Pi0fBnC$ASOGbBRB-8kn'Yr/1[0ISl&Ef4U(Lp!HI/2*1,Ibc#CD!cZS/R%J$fe,/>rqTK_aelPpoIp4#<^&[X0b@2"ttK84P_r]Zs_S*]P!)CKn&XN8(Gr3J&i'T/Tm"FuiW2Si>HPrj":*OMCK^:K5\?I,[6!%p(Y"T;o#h'LGX=O=,bsk+XH,PJ@,c]K(mBBh#tdB\@-P.+Ut5IBu&989l>"dQpUOL5rcs:MbQ&C#W^XJB,$nho=IA:m>JG2])*\G%Qb.CI_)=YlkA<GdL)b6#*parm6:PMi=!of7Xe'2ueK-f:`r<k&6PaOPKOOU6qTWGh.QtD.2#6umFZh<bX*(3:AQhK$QmcG`QT.*s%#`M5Ok'j)0=Z^(uc=Eao/cju/bkDY^K&[kp+MHELE$H,#A5P@"Qn3\I+*=.M4t5M@r&QWKF+-@W:Zp:da>@rN*kBm\Bq>pc/?ddk%i]NDrS:++g-joD,cOjhuIdXJYI%W&4)#Fc*,LE&bm%I"qP]F1u;-i0pZRpN'1i"VYq[^k"U@C!j*hgtTD!IM`Qr_Y+0[A!ib5UD8%s5pfJs,TDBk''%;s+bg5rSqhqr;FNOIfFcM%t+Cqj#7L`rPSAZr."bCL[Q>apb2[Dmm+l?/,:iInTY$#^V'ID8aT25~>%AI9_PrivateDataEnd